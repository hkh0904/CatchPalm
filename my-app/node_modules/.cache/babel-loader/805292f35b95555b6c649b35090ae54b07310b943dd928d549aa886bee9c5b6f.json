{"ast":null,"code":"/*!\n * Platform.js v1.3.6\n * Copyright 2014-2020 Benjamin Tan\n * Copyright 2011-2013 John-David Dalton\n * Available under MIT license\n */\n;\n(function () {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = objectTypes[typeof window] && window || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4': '10 Technical Preview',\n      '6.3': '8.1',\n      '6.2': '8',\n      '6.1': 'Server 2008 R2 / 7',\n      '6.0': 'Server 2008 / Vista',\n      '5.2': 'Server 2003 / XP 64-bit',\n      '5.1': 'XP',\n      '5.01': '2000 SP1',\n      '5.0': '2000',\n      '4.0': 'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) && (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n    os = format(os.replace(/ ce$/i, ' CE').replace(/\\bhpw/i, 'web').replace(/\\bMacintosh\\b/, 'Mac OS').replace(/_PowerPC\\b/i, ' OS').replace(/\\b(OS X) [^ \\d]+/i, '$1').replace(/\\bMac (OS X)\\b/, '$1').replace(/\\/(\\d)/, ' $1').replace(/_/g, '.').replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '').replace(/\\bx86\\.64\\b/gi, 'x86_64').replace(/\\b(Windows Phone) OS\\b/, '$1').replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1').split(' on ')[0]);\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n      length = object ? object.length : 0;\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string) ? string : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null ? capitalize(value) : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) && (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function (value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext ? !!nav.likeChrome : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n      airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n      enviroClass = isCustomContext ? objectClass : 'Environment',\n      javaClass = isCustomContext && context.java ? 'JavaPackage' : getClassOf(context.java),\n      phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = isCustomContext && opera ? opera['[[Class]]'] : getClassOf(opera)) ? operaClass : opera = null;\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([{\n      'label': 'EdgeHTML',\n      'pattern': 'Edge'\n    }, 'Trident', {\n      'label': 'WebKit',\n      'pattern': 'AppleWebKit'\n    }, 'iCab', 'Presto', 'NetFront', 'Tasman', 'KHTML', 'Gecko']);\n\n    /* Detectable browser names (order is important). */\n    var name = getName(['Adobe AIR', 'Arora', 'Avant Browser', 'Breach', 'Camino', 'Electron', 'Epiphany', 'Fennec', 'Flock', 'Galeon', 'GreenBrowser', 'iCab', 'Iceweasel', 'K-Meleon', 'Konqueror', 'Lunascape', 'Maxthon', {\n      'label': 'Microsoft Edge',\n      'pattern': '(?:Edge|Edg|EdgA|EdgiOS)'\n    }, 'Midori', 'Nook Browser', 'PaleMoon', 'PhantomJS', 'Raven', 'Rekonq', 'RockMelt', {\n      'label': 'Samsung Internet',\n      'pattern': 'SamsungBrowser'\n    }, 'SeaMonkey', {\n      'label': 'Silk',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Sleipnir', 'SlimBrowser', {\n      'label': 'SRWare Iron',\n      'pattern': 'Iron'\n    }, 'Sunrise', 'Swiftfox', 'Vivaldi', 'Waterfox', 'WebPositive', {\n      'label': 'Yandex Browser',\n      'pattern': 'YaBrowser'\n    }, {\n      'label': 'UC Browser',\n      'pattern': 'UCBrowser'\n    }, 'Opera Mini', {\n      'label': 'Opera Mini',\n      'pattern': 'OPiOS'\n    }, 'Opera', {\n      'label': 'Opera',\n      'pattern': 'OPR'\n    }, 'Chromium', 'Chrome', {\n      'label': 'Chrome',\n      'pattern': '(?:HeadlessChrome)'\n    }, {\n      'label': 'Chrome Mobile',\n      'pattern': '(?:CriOS|CrMo)'\n    }, {\n      'label': 'Firefox',\n      'pattern': '(?:Firefox|Minefield)'\n    }, {\n      'label': 'Firefox for iOS',\n      'pattern': 'FxiOS'\n    }, {\n      'label': 'IE',\n      'pattern': 'IEMobile'\n    }, {\n      'label': 'IE',\n      'pattern': 'MSIE'\n    }, 'Safari']);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([{\n      'label': 'BlackBerry',\n      'pattern': 'BB10'\n    }, 'BlackBerry', {\n      'label': 'Galaxy S',\n      'pattern': 'GT-I9000'\n    }, {\n      'label': 'Galaxy S2',\n      'pattern': 'GT-I9100'\n    }, {\n      'label': 'Galaxy S3',\n      'pattern': 'GT-I9300'\n    }, {\n      'label': 'Galaxy S4',\n      'pattern': 'GT-I9500'\n    }, {\n      'label': 'Galaxy S5',\n      'pattern': 'SM-G900'\n    }, {\n      'label': 'Galaxy S6',\n      'pattern': 'SM-G920'\n    }, {\n      'label': 'Galaxy S6 Edge',\n      'pattern': 'SM-G925'\n    }, {\n      'label': 'Galaxy S7',\n      'pattern': 'SM-G930'\n    }, {\n      'label': 'Galaxy S7 Edge',\n      'pattern': 'SM-G935'\n    }, 'Google TV', 'Lumia', 'iPad', 'iPod', 'iPhone', 'Kindle', {\n      'label': 'Kindle Fire',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Nexus', 'Nook', 'PlayBook', 'PlayStation Vita', 'PlayStation', 'TouchPad', 'Transformer', {\n      'label': 'Wii U',\n      'pattern': 'WiiU'\n    }, 'Wii', 'Xbox One', {\n      'label': 'Xbox 360',\n      'pattern': 'Xbox'\n    }, 'Xoom']);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': {\n        'iPad': 1,\n        'iPhone': 1,\n        'iPod': 1\n      },\n      'Alcatel': {},\n      'Archos': {},\n      'Amazon': {\n        'Kindle': 1,\n        'Kindle Fire': 1\n      },\n      'Asus': {\n        'Transformer': 1\n      },\n      'Barnes & Noble': {\n        'Nook': 1\n      },\n      'BlackBerry': {\n        'PlayBook': 1\n      },\n      'Google': {\n        'Google TV': 1,\n        'Nexus': 1\n      },\n      'HP': {\n        'TouchPad': 1\n      },\n      'HTC': {},\n      'Huawei': {},\n      'Lenovo': {},\n      'LG': {},\n      'Microsoft': {\n        'Xbox': 1,\n        'Xbox One': 1\n      },\n      'Motorola': {\n        'Xoom': 1\n      },\n      'Nintendo': {\n        'Wii U': 1,\n        'Wii': 1\n      },\n      'Nokia': {\n        'Lumia': 1\n      },\n      'Oppo': {},\n      'Samsung': {\n        'Galaxy S': 1,\n        'Galaxy S2': 1,\n        'Galaxy S3': 1,\n        'Galaxy S4': 1\n      },\n      'Sony': {\n        'PlayStation': 1,\n        'PlayStation Vita': 1\n      },\n      'Xiaomi': {\n        'Mi': 1,\n        'Redmi': 1\n      }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS(['Windows Phone', 'KaiOS', 'Android', 'CentOS', {\n      'label': 'Chrome OS',\n      'pattern': 'CrOS'\n    }, 'Debian', {\n      'label': 'DragonFly BSD',\n      'pattern': 'DragonFly'\n    }, 'Fedora', 'FreeBSD', 'Gentoo', 'Haiku', 'Kubuntu', 'Linux Mint', 'OpenBSD', 'Red Hat', 'SuSE', 'Ubuntu', 'Xubuntu', 'Cygwin', 'Symbian OS', 'hpwOS', 'webOS ', 'webOS', 'Tablet OS', 'Tizen', 'Linux', 'Mac OS X', 'Macintosh', 'Mac', 'Windows 98;', 'Windows ']);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function (result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (value[product] || value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] || RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result = RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua))) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result = RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua))) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String(guess.label && !RegExp(pattern, 'i').test(guess.label) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0].replace(RegExp(pattern, 'i'), guess).replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ').replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function (result, pattern) {\n        return result || (RegExp(pattern + '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect Android products.\n    // Browsers on Android devices typically provide their product IDS after \"Android;\"\n    // up to \"Build\" or \") AppleWebKit\".\n    // Example:\n    // \"Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36\n    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36\"\n    if (/\\bAndroid\\b/.test(os) && !product && (data = /\\bAndroid[^;]*;(.*?)(?:Build|\\) AppleWebKit)\\b/i.exec(ua))) {\n      product = trim(data[1])\n      // Replace any language codes (eg. \"en-US\").\n      .replace(/^[a-z]{2}-[a-z]{2};\\s*/i, '') || null;\n    }\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } else if (manufacturer && product) {\n      product = product.replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\\\s]', 'i'), manufacturer + ' ').replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\\\w)', 'i'), manufacturer + ' $2');\n    }\n    // Clean up Google TV.\n    if (data = /\\bGoogle TV\\b/.exec(product)) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua)) ? ' ' + data[1].replace(/_/g, '.') : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && /^Linux\\b/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if (manufacturer && manufacturer != 'Google' && (/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua) || /\\bVita\\b/.test(product)) || /\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua)) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect UC Browser speed mode.\n    else if (name == 'UC Browser' && /\\bUCWEB\\b/.test(ua)) {\n      description.push('speed mode');\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) && (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion(['(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$)|UCBrowser|YaBrowser)', 'Version', qualify(name), '(?:Firefox|Minefield|NetFront)']);\n    }\n    // Detect stubborn layout engines.\n    if (data = layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' || /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') || /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' || !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') || layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront') {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch (e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        } else if (typeof context.process == 'object' && !context.process.browser && (data = context.process)) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf(data = context.runtime) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf(data = context.phantom) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && data.major + '.' + data.minor + '.' + data.patch;\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data = /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) || /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) || /\\bMinefield\\b/i.test(ua) && 'a')) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') + (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS|KaiOS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) && (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch (e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data = (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] || version)) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (useFeatures && opera || /Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua) || name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os) || name == 'IE' && (os && !/^Win/.test(os) && version > 5.5 || /\\bWindows XP\\b/.test(os) && version > 8 || version == 8 && !/\\bTrident\\b/.test(ua))) && !reOpera.test(data = parse.call(forOwn, ua.replace(reOpera, '') + ';')) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if (data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1]) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] || version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\b(?:Headless)?Chrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || !likeChrome && !data[1]) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      } else if (name == 'Chrome' && /\\bHeadlessChrome/i.test(ua)) {\n        description.unshift('headless');\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' && (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.\n    else if (/\\bSRWare Iron\\b/.test(name) && !version) {\n      version = getVersion('Chrome');\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf(data = /[\\d.]+$/.exec(os)) == 0 && ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Ensure OS does not include the browser name.\n    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {\n      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (/Browser|Lunascape|Maxthon/.test(name) || name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) || /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': data && !isSpecialCasedOS ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function () {\n          var version = this.version;\n          return this.family + (version && !isSpecialCasedOS ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (name && (/\\bWOW64\\b/i.test(ua) || useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua))) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (os && /^OS X/.test(os.family) && name == 'Chrome' && parseFloat(version) >= 39) {\n      os.architecture = 64;\n    }\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Linux\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\",\n       * \"SuSE\", \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function () {\n        return 'null';\n      }\n    };\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function () {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function (value, key) {\n      freeExports[key] = value;\n    });\n  } else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}).call(this);","map":{"version":3,"names":["objectTypes","root","window","oldRoot","freeExports","exports","freeModule","module","nodeType","freeGlobal","global","self","maxSafeInteger","Math","pow","reOpera","thisBinding","objectProto","Object","prototype","hasOwnProperty","toString","capitalize","string","String","charAt","toUpperCase","slice","cleanupOS","os","pattern","label","data","test","exec","replace","RegExp","format","split","each","object","callback","index","length","forOwn","trim","key","call","getClassOf","value","isHostType","property","type","qualify","reduce","array","accumulator","parse","ua","context","isCustomContext","nav","navigator","userAgent","isModuleScope","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","environment","alpha","beta","doc","document","opera","operamini","operaClass","arch","description","prerelease","useFeatures","version","isSpecialCasedOS","layout","getLayout","name","getName","product","getProduct","manufacturer","getManufacturer","getOS","guesses","result","guess","getVersion","patterns","toStringPlatform","push","unshift","indexOf","parseFloat","lang","System","getProperty","require","join","e","system","process","browser","versions","electron","node","nw","platform","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","family","architecture","cpuClass","define","amd"],"sources":["C:/Users/SSAFY/Desktop/catchpalm/my-app/node_modules/platform/platform.js"],"sourcesContent":["/*!\n * Platform.js v1.3.6\n * Copyright 2014-2020 Benjamin Tan\n * Copyright 2011-2013 John-David Dalton\n * Available under MIT license\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': '(?:Edge|Edg|EdgA|EdgiOS)' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Vivaldi',\n      'Waterfox',\n      'WebPositive',\n      { 'label': 'Yandex Browser', 'pattern': 'YaBrowser' },\n      { 'label': 'UC Browser', 'pattern': 'UCBrowser' },\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chromium',\n      'Chrome',\n      { 'label': 'Chrome', 'pattern': '(?:HeadlessChrome)' },\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Alcatel': {},\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'Huawei': {},\n      'Lenovo': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Oppo': {},\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 },\n      'Xiaomi': { 'Mi': 1, 'Redmi': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'KaiOS',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      { 'label': 'DragonFly BSD', 'pattern': 'DragonFly' },\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect Android products.\n    // Browsers on Android devices typically provide their product IDS after \"Android;\"\n    // up to \"Build\" or \") AppleWebKit\".\n    // Example:\n    // \"Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36\n    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36\"\n    if (/\\bAndroid\\b/.test(os) && !product &&\n        (data = /\\bAndroid[^;]*;(.*?)(?:Build|\\) AppleWebKit)\\b/i.exec(ua))) {\n      product = trim(data[1])\n        // Replace any language codes (eg. \"en-US\").\n        .replace(/^[a-z]{2}-[a-z]{2};\\s*/i, '')\n        || null;\n    }\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } else if (manufacturer && product) {\n      product = product\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\\\s]', 'i'), manufacturer + ' ')\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\\\w)', 'i'), manufacturer + ' $2');\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && /^Linux\\b/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect UC Browser speed mode.\n    else if (name == 'UC Browser' && /\\bUCWEB\\b/.test(ua)) {\n      description.push('speed mode');\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$)|UCBrowser|YaBrowser)',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS|KaiOS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\b(?:Headless)?Chrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      } else if (name == 'Chrome' && /\\bHeadlessChrome/i.test(ua)) {\n        description.unshift('headless');\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.\n    else if (/\\bSRWare Iron\\b/.test(name) && !version) {\n      version = getVersion('Chrome');\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Ensure OS does not include the browser name.\n    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {\n      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Linux\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\",\n       * \"SuSE\", \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}