{"ast":null,"code":"\"use strict\";\n\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionEvent = void 0;\nvar Event_1 = require(\"./Event\");\n/**\n * Triggered by:\n * - {@link SessionEventMap.connectionCreated}\n * - {@link SessionEventMap.connectionDestroyed}\n */\nvar ConnectionEvent = /** @class */function (_super) {\n  __extends(ConnectionEvent, _super);\n  /**\n   * @hidden\n   */\n  function ConnectionEvent(cancelable, target, type, connection, reason) {\n    var _this = _super.call(this, cancelable, target, type) || this;\n    _this.connection = connection;\n    _this.reason = reason;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  // tslint:disable-next-line:no-empty\n  ConnectionEvent.prototype.callDefaultBehavior = function () {};\n  return ConnectionEvent;\n}(Event_1.Event);\nexports.ConnectionEvent = ConnectionEvent;","map":{"version":3,"names":["Event_1","require","ConnectionEvent","_super","__extends","cancelable","target","type","connection","reason","_this","call","prototype","callDefaultBehavior","Event","exports"],"sources":["C:\\Users\\SSAFY\\Desktop\\catchpalm\\my-app\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\Events\\ConnectionEvent.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { ConnectionEventReason } from './Types/Types';\n\n/**\n * Triggered by:\n * - {@link SessionEventMap.connectionCreated}\n * - {@link SessionEventMap.connectionDestroyed}\n */\nexport class ConnectionEvent extends Event {\n    /**\n     * Connection object that was created or destroyed\n     */\n    connection: Connection;\n\n    /**\n     * For `connectionDestroyed` event:\n     * - \"disconnect\": the remote user has called `Session.disconnect()`\n     * - \"forceDisconnectByUser\": the remote user has been evicted from the Session by other user calling `Session.forceDisconnect()`\n     * - \"forceDisconnectByServer\": the remote user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the remote user network connection has dropped\n     * - \"nodeCrashed\": a node has crashed in the server side\n     *\n     * For `connectionCreated` event an empty string\n     */\n    reason: ConnectionEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session, type: string, connection: Connection, reason: ConnectionEventReason) {\n        super(cancelable, target, type);\n        this.connection = connection;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAAA,OAAA,GAAAC,OAAA;AAKA;;;;;AAKA,IAAAC,eAAA,0BAAAC,MAAA;EAAqCC,SAAA,CAAAF,eAAA,EAAAC,MAAA;EAmBjC;;;EAGA,SAAAD,gBAAYG,UAAmB,EAAEC,MAAe,EAAEC,IAAY,EAAEC,UAAsB,EAAEC,MAA6B;IAArH,IAAAC,KAAA,GACIP,MAAA,CAAAQ,IAAA,OAAMN,UAAU,EAAEC,MAAM,EAAEC,IAAI,CAAC;IAC/BG,KAAI,CAACF,UAAU,GAAGA,UAAU;IAC5BE,KAAI,CAACD,MAAM,GAAGA,MAAM;;EACxB;EAEA;;;EAGA;EACAP,eAAA,CAAAU,SAAA,CAAAC,mBAAmB,GAAnB,aAAwB,CAAC;EAC7B,OAAAX,eAAC;AAAD,CAAC,CAjCoCF,OAAA,CAAAc,KAAK;AAA7BC,OAAA,CAAAb,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}