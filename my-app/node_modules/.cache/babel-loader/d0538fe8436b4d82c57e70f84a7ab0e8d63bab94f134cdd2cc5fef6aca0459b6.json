{"ast":null,"code":"\"use strict\";\n\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamEvent = void 0;\nvar Event_1 = require(\"./Event\");\nvar Publisher_1 = require(\"../../OpenVidu/Publisher\");\nvar Session_1 = require(\"../../OpenVidu/Session\");\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n/**\n * @hidden\n */\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Triggered by:\n * - `streamCreated` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamCreated) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamCreated) objects)\n * - `streamDestroyed` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamDestroyed) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamDestroyed) objects)\n */\nvar StreamEvent = /** @class */function (_super) {\n  __extends(StreamEvent, _super);\n  /**\n   * @hidden\n   */\n  function StreamEvent(cancelable, target, type, stream, reason) {\n    var _this = _super.call(this, cancelable, target, type) || this;\n    _this.stream = stream;\n    _this.reason = reason;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  StreamEvent.prototype.callDefaultBehavior = function () {\n    if (this.type === 'streamDestroyed') {\n      if (this.target instanceof Session_1.Session) {\n        // Remote Stream\n        logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n        this.stream.disposeWebRtcPeer();\n      } else if (this.target instanceof Publisher_1.Publisher) {\n        // Local Stream\n        logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Publisher'\");\n        clearInterval(this.target.screenShareResizeInterval);\n        this.stream.isLocalStreamReadyToPublish = false;\n        // Delete Publisher object from OpenVidu publishers array\n        var openviduPublishers = this.target.openvidu.publishers;\n        for (var i = 0; i < openviduPublishers.length; i++) {\n          if (openviduPublishers[i] === this.target) {\n            openviduPublishers.splice(i, 1);\n            break;\n          }\n        }\n      }\n      // Dispose the MediaStream local object\n      this.stream.disposeMediaStream();\n      // Remove from DOM all video elements associated to this Stream, if there's a StreamManager defined\n      // (method Session.subscribe must have been called)\n      if (this.stream.streamManager) this.stream.streamManager.removeAllVideos();\n      // Delete stream from Session.remoteStreamsCreated map\n      this.stream.session.remoteStreamsCreated.delete(this.stream.streamId);\n      // Delete StreamOptionsServer from remote Connection\n      var remoteConnection = this.stream.session.remoteConnections.get(this.stream.connection.connectionId);\n      if (!!remoteConnection && !!remoteConnection.remoteOptions) {\n        var streamOptionsServer = remoteConnection.remoteOptions.streams;\n        for (var i = streamOptionsServer.length - 1; i >= 0; --i) {\n          if (streamOptionsServer[i].id === this.stream.streamId) {\n            streamOptionsServer.splice(i, 1);\n          }\n        }\n      }\n    }\n  };\n  return StreamEvent;\n}(Event_1.Event);\nexports.StreamEvent = StreamEvent;","map":{"version":3,"names":["Event_1","require","Publisher_1","Session_1","OpenViduLogger_1","logger","OpenViduLogger","getInstance","StreamEvent","_super","__extends","cancelable","target","type","stream","reason","_this","call","prototype","callDefaultBehavior","Session","info","disposeWebRtcPeer","Publisher","clearInterval","screenShareResizeInterval","isLocalStreamReadyToPublish","openviduPublishers","openvidu","publishers","i","length","splice","disposeMediaStream","streamManager","removeAllVideos","session","remoteStreamsCreated","delete","streamId","remoteConnection","remoteConnections","get","connection","connectionId","remoteOptions","streamOptionsServer","streams","id","Event","exports"],"sources":["C:\\Users\\SSAFY\\Desktop\\catchpalm\\my-app\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\Events\\StreamEvent.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Publisher } from '../../OpenVidu/Publisher';\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { StreamEventReason } from './Types/Types';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Triggered by:\n * - `streamCreated` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamCreated) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamCreated) objects)\n * - `streamDestroyed` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamDestroyed) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamDestroyed) objects)\n */\nexport class StreamEvent extends Event {\n    /**\n     * Stream object that was created or destroyed\n     */\n    stream: Stream;\n\n    /**\n     * For 'streamDestroyed' event:\n     * - \"unpublish\": method `Session.unpublish()` has been called\n     * - \"disconnect\": method `Session.disconnect()` has been called\n     * - \"forceUnpublishByUser\": some user has called `Session.forceUnpublish()` over the Stream\n     * - \"forceDisconnectByUser\": some user has called `Session.forceDisconnect()` over the Stream\n     * - \"forceUnpublishByServer\": the user's stream has been unpublished from the Session by the application\n     * - \"forceDisconnectByServer\": the user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the user's network connection has dropped\n     * - \"nodeCrashed\": a node has crashed in the server side\n     *\n     * For 'streamCreated' empty string\n     */\n    reason: StreamEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session | Publisher, type: string, stream: Stream, reason: StreamEventReason) {\n        super(cancelable, target, type);\n        this.stream = stream;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    callDefaultBehavior() {\n        if (this.type === 'streamDestroyed') {\n            if (this.target instanceof Session) {\n                // Remote Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n                this.stream.disposeWebRtcPeer();\n            } else if (this.target instanceof Publisher) {\n                // Local Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Publisher'\");\n                clearInterval((<Publisher>this.target).screenShareResizeInterval);\n                this.stream.isLocalStreamReadyToPublish = false;\n\n                // Delete Publisher object from OpenVidu publishers array\n                const openviduPublishers = (<Publisher>this.target).openvidu.publishers;\n                for (let i = 0; i < openviduPublishers.length; i++) {\n                    if (openviduPublishers[i] === <Publisher>this.target) {\n                        openviduPublishers.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n\n            // Dispose the MediaStream local object\n            this.stream.disposeMediaStream();\n\n            // Remove from DOM all video elements associated to this Stream, if there's a StreamManager defined\n            // (method Session.subscribe must have been called)\n            if (this.stream.streamManager) this.stream.streamManager.removeAllVideos();\n\n            // Delete stream from Session.remoteStreamsCreated map\n            this.stream.session.remoteStreamsCreated.delete(this.stream.streamId);\n\n            // Delete StreamOptionsServer from remote Connection\n            const remoteConnection = this.stream.session.remoteConnections.get(this.stream.connection.connectionId);\n            if (!!remoteConnection && !!remoteConnection.remoteOptions) {\n                const streamOptionsServer = remoteConnection.remoteOptions.streams;\n                for (let i = streamOptionsServer.length - 1; i >= 0; --i) {\n                    if (streamOptionsServer[i].id === this.stream.streamId) {\n                        streamOptionsServer.splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}