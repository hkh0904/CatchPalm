{"ast":null,"code":"var chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\nif (typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined') {\n  var isFirefox = typeof window.InstallTrigger !== 'undefined';\n  var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n  var isChrome = !!window.chrome && !isOpera;\n  window.addEventListener('message', function (event) {\n    if (event.origin != window.location.origin) {\n      return;\n    }\n    onMessageCallback(event.data);\n  });\n}\nfunction onMessageCallback(data) {\n  if (data == 'PermissionDeniedError') {\n    if (screenCallback) return screenCallback('PermissionDeniedError');else throw new Error('PermissionDeniedError');\n  }\n  if (data == 'rtcmulticonnection-extension-loaded') {\n    chromeMediaSource = 'desktop';\n  }\n  if (data.sourceId && screenCallback) {\n    screenCallback(sourceId = data.sourceId, data.canRequestAudioTrack === true);\n  }\n}\nfunction isChromeExtensionAvailable(callback) {\n  if (!callback) return;\n  if (chromeMediaSource == 'desktop') return callback(true);\n  window.postMessage('are-you-there', '*');\n  setTimeout(function () {\n    if (chromeMediaSource == 'screen') {\n      callback(false);\n    } else callback(true);\n  }, 2000);\n}\nfunction getSourceId(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('get-sourceId', '*');\n}\nfunction getCustomSourceId(arr, callback) {\n  if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage({\n    'get-custom-sourceId': arr\n  }, '*');\n}\nfunction getSourceIdWithAudio(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('audio-plus-tab', '*');\n}\nfunction getChromeExtensionStatus(extensionid, callback) {\n  if (isFirefox) return callback('not-chrome');\n  if (arguments.length != 2) {\n    callback = extensionid;\n    extensionid = 'lfcgfepafnobdloecchnfaclibenjold';\n  }\n  var image = document.createElement('img');\n  image.src = 'chrome-extension://' + extensionid + '/icon.png';\n  image.onload = function () {\n    chromeMediaSource = 'screen';\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n      if (chromeMediaSource == 'screen') {\n        callback('installed-disabled');\n      } else callback('installed-enabled');\n    }, 2000);\n  };\n  image.onerror = function () {\n    callback('not-installed');\n  };\n}\nfunction getScreenConstraintsWithAudio(callback) {\n  getScreenConstraints(callback, true);\n}\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n  sourceId = '';\n  var firefoxScreenConstraints = {\n    mozMediaSource: 'window',\n    mediaSource: 'window'\n  };\n  if (isFirefox) return callback(null, firefoxScreenConstraints);\n  var screen_constraints = {\n    mandatory: {\n      chromeMediaSource: chromeMediaSource,\n      maxWidth: screen.width > 1920 ? screen.width : 1920,\n      maxHeight: screen.height > 1080 ? screen.height : 1080\n    },\n    optional: []\n  };\n  if (chromeMediaSource == 'desktop' && !sourceId) {\n    if (captureSourceIdWithAudio) {\n      getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n        if (canRequestAudioTrack) {\n          screen_constraints.canRequestAudioTrack = true;\n        }\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    } else {\n      getSourceId(function (sourceId) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    }\n    return;\n  }\n  if (chromeMediaSource == 'desktop') {\n    screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n  }\n  callback(null, screen_constraints);\n}\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;","map":{"version":3,"names":["chromeMediaSource","sourceId","screenCallback","window","navigator","userAgent","isFirefox","InstallTrigger","isOpera","opera","indexOf","isChrome","chrome","addEventListener","event","origin","location","onMessageCallback","data","Error","canRequestAudioTrack","isChromeExtensionAvailable","callback","postMessage","setTimeout","getSourceId","getCustomSourceId","arr","forEach","getSourceIdWithAudio","getChromeExtensionStatus","extensionid","arguments","length","image","document","createElement","src","onload","onerror","getScreenConstraintsWithAudio","getScreenConstraints","captureSourceIdWithAudio","firefoxScreenConstraints","mozMediaSource","mediaSource","screen_constraints","mandatory","maxWidth","screen","width","maxHeight","height","optional","chromeMediaSourceId","exports"],"sources":["C:\\Users\\SSAFY\\Desktop\\catchpalm\\my-app\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\ScreenSharing\\Screen-Capturing.js"],"sourcesContent":["// global variables\nvar chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\n\nif (typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined') {\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n\n    window.addEventListener('message', function (event) {\n        if (event.origin != window.location.origin) {\n            return;\n        }\n        onMessageCallback(event.data);\n    });\n}\n\n// and the function that handles received messages\nfunction onMessageCallback(data) {\n    // \"cancel\" button is clicked\n    if (data == 'PermissionDeniedError') {\n        if (screenCallback) return screenCallback('PermissionDeniedError');\n        else throw new Error('PermissionDeniedError');\n    }\n    // extension notified his presence\n    if (data == 'rtcmulticonnection-extension-loaded') {\n        chromeMediaSource = 'desktop';\n    }\n    // extension shared temp sourceId\n    if (data.sourceId && screenCallback) {\n        screenCallback((sourceId = data.sourceId), data.canRequestAudioTrack === true);\n    }\n}\n\n// this method can be used to check if chrome extension is installed & enabled.\nfunction isChromeExtensionAvailable(callback) {\n    if (!callback) return;\n    if (chromeMediaSource == 'desktop') return callback(true);\n\n    // ask extension if it is available\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n        if (chromeMediaSource == 'screen') {\n            callback(false);\n        } else callback(true);\n    }, 2000);\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceId(callback) {\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n    if (sourceId) return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage('get-sourceId', '*');\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getCustomSourceId(arr, callback) {\n    if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage(\n        {\n            'get-custom-sourceId': arr\n        },\n        '*'\n    );\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceIdWithAudio(callback) {\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage('audio-plus-tab', '*');\n}\n\nfunction getChromeExtensionStatus(extensionid, callback) {\n    if (isFirefox) return callback('not-chrome');\n    if (arguments.length != 2) {\n        callback = extensionid;\n        extensionid = 'lfcgfepafnobdloecchnfaclibenjold'; // default extension-id\n    }\n    var image = document.createElement('img');\n    image.src = 'chrome-extension://' + extensionid + '/icon.png';\n    image.onload = function () {\n        chromeMediaSource = 'screen';\n        window.postMessage('are-you-there', '*');\n        setTimeout(function () {\n            if (chromeMediaSource == 'screen') {\n                callback('installed-disabled');\n            } else callback('installed-enabled');\n        }, 2000);\n    };\n    image.onerror = function () {\n        callback('not-installed');\n    };\n}\n\nfunction getScreenConstraintsWithAudio(callback) {\n    getScreenConstraints(callback, true);\n}\n\n// this function explains how to use above methods/objects\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n    sourceId = '';\n    var firefoxScreenConstraints = {\n        mozMediaSource: 'window',\n        mediaSource: 'window'\n    };\n    if (isFirefox) return callback(null, firefoxScreenConstraints);\n    // this statement defines getUserMedia constraints\n    // that will be used to capture content of screen\n    var screen_constraints = {\n        mandatory: {\n            chromeMediaSource: chromeMediaSource,\n            maxWidth: screen.width > 1920 ? screen.width : 1920,\n            maxHeight: screen.height > 1080 ? screen.height : 1080\n        },\n        optional: []\n    };\n    // this statement verifies chrome extension availability\n    // if installed and available then it will invoke extension API\n    // otherwise it will fallback to command-line based screen capturing API\n    if (chromeMediaSource == 'desktop' && !sourceId) {\n        if (captureSourceIdWithAudio) {\n            getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n\n                if (canRequestAudioTrack) {\n                    screen_constraints.canRequestAudioTrack = true;\n                }\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        } else {\n            getSourceId(function (sourceId) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        return;\n    }\n\n    // this statement sets gets 'sourceId\" and sets \"chromeMediaSourceId\"\n    if (chromeMediaSource == 'desktop') {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n    }\n\n    // now invoking native getUserMedia API\n    callback(null, screen_constraints);\n}\n\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}