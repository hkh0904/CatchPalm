{"version":3,"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","_getMaxListeners","that","getMaxListeners","emit","type","arguments","push","doError","events","error","er","err","message","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","name","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","Array","index","pop","ret","Promise","resolve","reject","errorListener","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","normalice","freeice","opts","servers","stun","turn","stunCount","turnCount","selected","getServers","out","input","idx","Math","random","splice","map","url","WildEmitter","getMaxVolume","analyser","fftBins","maxVolume","Infinity","getFloatFrequencyData","ii","audioContextType","window","AudioContext","webkitAudioContext","audioContext","stream","options","harker","smoothing","interval","threshold","play","history","running","sourceNode","createAnalyser","fftSize","smoothingTimeConstant","Float32Array","frequencyBinCount","jquery","HTMLAudioElement","HTMLVideoElement","createMediaElementSource","createMediaStreamSource","connect","destination","speaking","suspend","resume","onstatechange","setThreshold","setInterval","stop","disconnect","speakingHistory","looper","setTimeout","currentVolume","inherits","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","__extends","extendStatics","d","b","setPrototypeOf","__proto__","hasOwnProperty","__","JL","loggerName","reduce","callback","initialValue","previousValue","accumulatedLoggerName","logger","split","prev","curr","currentLogger","Logger","requestId","entryId","_createXMLHttpRequest","XMLHttpRequest","_getTime","Date","getTime","_console","_appenderNames","copyProperty","propertyName","from","to","allow","filters","enabled","userAgentRegex","RegExp","test","navigator","userAgent","ipRegex","clientIP","allowMessage","disallow","stringifyLogObjectFunction","logObject","toString","StringifiedLogObject","msg","meta","finalString","stringifyLogObject","actualLogObject","Boolean","serialize","JSON","stringify","setOptions","getAllLevel","getTraceLevel","getDebugLevel","getInfoLevel","getWarnLevel","getErrorLevel","getFatalLevel","getOffLevel","levelToString","level","Exception","data","inner","LogItem","l","newLogItem","levelNbr","clearTimer","timer","id","clearTimeout","setTimer","timeoutMs","Appender","appenderName","sendLogItems","sendWithBufferLevel","storeInBufferLevel","bufferSize","batchSize","maxBatchSize","batchTimeout","sendTimeout","buffer","batchBuffer","batchTimeoutTimer","sendTimeoutTimer","nbrLogItemsSkipped","nbrLogItemsBeingSent","emptyNameErrorMessage","indexOf","addLogItemsToBuffer","logItems","maxMessages","sendBatch","batchBufferHasOverdueMessages","messageAgeMs","batchBufferHasStrandedMessage","sendBatchIfComplete","onSendingEnded","log","logItem","AjaxAppender","_super","sendLogItemsAjax","successCallback","xhr","readyState","abort","ajaxUrl","defaultAjaxUrl","open","setRequestHeader","onreadystatechange","status","json","lg","beforeSend","defaultBeforeSend","finalmsg","send","ConsoleAppender","sendLogItemsConsole","clog","logEntry","cerror","cwarn","cinfo","info","cdebug","debug","li","seenRegexes","buildExceptionObject","excObject","stack","compositeMessage","appenders","logData","onceOnly","trace","fatal","fatalException","createAjaxAppender","createConsoleAppender","defaultAppender","__esModule","define","amd","__jsnlog_configure","onerror","errorMsg","lineNumber","column","errorObj","onunhandledrejection","event","reason","Mime","_types","_extensions","getType","getExtension","typeMap","force","extensions","toLowerCase","ext","substr","path","last","replace","hasPath","hasDot","$1","protocols","protocol","parts","output","trim","username","credential","urls","objectTypes","function","object","root","oldRoot","freeExports","freeModule","nodeType","freeGlobal","global","self","maxSafeInteger","pow","reOpera","thisBinding","objectProto","capitalize","string","charAt","toUpperCase","cleanupOS","os","pattern","label","exec","format","each","forOwn","getClassOf","isHostType","property","qualify","array","accumulator","parse","ua","isCustomContext","nav","isModuleScope","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","environment","alpha","beta","doc","document","opera","operamini","operaClass","arch","description","prerelease","useFeatures","version","isSpecialCasedOS","layout","getLayout","getName","product","getProduct","manufacturer","getManufacturer","Apple","iPad","iPhone","iPod","Alcatel","Archos","Amazon","Kindle","Asus","Transformer","Nook","BlackBerry","PlayBook","Google","Nexus","HP","TouchPad","HTC","Huawei","Lenovo","LG","Microsoft","Xbox","Motorola","Xoom","Nintendo","Wii","Nokia","Lumia","Oppo","Samsung","Sony","PlayStation","Xiaomi","Mi","Redmi","getOS","guesses","result","guess","getVersion","patterns","toStringPlatform","parseFloat","lang","System","getProperty","join","system","process","browser","versions","electron","node","nw","platform","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","architecture","family","cpuClass","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","Item","title","env","argv","noop","binding","cwd","chdir","dir","umask","MAX_LENGTH","MAX_SAFE_INTEGER","re","parseOptions","compareIdentifiers","SemVer","loose","includePrerelease","match","LOOSE","FULL","raw","num","build","compare","other","compareMain","comparePre","compareBuild","inc","release","identifier","SEMVER_SPEC_VERSION","MAX_SAFE_COMPONENT_LENGTH","NODE_DEBUG","numeric","anum","bnum","rcompareIdentifiers","filter","k","src","createToken","isGlobal","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","_nil","default","_parse","_stringify","_v","_v2","_v3","_v4","_validate","_version","_interopRequireDefault","obj","md5","bytes","unescape","encodeURIComponent","Uint8Array","charCodeAt","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","x","hex","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","cnt","md5cmn","q","s","_default","randomUUID","crypto","uuid","v","rng","getRandomValues","rnds8","z","ROTL","sha1","K","H","isArray","N","ceil","M","j","floor","W","T","unsafeStringify","byteToHex","offset","_rng","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","buf","clockseq","seedBytes","msecs","now","nsecs","dt","tl","tmh","_md","v3","URL","DNS","v35","stringToBytes","str","hashfunc","generateUUID","namespace","_namespace","_native","v4","rnds","_sha","v5","_regex","validate","mixin","isWildEmitter","groupName","fn","callbacks","hasGroup","group","func","_groupName","releaseGroup","item","handlers","specialCallbacks","getWildcardCallbacks","eventName","proto","originalGlobalValue","indexOfListener","alias","aliasClosure","getListeners","evt","_getEvents","response","flattenListeners","flatListeners","getListenersAsObject","isValidListener","listenerIsWrapped","addOnceListener","defineEvent","defineEvents","evts","addListeners","manipulateListeners","removeListeners","remove","single","multiple","removeEvent","emitEvent","listenersMap","_getOnceReturnValue","trigger","setOnceReturnValue","_onceReturnValue","noConflict","author","dependencies","hark","jsnlog","mime","semver","devDependencies","browserify","grunt","terser","tsify","tslint","typedoc","typescript","license","main","repository","scripts","docs","types","typesVersions","OpenVidu_1","jsnlog_1","globalThis","OpenVidu","Stream_1","OpenViduLogger_1","ExceptionEvent_1","OpenViduLogger","getInstance","Connection","session","connectionOptions","disposed","role","localOptions","connectionId","creationTime","createdAt","metadata","rpcSessionId","sessionId","record","remoteOptions","streams","initRemoteStreams","sendIceCandidate","candidate","_this","outboundStreamOpts","openvidu","sendRequest","endpointName","sdpMid","sdpMLineIndex","ExceptionEvent","ExceptionEventName","ICE_CANDIDATE_ERROR","forEach","streamOptions","connection","hasAudio","hasVideo","audioActive","videoActive","typeOfVideo","frameRate","videoDimensions","Stream","addStream","inboundStreamOpts","removeStream","dispose","EventDispatcher","userHandlerArrowHandler","WeakMap","ee","onAux","arrowHandler","onceAux","delete","offAux","StreamPropertyChangedEvent_1","OpenViduError_1","Filter","Map","execMethod","method","params","streamId","finalParams","successExecMethod","triggerEvent","oldValue","assign","lastExecMethod","StreamPropertyChangedEvent","streamManager","startsWith","OpenViduError","OpenViduErrorName","VIRTUAL_BACKGROUND_ERROR","_a","virtualBackgroundSinkElements","VB","updateValues","then","catch","stringParams","OPENVIDU_PERMISSION_DENIED","eventType","LocalRecorderState_1","Platform_1","LocalRecorder","chunks","PlatformUtils","LocalRecorderState","READY","MediaRecorder","mimeType","mediaRecorder","getMediaStream","start","ondataavailable","size","onstart","onstop","onStopDefault","onpause","onresume","RECORDING","FINISHED","pause","PAUSED","preview","parentElement","videoPreview","createElement","autoplay","isSafariBrowser","playsInline","parentElementDom","getElementById","appendChild","videoPreviewSrc","clean","blob","download","style","display","body","createObjectURL","href","click","revokeObjectURL","removeChild","getBlob","uploadAsBinary","endpoint","headers","http_1","_i","responseText","uploadAsMultipartfile","http_2","sendable","FormData","append","Blob","LocalRecorder_1","Publisher_1","Session_1","SessionDisconnectedEvent_1","VideoInsertMode_1","screenSharingAuto","screenSharing","OpenViduLoggerConfiguration_1","RpcBuilder","packageJson","masterNodeHasCrashed","publishers","secret","recorder","stt","life","advancedConfiguration","webrtcStatsInterval","sendBrowserLogs","OpenViduLoggerConfiguration","disabled","isAtLeastPro","isEnterprise","libraryVersion","getDescription","isMobileDevice","isReactNative","onOrientationChanged","publisher","isLocalStreamPublished","sendNewVideoDimensionsIfRequired","initSession","Session","initPublisher","targetElement","param2","param3","properties","audioSource","MediaStreamTrack","videoSource","insertMode","VideoInsertMode","APPEND","mirror","publishAudio","publishVideo","resolution","videoSimulcast","Publisher","completionHandler","initialize","initPublisherAsync","initLocalRecorder","checkSystemRequirements","isIPhoneOrIPad","isIOSWithSafari","isChromeMobileBrowser","isFirefoxMobileBrowser","isOperaMobileBrowser","isEdgeMobileBrowser","isIonicIos","isChromeBrowser","isFirefoxBrowser","isOperaBrowser","isEdgeBrowser","isSamsungBrowser","isAndroidBrowser","isElectron","isNodeJs","isMotorolaEdgeDevice","checkScreenSharingCapabilities","canScreenShare","getDevices","mediaDevices","enumerateDevices","deviceInfos","devices","isIonicAndroid","cordova","plugins","EnumerateDevicesPlugin","getEnumerateDevices","pluginDevices","pluginAudioDevices","videoDevices","audioDevices","device","kind","deviceInfo","deviceId","defaultMatch","includes","wiredMatch","wirelessMatch","getUserMedia","askForAudioStreamOnly","previousMediaStream","constraints","__awaiter","definedAudioConstraint","audio","constraintsAux","video","audioOnlyStream","sent","addTrack","getAudioTracks","track","getVideoTracks","generateAudioDeviceError","error_4","generateMediaConstraints","myConstraints","_c","videoTrack","audioTrack","_b","addAlreadyProvidedTracks","MediaStream","mustAskForAudioTrackLater","mediaStream","errorName","SCREEN_CAPTURE_DENIED","errorMessage","error_1","error_2","DEVICE_ACCESS_DENIED","error_3","enableProdMode","setAdvancedConfiguration","configuration","WAIT_INTERVAL","MAX_ATTEMPTS","attempts","oldWidth","width","oldHeight","_d","height","repeatUntilChangeOrMaxAttempts","getVideoDimensions","newDimensions","sendVideoDimensionsChangedEvent","newWidth","newHeight","newValue","sendVideoData","sendTrackChangedEvent","oldLabel","newLabel","propertyType","publisherProperties","NO_INPUT_SOURCE_SET","ideal","widthAndHeight","idealWidth","idealHeight","configureDeviceIdOrScreensharing","startWs","onConnectSucces","config","heartbeat","ws","uri","wsUri","onconnected","ondisconnect","disconnectCallback","onreconnecting","reconnectingCallback","onreconnected","reconnectedCallback","ismasternodecrashed","isMasterNodeCrashed","rpc","requestTimeout","heartbeatRequestTimeout","participantJoined","onParticipantJoined","participantPublished","onParticipantPublished","participantUnpublished","onParticipantUnpublished","participantLeft","onParticipantLeft","participantEvicted","onParticipantEvicted","recordingStarted","onRecordingStarted","recordingStopped","onRecordingStopped","broadcastStarted","onBroadcastStarted","broadcastStopped","onBroadcastStopped","sendMessage","onNewMessage","streamPropertyChanged","onStreamPropertyChanged","connectionPropertyChanged","onConnectionPropertyChanged","networkQualityLevelChanged","onNetworkQualityLevelChangedChanged","filterEventDispatched","onFilterEventDispatched","iceCandidate","recvIceCandidate","mediaError","onMediaError","masterNodeCrashedNotification","onMasterNodeCrashedNotification","forciblyReconnectSubscriber","onForciblyReconnectSubscriber","speechToTextMessage","onSpeechToTextMessage","speechToTextDisconnected","onSpeechToTextDisconnected","jsonRpcClient","clients","JsonRpcClient","onLostConnection","close","getWsReadyState","getReadyState","closeWs","getWsUri","getSecret","getRecorder","getStt","INPUT_AUDIO_DEVICE_NOT_FOUND","constraint","exact","PUBLISHER_PROPERTIES_ERROR","DEVICE_ALREADY_IN_USE","INPUT_AUDIO_DEVICE_GENERIC_ERROR","lastVideoTrackConstraints","getConstraints","isScreenShare","setVideoSource","SCREEN_SHARING_NOT_SUPPORTED","prefix","videoSourceString","electronScreenId","mandatory","chromeMediaSource","chromeMediaSourceId","screenShareChromeExtension","getScreenConstraints","screenConstraints","error_5","extensionId","getChromeExtensionStatus","error_6","SCREEN_EXTENSION_DISABLED","error_7","SCREEN_EXTENSION_NOT_INSTALLED","firefoxString","getScreenId","sourceId","extensionUrl","GENERIC_ERROR","isRoomAvailable","alert","reconnectWebsocketThroughRpcConnectMethod","reconnect","notifyLostConnection_1","rpcSessionStatus","resetPing","onRecoveredConnection","sessionDisconnectEvent","SessionDisconnectedEvent","callDefaultBehavior","StreamManager_1","StreamEvent_1","TypeOfVideo_1","targEl","mediaConstraints","accessAllowed","isSubscribedToRemote","accessDenied","streamEvent","StreamEvent","affectedMediaStream","displayMyRemote","localMediaStreamWhenSubscribedToRemote","resource","affectedMediaStream_1","mustRestartMediaStream_1","lastVBFilter","removeFilterAux","oldVideoTrack","removeTrack","replaceVideoTrack","tr","replaceTrackInRtcRtpSender","applyFilter","subscribeToRemote","subscribeToMyRemote","replaceTrack","replaceTrackAux","timeForDialogEvent","errorCallback","openViduError","contentHint","_e","TypeOfVideo","SCREEN","CUSTOM","CAMERA","IPCAM","initializeVideoReference","updateMediaStreamInVideos","firstVideoElement","isSendVideo","dimensions","isSendScreen","screenShareResizeInterval","settings","getSettings","widthChanged","heightChanged","isLocalStreamReadyToPublish","getMediaSuccess","clearPermissionDialogTimer","startTime","isSendAudio","setPermissionDialogTimer","getMediaError","INPUT_VIDEO_DEVICE_NOT_FOUND","outboundStreamOptions","setOutboundStreamOptions","updateLastConstraints","trackOriginalEnabledValue","replaceTrackInMediaStream","requiresDomInsertion","videoReference","loadedmetadataListener","resolveDimensions","videoWidth","videoHeight","interval_1","clearInterval","reestablishStreamPlayingEvent","addPlayEventToFirstVideo","muted","controls","setMediaStream","createVideoElement","srcObject","removedTrack","trackInfo","disableHarkSpeakingEvent","disableHarkStoppedSpeakingEvent","disableHarkVolumeChangeEvent","initHarkEvents","waitTime","permissionDialogTimeout","senders","getRTCPeerConnection","getSenders","sender","find","StreamManager","Connection_1","Filter_1","Subscriber_1","EventDispatcher_1","ConnectionEvent_1","FilterEvent_1","RecordingEvent_1","SignalEvent_1","SpeechToTextEvent_1","ConnectionPropertyChangedEvent_1","NetworkQualityLevelChangedEvent_1","semverMajor","semverMinor","streamManagers","remoteStreamsCreated","remoteConnections","token","processToken","participantId","stringClientMetadata","connectAux","BROWSER_NOT_SUPPORTED","getFamily","leave","subscribe","param4","subscribeToAudio","subscribeToVideo","sessionConnected","notConnectedError","subscriber","Subscriber","subscribeAsync","unsubscribe","connectionId_1","removeAllVideos","disposeWebRtcPeer","disposeMediaStream","publish","publishedOnce","unpublish","forceDisconnect","forceUnpublish","signal","signalMessage","connectionIds_1","typeAux","substring","subscribeToSpeechToText","unsubscribeFromSpeechToText","remoteConnection","enableHarkSpeakingEvent","enableHarkStoppedSpeakingEvent","enableOnceHarkSpeakingEvent","enableOnceHarkStoppedSpeakingEvent","anySpeechEventListenerEnabled","getConnection","ConnectionEvent","getRemoteConnection","afterConnectionFound","con","stopPublisherStream","strippedType","SignalEvent","ConnectionPropertyChangedEvent","NetworkQualityLevelChangedEvent","candidateInit","RTCIceCandidate","senderConnectionId","getWebRtcPeer","addIceCandidate","onSessionClosed","reconnectBrokenStreams","RecordingEvent","eventHandler","actualHandlers","FilterEvent","stream_1","setupReconnectionEventEmitter","reconnectionEventEmitter","callback_1","eventAux","completeWebRtcPeerReceive","sdpOffer","finalResolveForSubscription","finalRejectForSubscription","errMsg","someReconnection","streamIceConnectionStateBroken","initWebRtcPeerSend","initWebRtcPeerReceive","ev","SpeechToTextEvent","text","SPEECH_TO_TEXT_DISCONNECTED","eventArray","forced","stopVideoDataIntervals","flush","initializeParams","joinParams","sdkVersion","intervalSeconds","doInterval","maxLoops","obtainAndSendVideo_1","pc","connectionState","getStats","statsMap","arr_1","stats","frameHeight","frameWidth","loops_1","videoDataInterval","videoDataTimeout","OPENVIDU_NOT_CONNECTED","onlyOnce","handlersInSession","h","listenersInSession","listenersInStreamManager","handlersInStreamManager","getTokenParams","host","hostname","port","pathname","search","hash","queryParams","decodeURI","param","values","edition","httpUri","processJoinRoomResponse","events_1","connections","existingParticipants","remoteConnectionOptions","recordingId","recordingName","operation","tokenParams","customIceServers","iceServers","iceServer","rtcIceServer","finalUserId","mediaServer","capabilities","minorDifference","configureJSNLog","WebRtcPeer_1","WebRtcStats_1","PublisherSpeakingEvent_1","StreamManagerEvent_1","uuid_1","isSubscribeToRemote","harkSpeakingEnabled","harkSpeakingEnabledOnce","harkStoppedSpeakingEnabled","harkStoppedSpeakingEnabledOnce","harkVolumeChangeEnabled","harkVolumeChangeEnabledOnce","updateMediaStream","reconnectStream","resolveApplyFilter","videos","openviduToken_1","tokenParams_1","btoa","afterScriptLoaded_1","mediaStreamClone","clone","videoClone","cloneNode","VirtualBackground","SOURCE_VIDEO_PREFIX","virtualBackgroundSourceElements","hideHtmlElement","appendHtmlElementToHiddenContainer","openviduServerUrl","openviduToken","inputVideo","inputResolution","outputFramerate","filteredVideo","backgroundBlur","backgroundImage","remote","script","onload","optionsString","removeFilter","webRtcPeer","isDisposing","resolveRemoveFilter","getTracks","cleanUp","webrtcId","getId","stopWebRtcStats","speechEvent","screen","trackSettings","displaySurface","setHarkListenerIfNotExists","PublisherSpeakingEvent","disabledByOnce","enableHarkVolumeChangeEvent","harkEvent","oldVolumeValue","StreamManagerEvent","enableOnceHarkVolumeChangeEvent","isLocal","getSelectedIceCandidate","webRtcStats","getSelectedIceCandidateInfo","report","getRemoteIceCandidateList","remoteCandidatesQueue","getLocalIceCandidateList","localCandidatesQueue","forceMediaReconnectionAfterNetworkDrop","iceConnectionState","harkOptions","publisherSpeakingEventsOptions","finalResolve","finalReject","successOfferCallback","sdpOfferParam","sdpString","doLoopback","processRemoteAnswer","sdpAnswer","remotePeerSuccessfullyEstablished","initWebRtcStats","simulcast","onIceCandidate","onIceConnectionStateException","onIceConnectionStateExceptionHandler","getIceServersConf","WebRtcPeerSendrecv","WebRtcPeerSendonly","addIceConnectionStateChangeListener","createOffer","processLocalOffer","sdp","initWebRtcPeerReceiveFromServer","initWebRtcPeerReceiveFromClient","forciblyReconnect","sdpOfferByServer","sendSdpToServer","WebRtcPeerRecvonly","processRemoteOffer","createAnswer","processLocalAnswer","getReceivers","exceptionName","ICE_CONNECTION_FAILED","onIceConnectionFailed","ICE_CONNECTION_DISCONNECTED","onIceConnectionDisconnected","reconnectStreamAndLogResultingIceConnectionState","iceConnectionDisconnectedExceptionTimeout","awaitWebRtcPeerConnectionState","reconnectStreamAndReturnIceConnectionState","finalIceStateAfterReconnection","intervals","isWebsocketConnected","isWsConnected","msResponseTimeout","wsReadyState","responseTimeout_1","WebRtcStats","isEnabled","returnValue","gatherStatsForPeer","isReportWanted","finalReport","timestamp","ssrc","firCount","pliCount","nackCount","qpSum","mediaType","framesEncoded","packetsSent","bytesSent","totalRoundTripTime","availableOutgoingBitrate","currentRoundTripTime","responsesReceived","framesDecoded","packetsReceived","packetsLost","jitter","bytesReceived","availableIncomingBitrate","nominated","VideoElementEvent_1","lazyLaunchVideoElementCreatedEvent","HTMLElement","canplayListenerAdded","element","canPlayListener","deactivateStreamPlayingEventExceptionTimeout","VideoElementEvent","currentTime","paused","ended","remainingStartSpeakingEventListeners","remainingStopSpeakingEventListeners","remainingVolumeEventListeners","addVideoElement","initializeVideoProperties","returnNumber","disassociateVideo","pushNewStreamManagerVideo","createVideo","insMode","AFTER","parentNode","insertBefore","nextSibling","BEFORE","PREPEND","childNodes","REPLACE","replaceChild","updatePublisherSpeakingEventsOptions","currentHarkOptions","newInterval","newThreshold","isMirroredVideo","removeMirrorVideo","mirrorVideo","streamManagerVideo","removeSrcObject","disassociated","activateStreamPlayingEventExceptionTimeout","vParent","newVideo","transform","webkitTransform","streamPlayingEventExceptionTimeout","msTimeout","noStreamPlayingEventExceptionTimeout","NO_STREAM_PLAYING_EVENT","Event_1","cancelable","Event","changedProperty","hasBeenPrevented","isDefaultPrevented","preventDefault","origin","_g","_f","_h","openviduPublishers","streamOptionsServer","Mapper","sources","source","key2","ids","WebSocketWithReconnection","PING_INTERVAL","RECONNECTING","CONNECTED","DISCONNECTED","wsConfig","notReconnectIfNumLessThan","pingNextNum","enabledPings","pingPongStarted","pingInterval","pull","request","reply","stopPing","updateNotReconnectIfLessThan","usePing","rpcBuilderOptions","request_timeout","ping_request_timeout","packers","JsonRPC","requestTime","encode","sendPing","pingNum","reconnectWs","cancel","MAX_RETRIES","RETRY_TIME_MS","CONNECTING","OPEN","CLOSING","CLOSED","closing","registerMessageHandler","reconnecting","WebSocket","onopen","reconnectionOnClose","onclose","maxRetries","numRetries","reconnectAux","addReconnectionQueryParamsIfMissing","uriString","searchParams","URLSearchParams","has","defineProperty_IE8","oThis","aArgs","fToBind","fNOP","fBound","BASE_TIMEOUT","unifyResponseMethods","responseMethods","unifyTransport","transport","postMessage","write","onmessage","SyntaxError","RpcNotification","packer","onRequest","pack","unpack","peerID","max_retries","transportMessage","decode","getTransport","setTransport","response_timeout","duplicates_timeout","requestID","requests","responses","processedResponses","message2Key","storeResponse","dest","storeProcessedResponse","ack","RpcRequest","duplicated","responseMethod","retried","dispatchCallback","encode_transport","rt","retry","notification","processRequest","idAck","processResponse","duplicatedResponse","processed","transports","jsonrpc","result_defined","error_defined","XmlRPC","ConsoleLogger","ConsoleLogger_1","JSNLOG_URL","MAX_JSNLOG_BATCH_LOG_MESSAGES","MAX_MSECONDS_BATCH_MESSAGES","MAX_LENGTH_STRING_JSON","defaultConsoleLogger","isProdMode","isJSNLogSetup","openVidu","instance","isOpenViduBrowserLogsDebugActive","canConfigureJSNLog","debug_app","replaceWindowConsole","finalUserId_1","sessionId_1","beforeSendCallback","parentReadyStateFunction","isInvalidResponse","disableLogger","currentAppender","logSerializer","getCircularReplacer","seen","WeakSet","add","stringifyJson","loggingSessionId","getConsoleWithJSNLog","openViduLogger","custom_parameter","msSaveOrOpenBlob","msSaveBlob","mozGetUserMedia","mozMediaSource","mediaSource","onIFrameCallback","canRequestAudioTrack","chromeExtensionStatus","postGetSourceIdMessage","screen_constraints","maxWidth","maxHeight","optional","iframe","loadIFrame","isLoaded","contentWindow","captureSourceId","captureCustomSourceId","captureSourceIdWithAudio","loadCallback","documentElement","postGetChromeExtensionStatusMessage","screenCallback","isFirefox","InstallTrigger","isOpera","isChrome","chrome","location","onMessageCallback","isChromeExtensionAvailable","getSourceId","getCustomSourceId","getSourceIdWithAudio","extensionid","image","getScreenConstraintsWithAudio","firefoxScreenConstraints","isTouchable","isIPad","isIPhone","vendor","isChromium","WebRtcPeer","iceCandidateList","__assign","mode","generateUniqueId","RTCPeerConnection","signalingState","createOfferLegacy","deprecatedPeerConnectionTrackApi","offerToReceiveAudio","offerToReceiveVideo","_j","tcInit","direction","trackConsts","trackWidth","trackHeight","trackPixels","maxLayers","sendEncodings","layerDiv","encoding","rid","scalabilityMode","scaleResolutionDownBy","maxFramerate","tc","addTransceiver","sendParams","getParameters","needSetParams","degradationPreference","encodings","setParameters","_m","_k","_l","getTransceivers","offerAudio","offerVideo","offer","setLocalDescription","localDescription","setRemoteDescription","answer","remoteDescription","otherId","msg1","msg2","STATS_ITEM_NAME","webRtcStatsEnabled","statsInterval","webrtcObj","localStorage","getItem","webrtcStatsConfig","POST_URL","httpEndpoint","webRtcStatsIntervalId","sendStatsToHttpEndpoint","statsReport","candidatePairs","localCandidates","remoteCandidates","stat","transportStat","selectedCandidatePairId","selectedCandidatePair","length_1","iterator","candidatePair","next","localCandidateId","remoteCandidateId","finalLocalCandidate","candList","cand","ip","address","cand_1","finalRemoteCandidate","cand_2","localCandidate","remoteCandidate","sendStats","fetch","getCommonStats","webrtcStats","generateJSONStatsResponse","response_1","getWebRtcStatsResponseOutline","videoTrackStats_1","candidatePairStats_1","addStat","candidatepair","toISOString","participant_id","session_id","platform_description","webrtc_stats","outbound","inbound"],"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/events/events.js","../node_modules/freeice/index.js","../node_modules/freeice/stun.json","../node_modules/freeice/turn.json","../node_modules/hark/hark.js","../node_modules/inherits/inherits_browser.js","../node_modules/jsnlog/jsnlog.js","../node_modules/mime/Mime.js","../node_modules/mime/lite.js","../node_modules/mime/types/standard.js","../node_modules/normalice/index.js","../node_modules/platform/platform.js","../node_modules/process/browser.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/uuid/dist/index.js","../node_modules/uuid/dist/md5-browser.js","../node_modules/uuid/dist/native-browser.js","../node_modules/uuid/dist/nil.js","../node_modules/uuid/dist/parse.js","../node_modules/uuid/dist/regex.js","../node_modules/uuid/dist/rng-browser.js","../node_modules/uuid/dist/sha1-browser.js","../node_modules/uuid/dist/stringify.js","../node_modules/uuid/dist/v1.js","../node_modules/uuid/dist/v3.js","../node_modules/uuid/dist/v35.js","../node_modules/uuid/dist/v4.js","../node_modules/uuid/dist/v5.js","../node_modules/uuid/dist/validate.js","../node_modules/uuid/dist/version.js","../node_modules/wildemitter/wildemitter.js","../node_modules/wolfy87-eventemitter/EventEmitter.js","../package.json","Main.ts","OpenVidu/Connection.ts","OpenVidu/EventDispatcher.ts","OpenVidu/Filter.ts","OpenVidu/LocalRecorder.ts","OpenVidu/OpenVidu.ts","OpenVidu/Publisher.ts","OpenVidu/Session.ts","OpenVidu/Stream.ts","OpenVidu/StreamManager.ts","OpenVidu/Subscriber.ts","OpenViduInternal/Enums/LocalRecorderState.ts","OpenViduInternal/Enums/OpenViduError.ts","OpenViduInternal/Enums/TypeOfVideo.ts","OpenViduInternal/Enums/VideoInsertMode.ts","OpenViduInternal/Events/ConnectionEvent.ts","OpenViduInternal/Events/ConnectionPropertyChangedEvent.ts","OpenViduInternal/Events/Event.ts","OpenViduInternal/Events/ExceptionEvent.ts","OpenViduInternal/Events/FilterEvent.ts","OpenViduInternal/Events/NetworkQualityLevelChangedEvent.ts","OpenViduInternal/Events/PublisherSpeakingEvent.ts","OpenViduInternal/Events/RecordingEvent.ts","OpenViduInternal/Events/SessionDisconnectedEvent.ts","OpenViduInternal/Events/SignalEvent.ts","OpenViduInternal/Events/SpeechToTextEvent.ts","OpenViduInternal/Events/StreamEvent.ts","OpenViduInternal/Events/StreamManagerEvent.ts","OpenViduInternal/Events/StreamPropertyChangedEvent.ts","OpenViduInternal/Events/VideoElementEvent.ts","OpenViduInternal/KurentoUtils/kurento-jsonrpc/Mapper.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/jsonrpcclient.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/transports/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/clients/transports/webSocketWithReconnection.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/index.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/JsonRPC.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/XmlRPC.js","OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/index.js","OpenViduInternal/Logger/ConsoleLogger.ts","OpenViduInternal/Logger/OpenViduLogger.ts","OpenViduInternal/Logger/OpenViduLoggerConfiguration.ts","OpenViduInternal/ScreenSharing/Screen-Capturing-Auto.js","OpenViduInternal/ScreenSharing/Screen-Capturing.js","OpenViduInternal/Utils/Platform.ts","OpenViduInternal/WebRtcPeer/WebRtcPeer.ts","OpenViduInternal/WebRtcStats/WebRtcStats.ts"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/* jshint node: true */\n'use strict';\n\nvar normalice = require('normalice');\n\n/**\n  # freeice\n\n  The `freeice` module is a simple way of getting random STUN or TURN server\n  for your WebRTC application.  The list of servers (just STUN at this stage)\n  were sourced from this [gist](https://gist.github.com/zziuni/3741933).\n\n  ## Example Use\n\n  The following demonstrates how you can use `freeice` with\n  [rtc-quickconnect](https://github.com/rtc-io/rtc-quickconnect):\n\n  <<< examples/quickconnect.js\n\n  As the `freeice` module generates ice servers in a list compliant with the\n  WebRTC spec you will be able to use it with raw `RTCPeerConnection`\n  constructors and other WebRTC libraries.\n\n  ## Hey, don't use my STUN/TURN server!\n\n  If for some reason your free STUN or TURN server ends up in the\n  list of servers ([stun](https://github.com/DamonOehlman/freeice/blob/master/stun.json) or\n  [turn](https://github.com/DamonOehlman/freeice/blob/master/turn.json))\n  that is used in this module, you can feel\n  free to open an issue on this repository and those servers will be removed\n  within 24 hours (or sooner).  This is the quickest and probably the most\n  polite way to have something removed (and provides us some visibility\n  if someone opens a pull request requesting that a server is added).\n\n  ## Please add my server!\n\n  If you have a server that you wish to add to the list, that's awesome! I'm\n  sure I speak on behalf of a whole pile of WebRTC developers who say thanks.\n  To get it into the list, feel free to either open a pull request or if you\n  find that process a bit daunting then just create an issue requesting\n  the addition of the server (make sure you provide all the details, and if\n  you have a Terms of Service then including that in the PR/issue would be\n  awesome).\n\n  ## I know of a free server, can I add it?\n\n  Sure, if you do your homework and make sure it is ok to use (I'm currently\n  in the process of reviewing the terms of those STUN servers included from\n  the original list).  If it's ok to go, then please see the previous entry\n  for how to add it.\n\n  ## Current List of Servers\n\n  * current as at the time of last `README.md` file generation\n\n  ### STUN\n\n  <<< stun.json\n\n  ### TURN\n\n  <<< turn.json\n\n**/\n\nvar freeice = function(opts) {\n  // if a list of servers has been provided, then use it instead of defaults\n  var servers = {\n    stun: (opts || {}).stun || require('./stun.json'),\n    turn: (opts || {}).turn || require('./turn.json')\n  };\n\n  var stunCount = (opts || {}).stunCount || 2;\n  var turnCount = (opts || {}).turnCount || 0;\n  var selected;\n\n  function getServers(type, count) {\n    var out = [];\n    var input = [].concat(servers[type]);\n    var idx;\n\n    while (input.length && out.length < count) {\n      idx = (Math.random() * input.length) | 0;\n      out = out.concat(input.splice(idx, 1));\n    }\n\n    return out.map(function(url) {\n        //If it's a not a string, don't try to \"normalice\" it otherwise using type:url will screw it up\n        if ((typeof url !== 'string') && (! (url instanceof String))) {\n            return url;\n        } else {\n            return normalice(type + ':' + url);\n        }\n    });\n  }\n\n  // add stun servers\n  selected = [].concat(getServers('stun', stunCount));\n\n  if (turnCount) {\n    selected = selected.concat(getServers('turn', turnCount));\n  }\n\n  return selected;\n};\n\nmodule.exports = freeice;","module.exports=[\n  \"stun.l.google.com:19302\",\n  \"stun1.l.google.com:19302\",\n  \"stun2.l.google.com:19302\",\n  \"stun3.l.google.com:19302\",\n  \"stun4.l.google.com:19302\",\n  \"stun.ekiga.net\",\n  \"stun.ideasip.com\",\n  \"stun.schlund.de\",\n  \"stun.stunprotocol.org:3478\",\n  \"stun.voiparound.com\",\n  \"stun.voipbuster.com\",\n  \"stun.voipstunt.com\",\n  \"stun.voxgratia.org\"\n]\n","module.exports=[]\n","var WildEmitter = require('wildemitter');\n\nfunction getMaxVolume (analyser, fftBins) {\n  var maxVolume = -Infinity;\n  analyser.getFloatFrequencyData(fftBins);\n\n  for(var i=4, ii=fftBins.length; i < ii; i++) {\n    if (fftBins[i] > maxVolume && fftBins[i] < 0) {\n      maxVolume = fftBins[i];\n    }\n  };\n\n  return maxVolume;\n}\n\n\nvar audioContextType;\nif (typeof window !== 'undefined') {\n  audioContextType = window.AudioContext || window.webkitAudioContext;\n}\n// use a single audio context due to hardware limits\nvar audioContext = null;\nmodule.exports = function(stream, options) {\n  var harker = new WildEmitter();\n\n  // make it not break in non-supported browsers\n  if (!audioContextType) return harker;\n\n  //Config\n  var options = options || {},\n      smoothing = (options.smoothing || 0.1),\n      interval = (options.interval || 50),\n      threshold = options.threshold,\n      play = options.play,\n      history = options.history || 10,\n      running = true;\n\n  // Ensure that just a single AudioContext is internally created\n  audioContext = options.audioContext || audioContext || new audioContextType();\n\n  var sourceNode, fftBins, analyser;\n\n  analyser = audioContext.createAnalyser();\n  analyser.fftSize = 512;\n  analyser.smoothingTimeConstant = smoothing;\n  fftBins = new Float32Array(analyser.frequencyBinCount);\n\n  if (stream.jquery) stream = stream[0];\n  if (stream instanceof HTMLAudioElement || stream instanceof HTMLVideoElement) {\n    //Audio Tag\n    sourceNode = audioContext.createMediaElementSource(stream);\n    if (typeof play === 'undefined') play = true;\n    threshold = threshold || -50;\n  } else {\n    //WebRTC Stream\n    sourceNode = audioContext.createMediaStreamSource(stream);\n    threshold = threshold || -50;\n  }\n\n  sourceNode.connect(analyser);\n  if (play) analyser.connect(audioContext.destination);\n\n  harker.speaking = false;\n\n  harker.suspend = function() {\n    return audioContext.suspend();\n  }\n  harker.resume = function() {\n    return audioContext.resume();\n  }\n  Object.defineProperty(harker, 'state', { get: function() {\n    return audioContext.state;\n  }});\n  audioContext.onstatechange = function() {\n    harker.emit('state_change', audioContext.state);\n  }\n\n  harker.setThreshold = function(t) {\n    threshold = t;\n  };\n\n  harker.setInterval = function(i) {\n    interval = i;\n  };\n\n  harker.stop = function() {\n    running = false;\n    harker.emit('volume_change', -100, threshold);\n    if (harker.speaking) {\n      harker.speaking = false;\n      harker.emit('stopped_speaking');\n    }\n    analyser.disconnect();\n    sourceNode.disconnect();\n  };\n  harker.speakingHistory = [];\n  for (var i = 0; i < history; i++) {\n      harker.speakingHistory.push(0);\n  }\n\n  // Poll the analyser node to determine if speaking\n  // and emit events if changed\n  var looper = function() {\n    setTimeout(function() {\n\n      //check if stop has been called\n      if(!running) {\n        return;\n      }\n\n      var currentVolume = getMaxVolume(analyser, fftBins);\n\n      harker.emit('volume_change', currentVolume, threshold);\n\n      var history = 0;\n      if (currentVolume > threshold && !harker.speaking) {\n        // trigger quickly, short history\n        for (var i = harker.speakingHistory.length - 3; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history >= 2) {\n          harker.speaking = true;\n          harker.emit('speaking');\n        }\n      } else if (currentVolume < threshold && harker.speaking) {\n        for (var i = 0; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history == 0) {\n          harker.speaking = false;\n          harker.emit('stopped_speaking');\n        }\n      }\n      harker.speakingHistory.shift();\n      harker.speakingHistory.push(0 + (currentVolume > threshold));\n\n      looper();\n    }, interval);\n  };\n  looper();\n\n  return harker;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/* \r\n * JSNLog 2.30.0\r\n * Open source under the MIT License.\r\n * Copyright 2012-2017 Mattijs Perdeck All rights reserved.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nfunction JL(loggerName) {\r\n    // If name is empty, return the root logger\r\n    if (!loggerName) {\r\n        return JL.__;\r\n    }\r\n    // Implements Array.reduce. JSNLog supports IE8+ and reduce is not supported in that browser.\r\n    // Same interface as the standard reduce, except that \r\n    if (!Array.prototype.reduce) {\r\n        Array.prototype.reduce = function (callback, initialValue) {\r\n            var previousValue = initialValue;\r\n            for (var i = 0; i < this.length; i++) {\r\n                previousValue = callback(previousValue, this[i], i, this);\r\n            }\r\n            return previousValue;\r\n        };\r\n    }\r\n    var accumulatedLoggerName = '';\r\n    var logger = ('.' + loggerName).split('.').reduce(function (prev, curr, idx, arr) {\r\n        // if loggername is a.b.c, than currentLogger will be set to the loggers\r\n        // root   (prev: JL, curr: '')\r\n        // a      (prev: JL.__, curr: 'a')\r\n        // a.b    (prev: JL.__.__a, curr: 'b')\r\n        // a.b.c  (prev: JL.__.__a.__a.b, curr: 'c')\r\n        // Note that when a new logger name is encountered (such as 'a.b.c'),\r\n        // a new logger object is created and added as a property to the parent ('a.b').\r\n        // The root logger is added as a property of the JL object itself.\r\n        // It is essential that the name of the property containing the child logger\r\n        // contains the full 'path' name of the child logger ('a.b.c') instead of\r\n        // just the bit after the last period ('c').\r\n        // This is because the parent inherits properties from its ancestors.\r\n        // So if the root has a child logger 'c' (stored in a property 'c' of the root logger),\r\n        // then logger 'a.b' has that same property 'c' through inheritance.\r\n        // The names of the logger properties start with __, so the root logger \r\n        // (which has name ''), has a nice property name '__'.              \r\n        // accumulatedLoggerName evaluates false ('' is falsy) in first iteration when prev is the root logger.\r\n        // accumulatedLoggerName will be the logger name corresponding with the logger in currentLogger.\r\n        // Keep in mind that the currentLogger may not be defined yet, so can't get the name from\r\n        // the currentLogger object itself. \r\n        if (accumulatedLoggerName) {\r\n            accumulatedLoggerName += '.' + curr;\r\n        }\r\n        else {\r\n            accumulatedLoggerName = curr;\r\n        }\r\n        var currentLogger = prev['__' + accumulatedLoggerName];\r\n        // If the currentLogger (or the actual logger being sought) does not yet exist, \r\n        // create it now.\r\n        if (currentLogger === undefined) {\r\n            // Set the prototype of the Logger constructor function to the parent of the logger\r\n            // to be created. This way, __proto of the new logger object will point at the parent.\r\n            // When logger.level is evaluated and is not present, the JavaScript runtime will \r\n            // walk down the prototype chain to find the first ancestor with a level property.\r\n            //\r\n            // Note that prev at this point refers to the parent logger.\r\n            JL.Logger.prototype = prev;\r\n            currentLogger = new JL.Logger(accumulatedLoggerName);\r\n            prev['__' + accumulatedLoggerName] = currentLogger;\r\n        }\r\n        return currentLogger;\r\n    }, JL.__);\r\n    return logger;\r\n}\r\n(function (JL) {\r\n    // Initialise requestId to empty string. If you don't do this and the user\r\n    // does not set it via setOptions, then the JSNLog-RequestId header will\r\n    // have value \"undefined\", which doesn't look good in a log.\r\n    //\r\n    // Note that you always want to send a requestId as part of log requests,\r\n    // otherwise the server side component doesn't know this is a log request\r\n    // and may create a new request id for the log request, causing confusion\r\n    // in the log.\r\n    JL.requestId = '';\r\n    // Number uniquely identifying every log entry within the request.\r\n    JL.entryId = 0;\r\n    // Allow property injection of these classes, to enable unit testing\r\n    JL._createXMLHttpRequest = function () { return new XMLHttpRequest(); };\r\n    JL._getTime = function () { return (new Date).getTime(); };\r\n    JL._console = console;\r\n    // ----- private variables\r\n    JL._appenderNames = [];\r\n    /**\r\n    Copies the value of a property from one object to the other.\r\n    This is used to copy property values as part of setOption for loggers and appenders.\r\n\r\n    Because loggers inherit property values from their parents, it is important never to\r\n    create a property on a logger if the intent is to inherit from the parent.\r\n\r\n    Copying rules:\r\n    1) if the from property is undefined (for example, not mentioned in a JSON object), the\r\n       to property is not affected at all.\r\n    2) if the from property is null, the to property is deleted (so the logger will inherit from\r\n       its parent).\r\n    3) Otherwise, the from property is copied to the to property.\r\n    */\r\n    function copyProperty(propertyName, from, to) {\r\n        if (from[propertyName] === undefined) {\r\n            return;\r\n        }\r\n        if (from[propertyName] === null) {\r\n            delete to[propertyName];\r\n            return;\r\n        }\r\n        to[propertyName] = from[propertyName];\r\n    }\r\n    /**\r\n    Returns true if a log should go ahead.\r\n    Does not check level.\r\n\r\n    @param filters\r\n        Filters that determine whether a log can go ahead.\r\n    */\r\n    function allow(filters) {\r\n        // If enabled is not null or undefined, then if it is false, then return false\r\n        // Note that undefined==null (!)\r\n        if (!(JL.enabled == null)) {\r\n            if (!JL.enabled) {\r\n                return false;\r\n            }\r\n        }\r\n        // If the regex contains a bug, that will throw an exception.\r\n        // Ignore this, and pass the log item (better too much than too little).\r\n        try {\r\n            if (filters.userAgentRegex) {\r\n                if (!new RegExp(filters.userAgentRegex).test(navigator.userAgent)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n        try {\r\n            if (filters.ipRegex && JL.clientIP) {\r\n                if (!new RegExp(filters.ipRegex).test(JL.clientIP)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return true;\r\n    }\r\n    /**\r\n    Returns true if a log should go ahead, based on the message.\r\n\r\n    @param filters\r\n        Filters that determine whether a log can go ahead.\r\n\r\n    @param message\r\n        Message to be logged.\r\n    */\r\n    function allowMessage(filters, message) {\r\n        // If the regex contains a bug, that will throw an exception.\r\n        // Ignore this, and pass the log item (better too much than too little).\r\n        try {\r\n            if (filters.disallow) {\r\n                if (new RegExp(filters.disallow).test(message)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return true;\r\n    }\r\n    // If logObject is a function, the function is evaluated (without parameters)\r\n    // and the result returned.\r\n    // Otherwise, logObject itself is returned.\r\n    function stringifyLogObjectFunction(logObject) {\r\n        if (typeof logObject == \"function\") {\r\n            if (logObject instanceof RegExp) {\r\n                return logObject.toString();\r\n            }\r\n            else {\r\n                return logObject();\r\n            }\r\n        }\r\n        return logObject;\r\n    }\r\n    var StringifiedLogObject = /** @class */ (function () {\r\n        // * msg - \r\n        //      if the logObject is a scalar (after possible function evaluation), this is set to\r\n        //      string representing the scalar. Otherwise it is left undefined.\r\n        // * meta -\r\n        //      if the logObject is an object (after possible function evaluation), this is set to\r\n        //      that object. Otherwise it is left undefined.\r\n        // * finalString -\r\n        //      This is set to the string representation of logObject (after possible function evaluation),\r\n        //      regardless of whether it is an scalar or an object. An object is stringified to a JSON string.\r\n        //      Note that you can't call this field \"final\", because as some point this was a reserved\r\n        //      JavaScript keyword and using final trips up some minifiers.\r\n        function StringifiedLogObject(msg, meta, finalString) {\r\n            this.msg = msg;\r\n            this.meta = meta;\r\n            this.finalString = finalString;\r\n        }\r\n        return StringifiedLogObject;\r\n    }());\r\n    // Takes a logObject, which can be \r\n    // * a scalar\r\n    // * an object\r\n    // * a parameterless function, which returns the scalar or object to log.\r\n    // Returns a stringifiedLogObject\r\n    function stringifyLogObject(logObject) {\r\n        // Note that this works if logObject is null.\r\n        // typeof null is object.\r\n        // JSON.stringify(null) returns \"null\".\r\n        var actualLogObject = stringifyLogObjectFunction(logObject);\r\n        var finalString;\r\n        // Note that typeof actualLogObject should not be \"function\", because that has \r\n        // been resolved with stringifyLogObjectFunction.\r\n        switch (typeof actualLogObject) {\r\n            case \"string\":\r\n                return new StringifiedLogObject(actualLogObject, null, actualLogObject);\r\n            case \"number\":\r\n                finalString = actualLogObject.toString();\r\n                return new StringifiedLogObject(finalString, null, finalString);\r\n            case \"boolean\":\r\n                finalString = actualLogObject.toString();\r\n                return new StringifiedLogObject(finalString, null, finalString);\r\n            case \"undefined\":\r\n                return new StringifiedLogObject(\"undefined\", null, \"undefined\");\r\n            case \"object\":\r\n                if ((actualLogObject instanceof RegExp) ||\r\n                    (actualLogObject instanceof String) ||\r\n                    (actualLogObject instanceof Number) ||\r\n                    (actualLogObject instanceof Boolean)) {\r\n                    finalString = actualLogObject.toString();\r\n                    return new StringifiedLogObject(finalString, null, finalString);\r\n                }\r\n                else {\r\n                    if (typeof JL.serialize === 'function') {\r\n                        finalString = JL.serialize.call(this, actualLogObject);\r\n                    }\r\n                    else {\r\n                        finalString = JSON.stringify(actualLogObject);\r\n                    }\r\n                    // Set the msg field to \"\" instead of null. Some Winston transports\r\n                    // assume that the msg field is not null.\r\n                    return new StringifiedLogObject(\"\", actualLogObject, finalString);\r\n                }\r\n            default:\r\n                return new StringifiedLogObject(\"unknown\", null, \"unknown\");\r\n        }\r\n    }\r\n    function setOptions(options) {\r\n        copyProperty(\"enabled\", options, this);\r\n        copyProperty(\"maxMessages\", options, this);\r\n        copyProperty(\"defaultAjaxUrl\", options, this);\r\n        copyProperty(\"clientIP\", options, this);\r\n        copyProperty(\"requestId\", options, this);\r\n        copyProperty(\"defaultBeforeSend\", options, this);\r\n        copyProperty(\"serialize\", options, this);\r\n        return this;\r\n    }\r\n    JL.setOptions = setOptions;\r\n    function getAllLevel() { return -2147483648; }\r\n    JL.getAllLevel = getAllLevel;\r\n    function getTraceLevel() { return 1000; }\r\n    JL.getTraceLevel = getTraceLevel;\r\n    function getDebugLevel() { return 2000; }\r\n    JL.getDebugLevel = getDebugLevel;\r\n    function getInfoLevel() { return 3000; }\r\n    JL.getInfoLevel = getInfoLevel;\r\n    function getWarnLevel() { return 4000; }\r\n    JL.getWarnLevel = getWarnLevel;\r\n    function getErrorLevel() { return 5000; }\r\n    JL.getErrorLevel = getErrorLevel;\r\n    function getFatalLevel() { return 6000; }\r\n    JL.getFatalLevel = getFatalLevel;\r\n    function getOffLevel() { return 2147483647; }\r\n    JL.getOffLevel = getOffLevel;\r\n    function levelToString(level) {\r\n        if (level <= 1000) {\r\n            return \"trace\";\r\n        }\r\n        if (level <= 2000) {\r\n            return \"debug\";\r\n        }\r\n        if (level <= 3000) {\r\n            return \"info\";\r\n        }\r\n        if (level <= 4000) {\r\n            return \"warn\";\r\n        }\r\n        if (level <= 5000) {\r\n            return \"error\";\r\n        }\r\n        return \"fatal\";\r\n    }\r\n    // ---------------------\r\n    var Exception = /** @class */ (function () {\r\n        // data replaces message. It takes not just strings, but also objects and functions, just like the log function.\r\n        // internally, the string representation is stored in the message property (inherited from Error)\r\n        //\r\n        // inner: inner exception. Can be null or undefined. \r\n        function Exception(data, inner) {\r\n            this.inner = inner;\r\n            this.name = \"JL.Exception\";\r\n            this.message = stringifyLogObject(data).finalString;\r\n        }\r\n        return Exception;\r\n    }());\r\n    JL.Exception = Exception;\r\n    // Derive Exception from Error (a Host object), so browsers\r\n    // are more likely to produce a stack trace for it in their console.\r\n    //\r\n    // Note that instanceof against an object created with this constructor\r\n    // will return true in these cases:\r\n    // <object> instanceof JL.Exception);\r\n    // <object> instanceof Error);\r\n    Exception.prototype = new Error();\r\n    // ---------------------\r\n    var LogItem = /** @class */ (function () {\r\n        // l: level\r\n        // m: message\r\n        // n: logger name\r\n        // t (timeStamp) is number of milliseconds since 1 January 1970 00:00:00 UTC\r\n        // u: number uniquely identifying this entry for this request.\r\n        //\r\n        // Keeping the property names really short, because they will be sent in the\r\n        // JSON payload to the server.\r\n        function LogItem(l, m, n, t, u) {\r\n            this.l = l;\r\n            this.m = m;\r\n            this.n = n;\r\n            this.t = t;\r\n            this.u = u;\r\n        }\r\n        return LogItem;\r\n    }());\r\n    JL.LogItem = LogItem;\r\n    function newLogItem(levelNbr, message, loggerName) {\r\n        JL.entryId++;\r\n        return new LogItem(levelNbr, message, loggerName, JL._getTime(), JL.entryId);\r\n    }\r\n    function clearTimer(timer) {\r\n        if (timer.id) {\r\n            clearTimeout(timer.id);\r\n            timer.id = null;\r\n        }\r\n    }\r\n    function setTimer(timer, timeoutMs, callback) {\r\n        var that = this;\r\n        if (!timer.id) {\r\n            timer.id = setTimeout(function () {\r\n                // use call to ensure that the this as used inside sendBatch when it runs is the\r\n                // same this at this point.\r\n                callback.call(that);\r\n            }, timeoutMs);\r\n        }\r\n    }\r\n    var Appender = /** @class */ (function () {\r\n        // sendLogItems takes an array of log items. It will be called when\r\n        // the appender has items to process (such as, send to the server).\r\n        // sendLogItems will call successCallback after the items have been successfully sent.\r\n        //\r\n        // Note that after sendLogItems returns, the appender may truncate\r\n        // the LogItem array, so the function has to copy the content of the array\r\n        // in some fashion (eg. serialize) before returning.\r\n        function Appender(appenderName, sendLogItems) {\r\n            this.appenderName = appenderName;\r\n            this.sendLogItems = sendLogItems;\r\n            this.level = JL.getTraceLevel();\r\n            // set to super high level, so if user increases level, level is unlikely to get \r\n            // above sendWithBufferLevel\r\n            this.sendWithBufferLevel = 2147483647;\r\n            this.storeInBufferLevel = -2147483648;\r\n            this.bufferSize = 0; // buffering switch off by default\r\n            this.batchSize = 1;\r\n            this.maxBatchSize = 20;\r\n            this.batchTimeout = 2147483647;\r\n            this.sendTimeout = 5000;\r\n            // Holds all log items with levels higher than storeInBufferLevel \r\n            // but lower than level. These items may never be sent.\r\n            this.buffer = [];\r\n            // Holds all items that we do want to send, until we have a full\r\n            // batch (as determined by batchSize).\r\n            this.batchBuffer = [];\r\n            // Holds the id of the timer implementing the batch timeout.\r\n            // Can be null.\r\n            // This is an object, so it can be passed to a method that updated the timer variable.\r\n            this.batchTimeoutTimer = { id: null };\r\n            // Holds the id of the timer implementing the send timeout.\r\n            // Can be null.\r\n            this.sendTimeoutTimer = { id: null };\r\n            // Number of log items that has been skipped due to batch buffer at max size,\r\n            // since appender creation or since creation of the last \"skipped\" warning log entry.\r\n            this.nbrLogItemsSkipped = 0;\r\n            // Will be 0 if no log request is outstanding at the moment.\r\n            // Otherwise the number of log items in the outstanding request.\r\n            this.nbrLogItemsBeingSent = 0;\r\n            var emptyNameErrorMessage = \"Trying to create an appender without a name or with an empty name\";\r\n            // This evaluates to true if appenderName is either null or undefined!\r\n            // Do not check here if the name is \"\", because that would stop you creating the \r\n            // default appender.\r\n            if (appenderName == undefined) {\r\n                throw emptyNameErrorMessage;\r\n            }\r\n            if (JL._appenderNames.indexOf(appenderName) != -1) {\r\n                // If user passed in \"\", that will now have been picked up as a duplicate\r\n                // because default appender also uses \"\".\r\n                if (!appenderName) {\r\n                    throw emptyNameErrorMessage;\r\n                }\r\n                throw \"Multiple appenders use the same name \" + appenderName;\r\n            }\r\n            JL._appenderNames.push(appenderName);\r\n        }\r\n        Appender.prototype.addLogItemsToBuffer = function (logItems) {\r\n            // If the batch buffer has reached its maximum limit, \r\n            // skip the log item and increase the \"skipped items\" counter.\r\n            if (this.batchBuffer.length >= this.maxBatchSize) {\r\n                this.nbrLogItemsSkipped += logItems.length;\r\n                return;\r\n            }\r\n            // If maxMessages is not null or undefined, then decrease it by the batch size.\r\n            // This can result in a negative maxMessages.\r\n            // Note that undefined==null (!)\r\n            //\r\n            // Note that we may be sending more messages than the maxMessages limit allows,\r\n            // if we stored trace messages. Rationale is the buffer for trace messages is limited,\r\n            // and if we cut off at exactly maxMessages, we'd also loose the high severity message\r\n            // that caused the trace messages to be sent (unless we cater for this specifically, which\r\n            // is more complexity).\r\n            //\r\n            // If there are multiple appenders sending the same message, maxMessage will be decreased\r\n            // by each appender for the same message. This is:\r\n            // 1) only appenders know whether a message will actually be sent (based on storeInBufferLevel),\r\n            //    so the loggers couldn't do this update;\r\n            // 2) if you have multiple appenders hitting the same server, this may be what you want.\r\n            //\r\n            // In most cases there is only 1 appender, so this then doesn't matter.\r\n            if (!(JL.maxMessages == null)) {\r\n                if (JL.maxMessages < 1) {\r\n                    return;\r\n                }\r\n                JL.maxMessages -= logItems.length;\r\n            }\r\n            this.batchBuffer = this.batchBuffer.concat(logItems);\r\n            // If this is the first item in the buffer, set the timer\r\n            // to ensure it will be sent within the timeout period.\r\n            // If it is not the first item, leave the timer alone so to not to \r\n            // increase the timeout for the first item.\r\n            //\r\n            // To determine if this is the first item, look at the timer variable.\r\n            // Do not look at the buffer length, because we also put items in the buffer\r\n            // via a concat (bypassing this function).\r\n            //\r\n            // The setTimer method only sets the timer if it is not already running.\r\n            var that = this;\r\n            setTimer(this.batchTimeoutTimer, this.batchTimeout, function () {\r\n                that.sendBatch.call(that);\r\n            });\r\n        };\r\n        ;\r\n        Appender.prototype.batchBufferHasOverdueMessages = function () {\r\n            for (var i = 0; i < this.batchBuffer.length; i++) {\r\n                var messageAgeMs = JL._getTime() - this.batchBuffer[i].t;\r\n                if (messageAgeMs > this.batchTimeout) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        // Returns true if no more message will ever be added to the batch buffer,\r\n        // but the batch buffer has messages now - so if there are not enough to make up a batch,\r\n        // and there is no batch timeout, then they will never be sent. This is especially important if \r\n        // maxMessages was reached while jsnlog.js was retrying sending messages to the server.\r\n        Appender.prototype.batchBufferHasStrandedMessage = function () {\r\n            return (!(JL.maxMessages == null)) && (JL.maxMessages < 1) && (this.batchBuffer.length > 0);\r\n        };\r\n        Appender.prototype.sendBatchIfComplete = function () {\r\n            if ((this.batchBuffer.length >= this.batchSize) ||\r\n                this.batchBufferHasOverdueMessages() ||\r\n                this.batchBufferHasStrandedMessage()) {\r\n                this.sendBatch();\r\n            }\r\n        };\r\n        Appender.prototype.onSendingEnded = function () {\r\n            clearTimer(this.sendTimeoutTimer);\r\n            this.nbrLogItemsBeingSent = 0;\r\n            this.sendBatchIfComplete();\r\n        };\r\n        Appender.prototype.setOptions = function (options) {\r\n            copyProperty(\"level\", options, this);\r\n            copyProperty(\"ipRegex\", options, this);\r\n            copyProperty(\"userAgentRegex\", options, this);\r\n            copyProperty(\"disallow\", options, this);\r\n            copyProperty(\"sendWithBufferLevel\", options, this);\r\n            copyProperty(\"storeInBufferLevel\", options, this);\r\n            copyProperty(\"bufferSize\", options, this);\r\n            copyProperty(\"batchSize\", options, this);\r\n            copyProperty(\"maxBatchSize\", options, this);\r\n            copyProperty(\"batchTimeout\", options, this);\r\n            copyProperty(\"sendTimeout\", options, this);\r\n            if (this.bufferSize < this.buffer.length) {\r\n                this.buffer.length = this.bufferSize;\r\n            }\r\n            if (this.maxBatchSize < this.batchSize) {\r\n                throw new JL.Exception({\r\n                    \"message\": \"maxBatchSize cannot be smaller than batchSize\",\r\n                    \"maxBatchSize\": this.maxBatchSize,\r\n                    \"batchSize\": this.batchSize\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n        /**\r\n        Called by a logger to log a log item.\r\n        If in response to this call one or more log items need to be processed\r\n        (eg., sent to the server), this method calls this.sendLogItems\r\n        with an array with all items to be processed.\r\n\r\n        Note that the name and parameters of this function must match those of the log function of\r\n        a Winston transport object, so that users can use these transports as appenders.\r\n        That is why there are many parameters that are not actually used by this function.\r\n\r\n        level - string with the level (\"trace\", \"debug\", etc.) Only used by Winston transports.\r\n        msg - human readable message. Undefined if the log item is an object. Only used by Winston transports.\r\n        meta - log object. Always defined, because at least it contains the logger name. Only used by Winston transports.\r\n        callback - function that is called when the log item has been logged. Only used by Winston transports.\r\n        levelNbr - level as a number. Not used by Winston transports.\r\n        message - log item. If the user logged an object, this is the JSON string.  Not used by Winston transports.\r\n        loggerName: name of the logger.  Not used by Winston transports.\r\n        */\r\n        Appender.prototype.log = function (level, msg, meta, callback, levelNbr, message, loggerName) {\r\n            var logItem;\r\n            if (!allow(this)) {\r\n                return;\r\n            }\r\n            if (!allowMessage(this, message)) {\r\n                return;\r\n            }\r\n            if (levelNbr < this.storeInBufferLevel) {\r\n                // Ignore the log item completely\r\n                return;\r\n            }\r\n            logItem = newLogItem(levelNbr, message, loggerName);\r\n            if (levelNbr < this.level) {\r\n                // Store in the hold buffer. Do not send.\r\n                if (this.bufferSize > 0) {\r\n                    this.buffer.push(logItem);\r\n                    // If we exceeded max buffer size, remove oldest item\r\n                    if (this.buffer.length > this.bufferSize) {\r\n                        this.buffer.shift();\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            // Want to send the item\r\n            this.addLogItemsToBuffer([logItem]);\r\n            if (levelNbr >= this.sendWithBufferLevel) {\r\n                // Want to send the contents of the buffer.\r\n                //\r\n                // Send the buffer AFTER sending the high priority item.\r\n                // If you were to send the high priority item after the buffer,\r\n                // if we're close to maxMessages or maxBatchSize,\r\n                // then the trace messages in the buffer could crowd out the actual high priority item.\r\n                if (this.buffer.length) {\r\n                    this.addLogItemsToBuffer(this.buffer);\r\n                    this.buffer.length = 0;\r\n                }\r\n            }\r\n            this.sendBatchIfComplete();\r\n        };\r\n        ;\r\n        // Processes the batch buffer\r\n        //\r\n        // Make this public, so it can be called from outside the library,\r\n        // when the page is unloaded.\r\n        Appender.prototype.sendBatch = function () {\r\n            // Do not clear the batch timer if you don't go ahead here because\r\n            // a send is already in progress. Otherwise the messages that were stopped from going out\r\n            // may get ignored because the batch timer never went off.\r\n            if (this.nbrLogItemsBeingSent > 0) {\r\n                return;\r\n            }\r\n            clearTimer(this.batchTimeoutTimer);\r\n            if (this.batchBuffer.length == 0) {\r\n                return;\r\n            }\r\n            // Decided at this point to send contents of the buffer\r\n            this.nbrLogItemsBeingSent = this.batchBuffer.length;\r\n            var that = this;\r\n            setTimer(this.sendTimeoutTimer, this.sendTimeout, function () {\r\n                that.onSendingEnded.call(that);\r\n            });\r\n            this.sendLogItems(this.batchBuffer, function () {\r\n                // Log entries have been successfully sent to server\r\n                // Remove the first (nbrLogItemsBeingSent) items in the batch buffer, because they are the ones\r\n                // that were sent.\r\n                that.batchBuffer.splice(0, that.nbrLogItemsBeingSent);\r\n                // If items had to be skipped, add a WARN message\r\n                if (that.nbrLogItemsSkipped > 0) {\r\n                    that.batchBuffer.push(newLogItem(getWarnLevel(), \"Lost \" + that.nbrLogItemsSkipped + \" messages. Either connection with the server was down or logging was disabled via the enabled option. Reduce lost messages by increasing the ajaxAppender option maxBatchSize.\", that.appenderName));\r\n                    that.nbrLogItemsSkipped = 0;\r\n                }\r\n                that.onSendingEnded.call(that);\r\n            });\r\n        };\r\n        return Appender;\r\n    }());\r\n    JL.Appender = Appender;\r\n    // ---------------------\r\n    var AjaxAppender = /** @class */ (function (_super) {\r\n        __extends(AjaxAppender, _super);\r\n        function AjaxAppender(appenderName) {\r\n            return _super.call(this, appenderName, AjaxAppender.prototype.sendLogItemsAjax) || this;\r\n        }\r\n        AjaxAppender.prototype.setOptions = function (options) {\r\n            copyProperty(\"url\", options, this);\r\n            copyProperty(\"beforeSend\", options, this);\r\n            _super.prototype.setOptions.call(this, options);\r\n            return this;\r\n        };\r\n        AjaxAppender.prototype.sendLogItemsAjax = function (logItems, successCallback) {\r\n            // JSON.stringify is only supported on IE8+\r\n            // Use try-catch in case we get an exception here.\r\n            //\r\n            // The \"r\" field is now obsolete. When writing a server side component, \r\n            // read the HTTP header \"JSNLog-RequestId\"\r\n            // to get the request id.\r\n            //\r\n            // The .Net server side component\r\n            // now uses the JSNLog-RequestId HTTP Header, because this allows it to\r\n            // detect whether the incoming request has a request id.\r\n            // If the request id were in the json payload, it would have to read the json\r\n            // from the stream, interfering with normal non-logging requests.\r\n            //\r\n            // To see what characters you can use in the HTTP header, visit:\r\n            // http://stackoverflow.com/questions/3561381/custom-http-headers-naming-conventions/3561399#3561399\r\n            //\r\n            // It needs this ability, so users of NLog can set a requestId variable in NLog\r\n            // before the server side component tries to log the client side log message\r\n            // through an NLog logger.\r\n            // Unlike Log4Net, NLog doesn't allow you to register an object whose ToString()\r\n            // is only called when it tries to log something, so the requestId has to be \r\n            // determined right at the start of request processing.\r\n            try {\r\n                // Do not send logs, if JL.enabled is set to false.\r\n                //\r\n                // Do not call successCallback here. After each timeout, jsnlog will retry sending the message.\r\n                // If jsnlog gets re-enabled, it will then log the number of messages logged.\r\n                // If it doesn't get re-enabled, amount of cpu cycles wasted is minimal.\r\n                if (!allow(this)) {\r\n                    return;\r\n                }\r\n                // If a request is in progress, abort it.\r\n                // Otherwise, it may call the success callback, which will be very confusing.\r\n                // It may also stop the inflight request from resulting in a log at the server.\r\n                if (this.xhr && (this.xhr.readyState != 0) && (this.xhr.readyState != 4)) {\r\n                    this.xhr.abort();\r\n                }\r\n                // Because a react-native XMLHttpRequest cannot be reused it needs to be recreated with each request\r\n                this.xhr = JL._createXMLHttpRequest();\r\n                // Only determine the url right before you send a log request.\r\n                // Do not set the url when constructing the appender.\r\n                //\r\n                // This is because the server side component sets defaultAjaxUrl\r\n                // in a call to setOptions, AFTER the JL object and the default appender\r\n                // have been created. \r\n                var ajaxUrl = \"/jsnlog.logger\";\r\n                // This evaluates to true if defaultAjaxUrl is null or undefined\r\n                if (!(JL.defaultAjaxUrl == null)) {\r\n                    ajaxUrl = JL.defaultAjaxUrl;\r\n                }\r\n                if (this.url) {\r\n                    ajaxUrl = this.url;\r\n                }\r\n                this.xhr.open('POST', ajaxUrl);\r\n                this.xhr.setRequestHeader('Content-Type', 'application/json');\r\n                this.xhr.setRequestHeader('JSNLog-RequestId', JL.requestId);\r\n                var that = this;\r\n                this.xhr.onreadystatechange = function () {\r\n                    // On most browsers, if the request fails (eg. internet is gone),\r\n                    // it will set xhr.readyState == 4 and xhr.status != 200 (0 if request could not be sent) immediately.\r\n                    // However, Edge and IE will not change the readyState at all if the internet goes away while waiting\r\n                    // for a response.\r\n                    // Some servers will return a 204 (success, no content) when the JSNLog endpoint\r\n                    // returns the empty response. So check on any code in the 2.. range, not just 200.\r\n                    if ((that.xhr.readyState == 4) && (that.xhr.status >= 200 && that.xhr.status < 300)) {\r\n                        successCallback();\r\n                    }\r\n                };\r\n                var json = {\r\n                    r: JL.requestId,\r\n                    lg: logItems\r\n                };\r\n                // call beforeSend callback\r\n                // first try the callback on the appender\r\n                // then the global defaultBeforeSend callback\r\n                if (typeof this.beforeSend === 'function') {\r\n                    this.beforeSend.call(this, this.xhr, json);\r\n                }\r\n                else if (typeof JL.defaultBeforeSend === 'function') {\r\n                    JL.defaultBeforeSend.call(this, this.xhr, json);\r\n                }\r\n                var finalmsg = JSON.stringify(json);\r\n                this.xhr.send(finalmsg);\r\n            }\r\n            catch (e) { }\r\n        };\r\n        return AjaxAppender;\r\n    }(Appender));\r\n    JL.AjaxAppender = AjaxAppender;\r\n    // ---------------------\r\n    var ConsoleAppender = /** @class */ (function (_super) {\r\n        __extends(ConsoleAppender, _super);\r\n        function ConsoleAppender(appenderName) {\r\n            return _super.call(this, appenderName, ConsoleAppender.prototype.sendLogItemsConsole) || this;\r\n        }\r\n        ConsoleAppender.prototype.clog = function (logEntry) {\r\n            JL._console.log(logEntry);\r\n        };\r\n        ConsoleAppender.prototype.cerror = function (logEntry) {\r\n            if (JL._console.error) {\r\n                JL._console.error(logEntry);\r\n            }\r\n            else {\r\n                this.clog(logEntry);\r\n            }\r\n        };\r\n        ConsoleAppender.prototype.cwarn = function (logEntry) {\r\n            if (JL._console.warn) {\r\n                JL._console.warn(logEntry);\r\n            }\r\n            else {\r\n                this.clog(logEntry);\r\n            }\r\n        };\r\n        ConsoleAppender.prototype.cinfo = function (logEntry) {\r\n            if (JL._console.info) {\r\n                JL._console.info(logEntry);\r\n            }\r\n            else {\r\n                this.clog(logEntry);\r\n            }\r\n        };\r\n        // IE11 has a console.debug function. But its console doesn't have \r\n        // the option to show/hide debug messages (the same way Chrome and FF do),\r\n        // even though it does have such buttons for Error, Warn, Info.\r\n        //\r\n        // For now, this means that debug messages can not be hidden on IE.\r\n        // Live with this, seeing that it works fine on FF and Chrome, which\r\n        // will be much more popular with developers.\r\n        ConsoleAppender.prototype.cdebug = function (logEntry) {\r\n            if (JL._console.debug) {\r\n                JL._console.debug(logEntry);\r\n            }\r\n            else {\r\n                this.cinfo(logEntry);\r\n            }\r\n        };\r\n        ConsoleAppender.prototype.sendLogItemsConsole = function (logItems, successCallback) {\r\n            try {\r\n                // Do not send logs, if JL.enabled is set to false\r\n                //\r\n                // Do not call successCallback here. After each timeout, jsnlog will retry sending the message.\r\n                // If jsnlog gets re-enabled, it will then log the number of messages logged.\r\n                // If it doesn't get re-enabled, amount of cpu cycles wasted is minimal.\r\n                if (!allow(this)) {\r\n                    return;\r\n                }\r\n                if (!JL._console) {\r\n                    return;\r\n                }\r\n                var i;\r\n                for (i = 0; i < logItems.length; ++i) {\r\n                    var li = logItems[i];\r\n                    var msg = li.n + \": \" + li.m;\r\n                    // Only log the timestamp if we're on the server\r\n                    // (window is undefined). On the browser, the user\r\n                    // sees the log entry probably immediately, so in that case\r\n                    // the timestamp is clutter.\r\n                    if (typeof window === 'undefined') {\r\n                        msg = new Date(li.t) + \" | \" + msg;\r\n                    }\r\n                    if (li.l <= JL.getDebugLevel()) {\r\n                        this.cdebug(msg);\r\n                    }\r\n                    else if (li.l <= JL.getInfoLevel()) {\r\n                        this.cinfo(msg);\r\n                    }\r\n                    else if (li.l <= JL.getWarnLevel()) {\r\n                        this.cwarn(msg);\r\n                    }\r\n                    else {\r\n                        this.cerror(msg);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n            successCallback();\r\n        };\r\n        return ConsoleAppender;\r\n    }(Appender));\r\n    JL.ConsoleAppender = ConsoleAppender;\r\n    // --------------------\r\n    var Logger = /** @class */ (function () {\r\n        function Logger(loggerName) {\r\n            this.loggerName = loggerName;\r\n            // Create seenRexes, otherwise this logger will use the seenRexes\r\n            // of its parent via the prototype chain.\r\n            this.seenRegexes = [];\r\n        }\r\n        Logger.prototype.setOptions = function (options) {\r\n            copyProperty(\"level\", options, this);\r\n            copyProperty(\"userAgentRegex\", options, this);\r\n            copyProperty(\"disallow\", options, this);\r\n            copyProperty(\"ipRegex\", options, this);\r\n            copyProperty(\"appenders\", options, this);\r\n            copyProperty(\"onceOnly\", options, this);\r\n            // Reset seenRegexes, in case onceOnly has been changed.\r\n            this.seenRegexes = [];\r\n            return this;\r\n        };\r\n        // Turns an exception into an object that can be sent to the server.\r\n        Logger.prototype.buildExceptionObject = function (e) {\r\n            var excObject = {};\r\n            if (e.stack) {\r\n                excObject.stack = e.stack;\r\n            }\r\n            else {\r\n                excObject.e = e;\r\n            }\r\n            if (e.message) {\r\n                excObject.message = e.message;\r\n            }\r\n            if (e.name) {\r\n                excObject.name = e.name;\r\n            }\r\n            if (e.data) {\r\n                excObject.data = e.data;\r\n            }\r\n            if (e.inner) {\r\n                excObject.inner = this.buildExceptionObject(e.inner);\r\n            }\r\n            return excObject;\r\n        };\r\n        // Logs a log item.\r\n        // Parameter e contains an exception (or null or undefined).\r\n        //\r\n        // Reason that processing exceptions is done at this low level is that\r\n        // 1) no need to spend the cpu cycles if the logger is switched off\r\n        // 2) fatalException takes both a logObject and an exception, and the logObject\r\n        //    may be a function that should only be executed if the logger is switched on.\r\n        //\r\n        // If an exception is passed in, the contents of logObject is attached to the exception\r\n        // object in a new property logData.\r\n        // The resulting exception object is than worked into a message to the server.\r\n        //\r\n        // If there is no exception, logObject itself is worked into the message to the server.\r\n        Logger.prototype.log = function (level, logObject, e) {\r\n            var i = 0;\r\n            var compositeMessage;\r\n            var excObject;\r\n            // If we can't find any appenders, do nothing\r\n            if (!this.appenders) {\r\n                return this;\r\n            }\r\n            if (((level >= this.level)) && allow(this)) {\r\n                if (e) {\r\n                    excObject = this.buildExceptionObject(e);\r\n                    excObject.logData = stringifyLogObjectFunction(logObject);\r\n                }\r\n                else {\r\n                    excObject = logObject;\r\n                }\r\n                compositeMessage = stringifyLogObject(excObject);\r\n                if (allowMessage(this, compositeMessage.finalString)) {\r\n                    // See whether message is a duplicate\r\n                    if (this.onceOnly) {\r\n                        i = this.onceOnly.length - 1;\r\n                        while (i >= 0) {\r\n                            if (new RegExp(this.onceOnly[i]).test(compositeMessage.finalString)) {\r\n                                if (this.seenRegexes[i]) {\r\n                                    return this;\r\n                                }\r\n                                this.seenRegexes[i] = true;\r\n                            }\r\n                            i--;\r\n                        }\r\n                    }\r\n                    // Pass message to all appenders\r\n                    // Note that these appenders could be Winston transports\r\n                    // https://github.com/flatiron/winston\r\n                    compositeMessage.meta = compositeMessage.meta || {};\r\n                    // Note that if the user is logging an object, compositeMessage.meta will hold a reference to that object.\r\n                    // Do not add fields to compositeMessage.meta, otherwise the user's object will get that field out of the blue.\r\n                    i = this.appenders.length - 1;\r\n                    while (i >= 0) {\r\n                        this.appenders[i].log(levelToString(level), compositeMessage.msg, compositeMessage.meta, function () { }, level, compositeMessage.finalString, this.loggerName);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        Logger.prototype.trace = function (logObject) { return this.log(getTraceLevel(), logObject); };\r\n        Logger.prototype.debug = function (logObject) { return this.log(getDebugLevel(), logObject); };\r\n        Logger.prototype.info = function (logObject) { return this.log(getInfoLevel(), logObject); };\r\n        Logger.prototype.warn = function (logObject) { return this.log(getWarnLevel(), logObject); };\r\n        Logger.prototype.error = function (logObject) { return this.log(getErrorLevel(), logObject); };\r\n        Logger.prototype.fatal = function (logObject) { return this.log(getFatalLevel(), logObject); };\r\n        Logger.prototype.fatalException = function (logObject, e) { return this.log(getFatalLevel(), logObject, e); };\r\n        return Logger;\r\n    }());\r\n    JL.Logger = Logger;\r\n    function createAjaxAppender(appenderName) {\r\n        return new AjaxAppender(appenderName);\r\n    }\r\n    JL.createAjaxAppender = createAjaxAppender;\r\n    function createConsoleAppender(appenderName) {\r\n        return new ConsoleAppender(appenderName);\r\n    }\r\n    JL.createConsoleAppender = createConsoleAppender;\r\n    // -----------------------\r\n    // In the browser, the default appender is the AjaxAppender.\r\n    // Under nodejs (where there is no \"window\"), use the ConsoleAppender instead.\r\n    // \r\n    // Do NOT create an AjaxAppender object if you are not on a browser (that is, window is not defined).\r\n    // That would try to create an XmlHttpRequest object, which will crash outside a browser.\r\n    var defaultAppender;\r\n    if (typeof window !== 'undefined') {\r\n        defaultAppender = new AjaxAppender(\"\");\r\n    }\r\n    else {\r\n        defaultAppender = new ConsoleAppender(\"\");\r\n    }\r\n    // Create root logger\r\n    //\r\n    // Note that this is the parent of all other loggers.\r\n    // Logger \"x\" will be stored at\r\n    // JL.__.x\r\n    // Logger \"x.y\" at\r\n    // JL.__.x.y\r\n    JL.__ = new JL.Logger(\"\");\r\n    JL.__.setOptions({\r\n        level: JL.getDebugLevel(),\r\n        appenders: [defaultAppender]\r\n    });\r\n})(JL || (JL = {}));\r\nif (typeof exports !== 'undefined') {\r\n    // Allows SystemJs to import jsnlog.js. See\r\n    // https://github.com/mperdeck/jsnlog.js/issues/56\r\n    exports.__esModule = true;\r\n    exports.JL = JL;\r\n}\r\n// Support AMD module format\r\nvar define;\r\nif (typeof define == 'function' && define.amd) {\r\n    define('jsnlog', [], function () {\r\n        return JL;\r\n    });\r\n}\r\n// If the __jsnlog_configure global function has been\r\n// created, call it now. This allows you to create a global function\r\n// setting logger options etc. inline in the page before jsnlog.js\r\n// has been loaded.\r\nif (typeof __jsnlog_configure == 'function') {\r\n    __jsnlog_configure(JL);\r\n}\r\n// Create onerror handler to log uncaught exceptions to the server side log, but only if there \r\n// is no such handler already.\r\n// Must use \"typeof window\" here, because in NodeJs, window is not defined at all, so cannot refer to window in any way.\r\nif (typeof window !== 'undefined' && !window.onerror) {\r\n    window.onerror = function (errorMsg, url, lineNumber, column, errorObj) {\r\n        // Send object with all data to server side log, using severity fatal, \r\n        // from logger \"onerrorLogger\"\r\n        //\r\n        // Use errorMsg.message if available, so Angular 4 template errors will be logged.\r\n        // See https://github.com/mperdeck/jsnlog.js/pull/68\r\n        JL(\"onerrorLogger\").fatalException({\r\n            \"msg\": \"Uncaught Exception\",\r\n            \"errorMsg\": errorMsg ? (errorMsg.message || errorMsg) : '',\r\n            \"url\": url,\r\n            \"line number\": lineNumber, \"column\": column\r\n        }, errorObj);\r\n        // Tell browser to run its own error handler as well   \r\n        return false;\r\n    };\r\n}\r\n// Deal with unhandled exceptions thrown in promises\r\nif (typeof window !== 'undefined' && !window.onunhandledrejection) {\r\n    window.onunhandledrejection = function (event) {\r\n        // Send object with all data to server side log, using severity fatal, \r\n        // from logger \"onerrorLogger\".\r\n        // Need to check both event.reason.message and event.message,\r\n        // because SystemJs wraps exceptions and throws a new object which doesn't have a reason property.\r\n        // See https://github.com/systemjs/systemjs/issues/1309\r\n        JL(\"onerrorLogger\").fatalException({\r\n            \"msg\": \"unhandledrejection\",\r\n            \"errorMsg\": event.reason ? event.reason.message : event.message || null\r\n        }, event.reason);\r\n    };\r\n}\r\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'));\n","module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"es\",\"ecma\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/express\":[\"exp\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/trig\":[\"trig\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/step+xml\":[\"stpx\"],\"model/step+zip\":[\"stpz\"],\"model/step-xml+zip\":[\"stpxz\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};","/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\n\nvar protocols = [\n  'stun:',\n  'turn:'\n];\n\nmodule.exports = function(input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {};\n\n  // if we don't have a string url, then allow the input to passthrough\n  if (typeof url != 'string' && (! (url instanceof String))) {\n    return input;\n  }\n\n  // trim the url string, and convert to an array\n  url = url.trim();\n\n  // if the protocol is not known, then passthrough\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n  if (! protocol) {\n    return input;\n  }\n\n  // now let's attack the remaining url parts\n  url = url.slice(5);\n  parts = url.split('@');\n\n  output.username = input.username;\n  output.credential = input.credential;\n  // if we have an authentication part, then set the credentials\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':');\n\n    // add the output credential and username\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [ output.url ];\n\n  return output;\n};\n","/*!\n * Platform.js v1.3.6\n * Copyright 2014-2020 Benjamin Tan\n * Copyright 2011-2013 John-David Dalton\n * Available under MIT license\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': '(?:Edge|Edg|EdgA|EdgiOS)' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Vivaldi',\n      'Waterfox',\n      'WebPositive',\n      { 'label': 'Yandex Browser', 'pattern': 'YaBrowser' },\n      { 'label': 'UC Browser', 'pattern': 'UCBrowser' },\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chromium',\n      'Chrome',\n      { 'label': 'Chrome', 'pattern': '(?:HeadlessChrome)' },\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Alcatel': {},\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'Huawei': {},\n      'Lenovo': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Oppo': {},\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 },\n      'Xiaomi': { 'Mi': 1, 'Redmi': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'KaiOS',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      { 'label': 'DragonFly BSD', 'pattern': 'DragonFly' },\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect Android products.\n    // Browsers on Android devices typically provide their product IDS after \"Android;\"\n    // up to \"Build\" or \") AppleWebKit\".\n    // Example:\n    // \"Mozilla/5.0 (Linux; Android 8.1.0; Moto G (5) Plus) AppleWebKit/537.36\n    // (KHTML, like Gecko) Chrome/70.0.3538.80 Mobile Safari/537.36\"\n    if (/\\bAndroid\\b/.test(os) && !product &&\n        (data = /\\bAndroid[^;]*;(.*?)(?:Build|\\) AppleWebKit)\\b/i.exec(ua))) {\n      product = trim(data[1])\n        // Replace any language codes (eg. \"en-US\").\n        .replace(/^[a-z]{2}-[a-z]{2};\\s*/i, '')\n        || null;\n    }\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } else if (manufacturer && product) {\n      product = product\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.\\\\s]', 'i'), manufacturer + ' ')\n        .replace(RegExp('^(' + qualify(manufacturer) + ')[-_.]?(\\\\w)', 'i'), manufacturer + ' $2');\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && /^Linux\\b/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect UC Browser speed mode.\n    else if (name == 'UC Browser' && /\\bUCWEB\\b/.test(ua)) {\n      description.push('speed mode');\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|Edg|EdgA|EdgiOS|FxiOS|HeadlessChrome|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$)|UCBrowser|YaBrowser)',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS|KaiOS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\b(?:Headless)?Chrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : data < 602 ? 9 : data < 604 ? 10 : data < 606 ? 11 : data < 608 ? 12 : '12');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      } else if (name == 'Chrome' && /\\bHeadlessChrome/i.test(ua)) {\n        description.unshift('headless');\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Newer versions of SRWare Iron uses the Chrome tag to indicate its version number.\n    else if (/\\bSRWare Iron\\b/.test(name) && !version) {\n      version = getVersion('Chrome');\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Ensure OS does not include the browser name.\n    if (os && os.indexOf(name) != -1 && !RegExp(name + ' OS').test(os)) {\n      os = os.replace(RegExp(' *' + qualify(name) + ' *'), '');\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|SRWare Iron|Vivaldi|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Linux\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\",\n       * \"SuSE\", \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","/*\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\non @visionmedia's Emitter from UI Kit.\n\nWhy? I wanted it standalone.\n\nI also wanted support for wildcard emitters like this:\n\nemitter.on('*', function (eventName, other, event, payloads) {\n\n});\n\nemitter.on('somenamespace*', function (eventName, payloads) {\n\n});\n\nPlease note that callbacks triggered by wildcard registered events also get\nthe event name as the first argument.\n*/\n\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() { }\n\nWildEmitter.mixin = function (constructor) {\n    var prototype = constructor.prototype || constructor;\n\n    prototype.isWildEmitter= true;\n\n    // Listen on the given `event` with `fn`. Store a group name if present.\n    prototype.on = function (event, groupName, fn) {\n        this.callbacks = this.callbacks || {};\n        var hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        func._groupName = group;\n        (this.callbacks[event] = this.callbacks[event] || []).push(func);\n        return this;\n    };\n\n    // Adds an `event` listener that will be invoked a single\n    // time then automatically removed.\n    prototype.once = function (event, groupName, fn) {\n        var self = this,\n            hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        function on() {\n            self.off(event, on);\n            func.apply(this, arguments);\n        }\n        this.on(event, group, on);\n        return this;\n    };\n\n    // Unbinds an entire group\n    prototype.releaseGroup = function (groupName) {\n        this.callbacks = this.callbacks || {};\n        var item, i, len, handlers;\n        for (item in this.callbacks) {\n            handlers = this.callbacks[item];\n            for (i = 0, len = handlers.length; i < len; i++) {\n                if (handlers[i]._groupName === groupName) {\n                    //console.log('removing');\n                    // remove it and shorten the array we're looping through\n                    handlers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n        return this;\n    };\n\n    // Remove the given callback for `event` or all\n    // registered callbacks.\n    prototype.off = function (event, fn) {\n        this.callbacks = this.callbacks || {};\n        var callbacks = this.callbacks[event],\n            i;\n\n        if (!callbacks) return this;\n\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this.callbacks[event];\n            return this;\n        }\n\n        // remove specific handler\n        i = callbacks.indexOf(fn);\n        if (i !== -1) {\n            callbacks.splice(i, 1);\n            if (callbacks.length === 0) {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    };\n\n    /// Emit `event` with the given args.\n    // also calls any `*` handlers\n    prototype.emit = function (event) {\n        this.callbacks = this.callbacks || {};\n        var args = [].slice.call(arguments, 1),\n            callbacks = this.callbacks[event],\n            specialCallbacks = this.getWildcardCallbacks(event),\n            i,\n            len,\n            item,\n            listeners;\n\n        if (callbacks) {\n            listeners = callbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, args);\n            }\n        }\n\n        if (specialCallbacks) {\n            len = specialCallbacks.length;\n            listeners = specialCallbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, [event].concat(args));\n            }\n        }\n\n        return this;\n    };\n\n    // Helper for for finding special wildcard event handlers that match the event\n    prototype.getWildcardCallbacks = function (eventName) {\n        this.callbacks = this.callbacks || {};\n        var item,\n            split,\n            result = [];\n\n        for (item in this.callbacks) {\n            split = item.split('*');\n            if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\n                result = result.concat(this.callbacks[item]);\n            }\n        }\n        return result;\n    };\n\n};\n\nWildEmitter.mixin(WildEmitter);\n","/*!\n * EventEmitter v5.2.9 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - https://oli.me.uk/\n * @preserve\n */\n\n;(function (exports) {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    function isValidListener (listener) {\n        if (typeof listener === 'function' || listener instanceof RegExp) {\n            return true\n        } else if (listener && typeof listener === 'object') {\n            return isValidListener(listener.listener)\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        if (!isValidListener(listener)) {\n            throw new TypeError('listener must be a function');\n        }\n\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n\n                for (i = 0; i < listeners.length; i++) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}(typeof window !== 'undefined' ? window : this || {}));\n","module.exports={\n    \"author\": \"OpenVidu\",\n    \"dependencies\": {\n        \"freeice\": \"2.2.2\",\n        \"hark\": \"1.2.3\",\n        \"jsnlog\": \"2.30.0\",\n        \"mime\": \"3.0.0\",\n        \"platform\": \"1.3.6\",\n        \"semver\": \"7.3.8\",\n        \"uuid\": \"9.0.0\",\n        \"wolfy87-eventemitter\": \"5.2.9\",\n        \"events\": \"3.3.0\",\n        \"inherits\": \"2.0.4\"\n    },\n    \"description\": \"OpenVidu Browser\",\n    \"devDependencies\": {\n        \"@types/node\": \"18.11.9\",\n        \"@types/platform\": \"1.3.4\",\n        \"browserify\": \"17.0.0\",\n        \"grunt\": \"1.5.3\",\n        \"grunt-cli\": \"1.4.3\",\n        \"grunt-contrib-copy\": \"1.0.0\",\n        \"grunt-contrib-sass\": \"2.0.0\",\n        \"grunt-contrib-uglify\": \"5.2.2\",\n        \"grunt-contrib-watch\": \"1.1.0\",\n        \"grunt-postcss\": \"0.9.0\",\n        \"grunt-string-replace\": \"1.3.3\",\n        \"grunt-ts\": \"6.0.0-beta.22\",\n        \"terser\": \"5.15.1\",\n        \"tsify\": \"5.0.4\",\n        \"tslint\": \"6.1.3\",\n        \"typedoc\": \"0.23.21\",\n        \"typescript\": \"4.9.3\"\n    },\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"openvidu-browser\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git://github.com/OpenVidu/openvidu\"\n    },\n    \"scripts\": {\n        \"browserify\": \"VERSION=${VERSION:-dev}; mkdir -p static/js/ && cd src && ../node_modules/browserify/bin/cmd.js Main.ts -p [ tsify ] --exclude kurento-browser-extensions --debug -o ../static/js/openvidu-browser-$VERSION.js -v\",\n        \"browserify-prod\": \"VERSION=${VERSION:-dev}; mkdir -p static/js/ && cd src && ../node_modules/browserify/bin/cmd.js --debug Main.ts -p [ tsify ] --exclude kurento-browser-extensions | ../node_modules/terser/bin/terser --source-map content=inline --output ../static/js/openvidu-browser-$VERSION.min.js\",\n        \"build\": \"cd src/OpenVidu && ./../../node_modules/typescript/bin/tsc && cd ../.. && ./node_modules/typescript/bin/tsc --declaration src/index.ts --outDir ./lib --sourceMap --target es5 --lib dom,es5,es2015.promise,scripthost && rm -rf ./ts4.4 && mkdir -p ./ts4.4/lib && cp -r ./lib ./ts4.4 && find ./ts4.4/lib -type f ! -iname '*.d.ts' -delete && ./config/replace_for_ts44.sh\",\n        \"docs\": \"./generate-docs.sh\"\n    },\n    \"types\": \"lib/index.d.ts\",\n    \"typesVersions\": {\n        \"<4.4\": {\n            \"*\": [\n                \"ts4.4/*\"\n            ]\n        }\n    },\n    \"version\": \"2.28.0\"\n}\n","import { OpenVidu } from './OpenVidu/OpenVidu';\nimport { JL } from 'jsnlog';\n\nif (typeof globalThis !== 'undefined') {\n    globalThis['OpenVidu'] = OpenVidu;\n}\n\n// Disable jsnlog when library is loaded\nJL.setOptions({ enabled: false });\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { LocalConnectionOptions } from '../OpenViduInternal/Interfaces/Private/LocalConnectionOptions';\nimport { RemoteConnectionOptions } from '../OpenViduInternal/Interfaces/Private/RemoteConnectionOptions';\nimport { InboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/InboundStreamOptions';\nimport { StreamOptionsServer } from '../OpenViduInternal/Interfaces/Private/StreamOptionsServer';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { ExceptionEvent, ExceptionEventName } from '../OpenViduInternal/Events/ExceptionEvent';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Represents each one of the user's connection to the session (the local one and other user's connections).\n * Therefore each {@link Session} and {@link Stream} object has an attribute of type Connection\n */\nexport class Connection {\n    /**\n     * Unique identifier of the connection\n     */\n    connectionId: string;\n\n    /**\n     * Time when this connection was created in OpenVidu Server (UTC milliseconds)\n     */\n    creationTime: number;\n\n    /**\n     * Data associated to this connection (and therefore to certain user). This is an important field:\n     * it allows you to broadcast all the information you want for each user (a username, for example)\n     */\n    data: string;\n\n    /**\n     * Role of the connection.\n     * - `SUBSCRIBER`: can subscribe to published Streams of other users by calling {@link Session.subscribe}\n     * - `PUBLISHER`: SUBSCRIBER permissions + can publish their own Streams by calling {@link Session.publish}\n     * - `MODERATOR`: SUBSCRIBER + PUBLISHER permissions + can force the unpublishing or disconnection over a third-party Stream or Connection by call {@link Session.forceUnpublish} and {@link Session.forceDisconnect}\n     *\n     * **Only defined for the local connection. In remote connections will be `undefined`**\n     */\n    role: string;\n\n    /**\n     * Whether the streams published by this Connection will be recorded or not. This only affects [INDIVIDUAL recording](/en/stable/advanced-features/recording/#individual-recording-selection) <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n     *\n     * **Only defined for the local connection. In remote connections will be `undefined`**\n     */\n    record: boolean;\n\n    /**\n     * @hidden\n     */\n    stream?: Stream;\n\n    /**\n     * @hidden\n     */\n    localOptions: LocalConnectionOptions | undefined;\n\n    /**\n     * @hidden\n     */\n    remoteOptions: RemoteConnectionOptions | undefined;\n\n    /**\n     * @hidden\n     */\n    disposed = false;\n\n    /**\n     * @hidden\n     */\n    rpcSessionId: string;\n\n    /**\n     * @hidden\n     */\n    constructor(private session: Session, connectionOptions: LocalConnectionOptions | RemoteConnectionOptions) {\n        let msg = \"'Connection' created \";\n        if (!!(<LocalConnectionOptions>connectionOptions).role) {\n            // Connection is local\n            this.localOptions = <LocalConnectionOptions>connectionOptions;\n            this.connectionId = this.localOptions.id;\n            this.creationTime = this.localOptions.createdAt;\n            this.data = this.localOptions.metadata;\n            this.rpcSessionId = this.localOptions.sessionId;\n            this.role = this.localOptions.role;\n            this.record = this.localOptions.record;\n            msg += '(local)';\n        } else {\n            // Connection is remote\n            this.remoteOptions = <RemoteConnectionOptions>connectionOptions;\n            this.connectionId = this.remoteOptions.id;\n            this.creationTime = this.remoteOptions.createdAt;\n            if (this.remoteOptions.metadata) {\n                this.data = this.remoteOptions.metadata;\n            }\n            if (this.remoteOptions.streams) {\n                this.initRemoteStreams(this.remoteOptions.streams);\n            }\n            msg += \"(remote) with 'connectionId' [\" + this.remoteOptions.id + ']';\n        }\n        logger.info(msg);\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    sendIceCandidate(candidate: RTCIceCandidate): void {\n\n        if (!this.disposed) {\n            logger.debug((!!this.stream!.outboundStreamOpts ? 'Local' : 'Remote') + 'candidate for' + this.connectionId, candidate);\n\n            this.session.openvidu.sendRequest(\n                'onIceCandidate',\n                {\n                    endpointName: this.connectionId,\n                    candidate: candidate.candidate,\n                    sdpMid: candidate.sdpMid,\n                    sdpMLineIndex: candidate.sdpMLineIndex\n                },\n                (error, response) => {\n                    if (error) {\n                        logger.error('Error sending ICE candidate: ' + JSON.stringify(error));\n                        this.session.emitEvent('exception', [\n                            new ExceptionEvent(\n                                this.session,\n                                ExceptionEventName.ICE_CANDIDATE_ERROR,\n                                this.session,\n                                'There was an unexpected error on the server-side processing an ICE candidate generated and sent by the client-side',\n                                error\n                            )\n                        ]);\n                    }\n                }\n            );\n        } else {\n            logger.warn(`Connection ${this.connectionId} disposed when trying to send an ICE candidate. ICE candidate not sent`);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initRemoteStreams(options: StreamOptionsServer[]): void {\n        // This is ready for supporting multiple streams per Connection object. Right now the loop will always run just once\n        // this.stream should also be replaced by a collection of streams to support multiple streams per Connection\n        options.forEach((opts) => {\n            const streamOptions: InboundStreamOptions = {\n                id: opts.id,\n                createdAt: opts.createdAt,\n                connection: this,\n                hasAudio: opts.hasAudio,\n                hasVideo: opts.hasVideo,\n                audioActive: opts.audioActive,\n                videoActive: opts.videoActive,\n                typeOfVideo: opts.typeOfVideo,\n                frameRate: opts.frameRate,\n                videoDimensions: !!opts.videoDimensions ? JSON.parse(opts.videoDimensions) : undefined,\n                filter: !!opts.filter ? opts.filter : undefined\n            };\n            const stream = new Stream(this.session, streamOptions);\n\n            this.addStream(stream);\n        });\n\n        logger.info(\n            \"Remote 'Connection' with 'connectionId' [\" + this.connectionId + '] is now configured for receiving Streams with options: ',\n            this.stream!.inboundStreamOpts\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    addStream(stream: Stream): void {\n        stream.connection = this;\n        this.stream = stream;\n    }\n\n    /**\n     * @hidden\n     */\n    removeStream(): void {\n        delete this.stream;\n    }\n\n    /**\n     * @hidden\n     */\n    dispose(): void {\n        this.disposed = true;\n        this.removeStream();\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from '../OpenViduInternal/Events/Event';\nimport { EventMap } from '../OpenViduInternal/Events/EventMap/EventMap';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\nimport EventEmitter = require('wolfy87-eventemitter');\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\nexport abstract class EventDispatcher {\n    /**\n     * @hidden\n     */\n    userHandlerArrowHandler: WeakMap<(event: Event) => void, (event: Event) => void> = new WeakMap();\n    /**\n     * @hidden\n     */\n    ee = new EventEmitter();\n\n    /**\n     * Adds function `handler` to handle event `type`\n     *\n     * @returns The EventDispatcher object\n     */\n    abstract on<K extends keyof EventMap>(type: K, handler: (event: EventMap[K]) => void): this;\n\n    /**\n     * Adds function `handler` to handle event `type` just once. The handler will be automatically removed after first execution\n     *\n     * @returns The object that dispatched the event\n     */\n    abstract once<K extends keyof EventMap>(type: K, handler: (event: EventMap[K]) => void): this;\n\n    /**\n     * Removes a `handler` from event `type`. If no handler is provided, all handlers will be removed from the event\n     *\n     * @returns The object that dispatched the event\n     */\n    abstract off<K extends keyof EventMap>(type: K, handler?: (event: EventMap[K]) => void): this;\n\n    /**\n     * @hidden\n     */\n    onAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = (event) => {\n            if (event) {\n                logger.debug(message, event);\n            } else {\n                logger.debug(message);\n            }\n            handler(event);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.on(type, arrowHandler);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    onceAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = (event) => {\n            if (event) {\n                logger.debug(message, event);\n            } else {\n                logger.debug(message);\n            }\n            handler(event);\n            // Remove handler from map after first and only execution\n            this.userHandlerArrowHandler.delete(handler);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.once(type, arrowHandler);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    offAux(type: string, handler?: (event: Event) => void): EventDispatcher {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        } else {\n            // Must remove internal arrow function handler paired with user handler\n            const arrowHandler = this.userHandlerArrowHandler.get(handler);\n            if (!!arrowHandler) {\n                this.ee.off(type, arrowHandler);\n            }\n            this.userHandlerArrowHandler.delete(handler);\n        }\n        return this;\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { FilterEvent } from '../OpenViduInternal/Events/FilterEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * **WARNING**: experimental option. This interface may change in the near future\n *\n * Video/audio filter applied to a Stream. See {@link Stream.applyFilter}\n */\nexport class Filter {\n    /**\n     * Type of filter applied. This is the name of the remote class identifying the filter to apply in Kurento Media Server.\n     * For example: `\"FaceOverlayFilter\"`, `\"GStreamerFilter\"`.\n     *\n     * You can get this property in `*.kmd.json` files defining the Kurento filters. For example, for GStreamerFilter that's\n     * [here](https://github.com/Kurento/kms-filters/blob/53a452fac71d61795952e3d2202156c6b00f6d65/src/server/interface/filters.GStreamerFilter.kmd.json#L4)\n     */\n    type: string;\n\n    /**\n     * Parameters used to initialize the filter.\n     * These correspond to the constructor parameters used in the filter in Kurento Media Server (except for `mediaPipeline` parameter, which is never needed).\n     *\n     * For example: for `filter.type = \"GStreamerFilter\"` could be `filter.options = {\"command\": \"videobalance saturation=0.0\"}`\n     *\n     * You can get this property in `*.kmd.json` files defining the Kurento filters. For example, for GStreamerFilter that's\n     * [here](https://github.com/Kurento/kms-filters/blob/53a452fac71d61795952e3d2202156c6b00f6d65/src/server/interface/filters.GStreamerFilter.kmd.json#L13-L31)\n     */\n    options: Object;\n\n    /**\n     * Value passed the last time {@link Filter.execMethod} was called. If `undefined` this method has not been called yet.\n     *\n     * You can use this value to know the current status of any applied filter\n     */\n    lastExecMethod?: {\n        method: string;\n        params: Object;\n    };\n\n    /**\n     * @hidden\n     */\n    handlers: Map<string, (event: FilterEvent) => void> = new Map();\n\n    /**\n     * @hidden\n     */\n    stream: Stream;\n    private logger: OpenViduLogger;\n\n    /**\n     * @hidden\n     */\n    constructor(type: string, options: Object) {\n        this.type = type;\n        this.options = options;\n    }\n\n    /**\n     * Executes a filter method. Available methods are specific for each filter\n     *\n     * @param method Name of the method\n     * @param params Parameters of the method\n     */\n    execMethod(method: string, params: Object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.info('Executing filter method to stream ' + this.stream.streamId);\n\n            let finalParams;\n\n            const successExecMethod = (triggerEvent) => {\n                logger.info('Filter method successfully executed on Stream ' + this.stream.streamId);\n                const oldValue = (<any>Object).assign({}, this.stream.filter);\n                this.stream.filter!.lastExecMethod = { method, params: finalParams };\n                if (triggerEvent) {\n                    this.stream.session.emitEvent('streamPropertyChanged', [\n                        new StreamPropertyChangedEvent(\n                            this.stream.session,\n                            this.stream,\n                            'filter',\n                            this.stream.filter!,\n                            oldValue,\n                            'execFilterMethod'\n                        )\n                    ]);\n                    this.stream.streamManager.emitEvent('streamPropertyChanged', [\n                        new StreamPropertyChangedEvent(\n                            this.stream.streamManager,\n                            this.stream,\n                            'filter',\n                            this.stream.filter!,\n                            oldValue,\n                            'execFilterMethod'\n                        )\n                    ]);\n                }\n                return resolve();\n            };\n\n            if (this.type.startsWith('VB:')) {\n                if (typeof params === 'string') {\n                    try {\n                        params = JSON.parse(params);\n                    } catch (error) {\n                        return reject(new OpenViduError(OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR, 'Wrong params syntax: ' + error));\n                    }\n                }\n\n                finalParams = params;\n\n                if (method === 'update') {\n                    if (!this.stream.virtualBackgroundSinkElements?.VB) {\n                        return reject(\n                            new OpenViduError(OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR, 'There is no Virtual Background filter applied')\n                        );\n                    } else {\n                        this.stream.virtualBackgroundSinkElements.VB.updateValues(params)\n                            .then(() => successExecMethod(false))\n                            .catch((error) => {\n                                if (error.name === OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR) {\n                                    return reject(new OpenViduError(error.name, error.message));\n                                } else {\n                                    return reject(\n                                        new OpenViduError(\n                                            OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR,\n                                            'Error updating values on Virtual Background filter: ' + error\n                                        )\n                                    );\n                                }\n                            });\n                    }\n                } else {\n                    return reject(\n                        new OpenViduError(OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR, `Unknown Virtual Background method \"${method}\"`)\n                    );\n                }\n            } else {\n                let stringParams;\n                if (typeof params !== 'string') {\n                    try {\n                        stringParams = JSON.stringify(params);\n                    } catch (error) {\n                        const errorMsg = \"'params' property must be a JSON formatted object\";\n                        logger.error(errorMsg);\n                        return reject(errorMsg);\n                    }\n                } else {\n                    stringParams = <string>params;\n                }\n\n                finalParams = stringParams;\n\n                this.stream.session.openvidu.sendRequest(\n                    'execFilterMethod',\n                    { streamId: this.stream.streamId, method, params: stringParams },\n                    (error, response) => {\n                        if (error) {\n                            logger.error('Error executing filter method for Stream ' + this.stream.streamId, error);\n                            if (error.code === 401) {\n                                return reject(\n                                    new OpenViduError(\n                                        OpenViduErrorName.OPENVIDU_PERMISSION_DENIED,\n                                        \"You don't have permissions to execute a filter method\"\n                                    )\n                                );\n                            } else {\n                                return reject(error);\n                            }\n                        } else {\n                            return successExecMethod(true);\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Subscribe to certain filter event. Available events are specific for each filter\n     *\n     * @param eventType Event to which subscribe to.\n     * @param handler Function to execute upon event dispatched. It receives as parameter a {@link FilterEvent} object\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the event listener was successfully attached to the filter and rejected with an Error object if not\n     */\n    addEventListener(eventType: string, handler: (event: FilterEvent) => void): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.info('Adding filter event listener to event ' + eventType + ' to stream ' + this.stream.streamId);\n            this.stream.session.openvidu.sendRequest(\n                'addFilterEventListener',\n                { streamId: this.stream.streamId, eventType },\n                (error, response) => {\n                    if (error) {\n                        logger.error(\n                            'Error adding filter event listener to event ' + eventType + 'for Stream ' + this.stream.streamId,\n                            error\n                        );\n                        if (error.code === 401) {\n                            return reject(\n                                new OpenViduError(\n                                    OpenViduErrorName.OPENVIDU_PERMISSION_DENIED,\n                                    \"You don't have permissions to add a filter event listener\"\n                                )\n                            );\n                        } else {\n                            return reject(error);\n                        }\n                    } else {\n                        this.handlers.set(eventType, handler);\n                        logger.info(\n                            'Filter event listener to event ' + eventType + ' successfully applied on Stream ' + this.stream.streamId\n                        );\n                        return resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Removes certain filter event listener previously set.\n     *\n     * @param eventType Event to unsubscribe from.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the event listener was successfully removed from the filter and rejected with an Error object in other case\n     */\n    removeEventListener(eventType: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.info('Removing filter event listener to event ' + eventType + ' to stream ' + this.stream.streamId);\n            this.stream.session.openvidu.sendRequest(\n                'removeFilterEventListener',\n                { streamId: this.stream.streamId, eventType },\n                (error, response) => {\n                    if (error) {\n                        logger.error(\n                            'Error removing filter event listener to event ' + eventType + 'for Stream ' + this.stream.streamId,\n                            error\n                        );\n                        if (error.code === 401) {\n                            return reject(\n                                new OpenViduError(\n                                    OpenViduErrorName.OPENVIDU_PERMISSION_DENIED,\n                                    \"You don't have permissions to add a filter event listener\"\n                                )\n                            );\n                        } else {\n                            return reject(error);\n                        }\n                    } else {\n                        this.handlers.delete(eventType);\n                        logger.info(\n                            'Filter event listener to event ' + eventType + ' successfully removed on Stream ' + this.stream.streamId\n                        );\n                        return resolve();\n                    }\n                }\n            );\n        });\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { LocalRecorderState } from '../OpenViduInternal/Enums/LocalRecorderState';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\nimport Mime = require('mime/lite');\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Easy recording of {@link Stream} objects straightaway from the browser. Initialized with {@link OpenVidu.initLocalRecorder} method\n */\nexport class LocalRecorder {\n    state: LocalRecorderState;\n\n    private connectionId: string;\n    private mediaRecorder: MediaRecorder;\n    private chunks: any[] = [];\n    private blob?: Blob;\n    private id: string;\n    private videoPreviewSrc: string;\n    private videoPreview: HTMLVideoElement;\n\n    /**\n     * @hidden\n     */\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n        this.connectionId = !!this.stream.connection ? this.stream.connection.connectionId : 'default-connection';\n        this.id = this.stream.streamId + '_' + this.connectionId + '_localrecord';\n        this.state = LocalRecorderState.READY;\n    }\n\n    /**\n     * Starts the recording of the Stream. {@link state} property must be `READY`. After method succeeds is set to `RECORDING`\n     *\n     * @param options The [MediaRecorder.options](https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/MediaRecorder#parameters) to be used to record this Stream.\n     * For example:\n     *\n     * ```javascript\n     * var OV = new OpenVidu();\n     * var publisher = await OV.initPublisherAsync();\n     * var localRecorder = OV.initLocalRecorder(publisher.stream);\n     * var options = {\n     *      mimeType: 'video/webm;codecs=vp8',\n     *      audioBitsPerSecond:128000,\n     *      videoBitsPerSecond:2500000\n     * };\n     * localRecorder.record(options);\n     * ```\n     *\n     * If not specified, the default options preferred by the platform will be used.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording successfully started and rejected with an Error object if not\n     */\n    record(options?: any): Promise<void> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (typeof options === 'string' || options instanceof String) {\n                    return reject(\n                        `When calling LocalRecorder.record(options) parameter 'options' cannot be a string. Must be an object like { mimeType: \"${options}\" }`\n                    );\n                }\n                if (typeof MediaRecorder === 'undefined') {\n                    logger.error(\n                        'MediaRecorder not supported on your device. See compatibility in https://caniuse.com/#search=MediaRecorder'\n                    );\n                    throw Error(\n                        'MediaRecorder not supported on your device. See compatibility in https://caniuse.com/#search=MediaRecorder'\n                    );\n                }\n                if (this.state !== LocalRecorderState.READY) {\n                    throw Error(\n                        \"'LocalRecord.record()' needs 'LocalRecord.state' to be 'READY' (current value: '\" +\n                            this.state +\n                            \"'). Call 'LocalRecorder.clean()' or init a new LocalRecorder before\"\n                    );\n                }\n                logger.log(\"Starting local recording of stream '\" + this.stream.streamId + \"' of connection '\" + this.connectionId + \"'\");\n\n                if (!options) {\n                    options = { mimeType: 'video/webm' };\n                } else if (!options.mimeType) {\n                    options.mimeType = 'video/webm';\n                }\n\n                this.mediaRecorder = new MediaRecorder(this.stream.getMediaStream(), options);\n                this.mediaRecorder.start();\n            } catch (err) {\n                return reject(err);\n            }\n\n            this.mediaRecorder.ondataavailable = (e) => {\n                if (e.data.size > 0) {\n                    this.chunks.push(e.data);\n                }\n            };\n\n            this.mediaRecorder.onerror = (e) => {\n                logger.error('MediaRecorder error: ', e);\n            };\n\n            this.mediaRecorder.onstart = () => {\n                logger.log('MediaRecorder started (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.mediaRecorder.onstop = () => {\n                this.onStopDefault();\n            };\n\n            this.mediaRecorder.onpause = () => {\n                logger.log('MediaRecorder paused (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.mediaRecorder.onresume = () => {\n                logger.log('MediaRecorder resumed (state=' + this.mediaRecorder.state + ')');\n            };\n\n            this.state = LocalRecorderState.RECORDING;\n            return resolve();\n        });\n    }\n\n    /**\n     * Ends the recording of the Stream. {@link state} property must be `RECORDING` or `PAUSED`. After method succeeds is set to `FINISHED`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording successfully stopped and rejected with an Error object if not\n     */\n    stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state === LocalRecorderState.READY || this.state === LocalRecorderState.FINISHED) {\n                    throw Error(\n                        \"'LocalRecord.stop()' needs 'LocalRecord.state' to be 'RECORDING' or 'PAUSED' (current value: '\" +\n                            this.state +\n                            \"'). Call 'LocalRecorder.start()' before\"\n                    );\n                }\n                this.mediaRecorder.onstop = () => {\n                    this.onStopDefault();\n                    return resolve();\n                };\n                this.mediaRecorder.stop();\n            } catch (e) {\n                return reject(e);\n            }\n        });\n    }\n\n    /**\n     * Pauses the recording of the Stream. {@link state} property must be `RECORDING`. After method succeeds is set to `PAUSED`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording was successfully paused and rejected with an Error object if not\n     */\n    pause(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state !== LocalRecorderState.RECORDING) {\n                    return reject(\n                        Error(\n                            \"'LocalRecord.pause()' needs 'LocalRecord.state' to be 'RECORDING' (current value: '\" +\n                                this.state +\n                                \"'). Call 'LocalRecorder.start()' or 'LocalRecorder.resume()' before\"\n                        )\n                    );\n                }\n                this.mediaRecorder.pause();\n                this.state = LocalRecorderState.PAUSED;\n                return resolve();\n            } catch (error) {\n                return reject(error);\n            }\n        });\n    }\n\n    /**\n     * Resumes the recording of the Stream. {@link state} property must be `PAUSED`. After method succeeds is set to `RECORDING`\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the recording was successfully resumed and rejected with an Error object if not\n     */\n    resume(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            try {\n                if (this.state !== LocalRecorderState.PAUSED) {\n                    throw Error(\n                        \"'LocalRecord.resume()' needs 'LocalRecord.state' to be 'PAUSED' (current value: '\" +\n                            this.state +\n                            \"'). Call 'LocalRecorder.pause()' before\"\n                    );\n                }\n                this.mediaRecorder.resume();\n                this.state = LocalRecorderState.RECORDING;\n                return resolve();\n            } catch (error) {\n                return reject(error);\n            }\n        });\n    }\n\n    /**\n     * Previews the recording, appending a new HTMLVideoElement to element with id `parentId`. {@link state} property must be `FINISHED`\n     */\n    preview(parentElement): HTMLVideoElement {\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw Error(\n                \"'LocalRecord.preview()' needs 'LocalRecord.state' to be 'FINISHED' (current value: '\" +\n                    this.state +\n                    \"'). Call 'LocalRecorder.stop()' before\"\n            );\n        }\n\n        this.videoPreview = document.createElement('video');\n\n        this.videoPreview.id = this.id;\n        this.videoPreview.autoplay = true;\n\n        if (platform.isSafariBrowser()) {\n            this.videoPreview.playsInline = true;\n        }\n\n        if (typeof parentElement === 'string') {\n            const parentElementDom = document.getElementById(parentElement);\n            if (parentElementDom) {\n                this.videoPreview = parentElementDom.appendChild(this.videoPreview);\n            }\n        } else {\n            this.videoPreview = parentElement.appendChild(this.videoPreview);\n        }\n\n        this.videoPreview.src = this.videoPreviewSrc;\n\n        return this.videoPreview;\n    }\n\n    /**\n     * Gracefully stops and cleans the current recording (WARNING: it is completely dismissed). Sets {@link state} to `READY` so the recording can start again\n     */\n    clean(): void {\n        const f = () => {\n            delete this.blob;\n            this.chunks = [];\n            this.state = LocalRecorderState.READY;\n        };\n        if (this.state === LocalRecorderState.RECORDING || this.state === LocalRecorderState.PAUSED) {\n            this.stop()\n                .then(() => f())\n                .catch(() => f());\n        } else {\n            f();\n        }\n    }\n\n    /**\n     * Downloads the recorded video through the browser. {@link state} property must be `FINISHED`\n     */\n    download(): void {\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw Error(\n                \"'LocalRecord.download()' needs 'LocalRecord.state' to be 'FINISHED' (current value: '\" +\n                    this.state +\n                    \"'). Call 'LocalRecorder.stop()' before\"\n            );\n        } else {\n            const a: HTMLAnchorElement = document.createElement('a');\n            a.style.display = 'none';\n            document.body.appendChild(a);\n\n            const url = globalThis.URL.createObjectURL(<any>this.blob);\n            a.href = url;\n            a.download = this.id + '.' + Mime.getExtension(this.blob!.type);\n            a.click();\n            globalThis.URL.revokeObjectURL(url);\n\n            document.body.removeChild(a);\n        }\n    }\n\n    /**\n     * Gets the raw Blob file. Methods preview, download, uploadAsBinary and uploadAsMultipartfile use this same file to perform their specific actions. {@link state} property must be `FINISHED`\n     */\n    getBlob(): Blob {\n        if (this.state !== LocalRecorderState.FINISHED) {\n            throw Error(\"Call 'LocalRecord.stop()' before getting Blob file\");\n        } else {\n            return this.blob!;\n        }\n    }\n\n    /**\n     * Uploads the recorded video as a binary file performing an HTTP/POST operation to URL `endpoint`. {@link state} property must be `FINISHED`. Optional HTTP headers can be passed as second parameter. For example:\n     * ```\n     * var headers = {\n     *  \"Cookie\": \"$Version=1; Skin=new;\",\n     *  \"Authorization\":\"Basic QWxhZGpbjpuIHNlctZQ==\"\n     * }\n     * ```\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved with the `http.responseText` from server if the operation was successful and rejected with the failed `http.status` if not\n     */\n    uploadAsBinary(endpoint: string, headers?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.state !== LocalRecorderState.FINISHED) {\n                return reject(\n                    Error(\n                        \"'LocalRecord.uploadAsBinary()' needs 'LocalRecord.state' to be 'FINISHED' (current value: '\" +\n                            this.state +\n                            \"'). Call 'LocalRecorder.stop()' before\"\n                    )\n                );\n            } else {\n                const http = new XMLHttpRequest();\n                http.open('POST', endpoint, true);\n\n                if (typeof headers === 'object') {\n                    for (const key of Object.keys(headers)) {\n                        http.setRequestHeader(key, headers[key]);\n                    }\n                }\n\n                http.onreadystatechange = () => {\n                    if (http.readyState === 4) {\n                        if (http.status.toString().charAt(0) === '2') {\n                            // Success response from server (HTTP status standard: 2XX is success)\n                            return resolve(http.responseText);\n                        } else {\n                            return reject(http.status);\n                        }\n                    }\n                };\n                http.send(this.blob);\n            }\n        });\n    }\n\n    /**\n     * Uploads the recorded video as a multipart file performing an HTTP/POST operation to URL `endpoint`. {@link state} property must be `FINISHED`. Optional HTTP headers can be passed as second parameter. For example:\n     * ```\n     * var headers = {\n     *  \"Cookie\": \"$Version=1; Skin=new;\",\n     *  \"Authorization\":\"Basic QWxhZGpbjpuIHNlctZQ==\"\n     * }\n     * ```\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved with the `http.responseText` from server if the operation was successful and rejected with the failed `http.status` if not:\n     */\n    uploadAsMultipartfile(endpoint: string, headers?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.state !== LocalRecorderState.FINISHED) {\n                return reject(\n                    Error(\n                        \"'LocalRecord.uploadAsMultipartfile()' needs 'LocalRecord.state' to be 'FINISHED' (current value: '\" +\n                            this.state +\n                            \"'). Call 'LocalRecorder.stop()' before\"\n                    )\n                );\n            } else {\n                const http = new XMLHttpRequest();\n                http.open('POST', endpoint, true);\n\n                if (typeof headers === 'object') {\n                    for (const key of Object.keys(headers)) {\n                        http.setRequestHeader(key, headers[key]);\n                    }\n                }\n\n                const sendable = new FormData();\n                sendable.append('file', this.blob!, this.id + '.' + Mime.getExtension(this.blob!.type));\n\n                http.onreadystatechange = () => {\n                    if (http.readyState === 4) {\n                        if (http.status.toString().charAt(0) === '2') {\n                            // Success response from server (HTTP status standard: 2XX is success)\n                            return resolve(http.responseText);\n                        } else {\n                            return reject(http.status);\n                        }\n                    }\n                };\n\n                http.send(sendable);\n            }\n        });\n    }\n\n    /* Private methods */\n\n    private onStopDefault(): void {\n        logger.log('MediaRecorder stopped  (state=' + this.mediaRecorder.state + ')');\n\n        this.blob = new Blob(this.chunks, { type: this.mediaRecorder.mimeType });\n        this.chunks = [];\n\n        this.videoPreviewSrc = globalThis.URL.createObjectURL(this.blob);\n\n        this.state = LocalRecorderState.FINISHED;\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { LocalRecorder } from './LocalRecorder';\nimport { Publisher } from './Publisher';\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { SessionDisconnectedEvent } from '../OpenViduInternal/Events/SessionDisconnectedEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { Device } from '../OpenViduInternal/Interfaces/Public/Device';\nimport { OpenViduAdvancedConfiguration } from '../OpenViduInternal/Interfaces/Public/OpenViduAdvancedConfiguration';\nimport { PublisherProperties } from '../OpenViduInternal/Interfaces/Public/PublisherProperties';\nimport { CustomMediaStreamConstraints } from '../OpenViduInternal/Interfaces/Private/CustomMediaStreamConstraints';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\nimport { StreamPropertyChangedEventReason, ChangedPropertyType } from '../OpenViduInternal/Events/Types/Types';\n\nimport * as screenSharingAuto from '../OpenViduInternal/ScreenSharing/Screen-Capturing-Auto';\nimport * as screenSharing from '../OpenViduInternal/ScreenSharing/Screen-Capturing';\nimport { OpenViduLoggerConfiguration } from '../OpenViduInternal/Logger/OpenViduLoggerConfiguration';\n/**\n * @hidden\n */\nimport EventEmitter = require('wolfy87-eventemitter');\n/**\n * @hidden\n */\nimport RpcBuilder = require('../OpenViduInternal/KurentoUtils/kurento-jsonrpc');\n\n/**\n * @hidden\n */\nconst packageJson = require('../../package.json');\n/**\n * @hidden\n */\ndeclare var cordova: any;\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Entrypoint of OpenVidu Browser library.\n * Use it to initialize objects of type {@link Session}, {@link Publisher} and {@link LocalRecorder}\n */\nexport class OpenVidu {\n    private jsonRpcClient: any;\n    private masterNodeHasCrashed = false;\n\n    /**\n     * @hidden\n     */\n    session: Session;\n    /**\n     * @hidden\n     */\n    publishers: Publisher[] = [];\n    /**\n     * @hidden\n     */\n    wsUri: string;\n    /**\n     * @hidden\n     */\n    httpUri: string;\n    /**\n     * @hidden\n     */\n    secret = '';\n    /**\n     * @hidden\n     */\n    recorder = false;\n    /**\n     * @hidden\n     */\n    stt = false;\n    /**\n     * @hidden\n     */\n    iceServers: RTCIceServer[];\n    /**\n     * @hidden\n     */\n    role: string;\n    /**\n     * @hidden\n     */\n    finalUserId: string;\n    /**\n     * @hidden\n     */\n    mediaServer: string;\n    /**\n     * @hidden\n     */\n    videoSimulcast: boolean;\n    /**\n     * @hidden\n     */\n    life: number = -1;\n    /**\n     * @hidden\n     */\n    advancedConfiguration: OpenViduAdvancedConfiguration = {};\n    /**\n     * @hidden\n     */\n    webrtcStatsInterval: number = -1;\n    /**\n     * @hidden\n     */\n    sendBrowserLogs: OpenViduLoggerConfiguration = OpenViduLoggerConfiguration.disabled;\n    /**\n     * @hidden\n     */\n    isAtLeastPro: boolean = false;\n    /**\n     * @hidden\n     */\n    isEnterprise: boolean = false;\n    /**\n     * @hidden\n     */\n    libraryVersion: string;\n    /**\n     * @hidden\n     */\n    ee = new EventEmitter();\n\n    constructor() {\n        platform = PlatformUtils.getInstance();\n        this.libraryVersion = packageJson.version;\n        logger.info('OpenVidu initialized');\n        logger.info('Platform detected: ' + platform.getDescription());\n        logger.info('openvidu-browser version: ' + this.libraryVersion);\n\n        if (platform.isMobileDevice() || platform.isReactNative()) {\n            // Listen to orientationchange only on mobile devices\n            this.onOrientationChanged(() => {\n                this.publishers.forEach((publisher) => {\n                    if (publisher.stream.isLocalStreamPublished && !!publisher.stream && !!publisher.stream.hasVideo) {\n                        this.sendNewVideoDimensionsIfRequired(publisher, 'deviceRotated', 75, 10);\n                    }\n                });\n            });\n        }\n    }\n\n    /**\n     * Returns new session\n     */\n    initSession(): Session {\n        this.session = new Session(this);\n        return this.session;\n    }\n\n    initPublisher(targetElement: string | HTMLElement | undefined): Publisher;\n    initPublisher(targetElement: string | HTMLElement | undefined, properties: PublisherProperties): Publisher;\n    initPublisher(targetElement: string | HTMLElement | undefined, completionHandler: (error: Error | undefined) => void): Publisher;\n    initPublisher(\n        targetElement: string | HTMLElement | undefined,\n        properties: PublisherProperties,\n        completionHandler: (error: Error | undefined) => void\n    ): Publisher;\n\n    /**\n     * Returns a new publisher\n     *\n     * #### Events dispatched\n     *\n     * The {@link Publisher} object will dispatch an `accessDialogOpened` event, only if the pop-up shown by the browser to request permissions for the camera is opened. You can use this event to alert the user about granting permissions\n     * for your website. An `accessDialogClosed` event will also be dispatched after user clicks on \"Allow\" or \"Block\" in the pop-up.\n     *\n     * The {@link Publisher} object will dispatch an `accessAllowed` or `accessDenied` event once it has been granted access to the requested input devices or not.\n     *\n     * The {@link Publisher} object will dispatch a `videoElementCreated` event once a HTML video element has been added to DOM (only if you\n     * [let OpenVidu take care of the video players](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)). See {@link VideoElementEvent} to learn more.\n     *\n     * The {@link Publisher} object will dispatch a `streamPlaying` event once the local streams starts playing. See {@link StreamManagerEvent} to learn more.\n     *\n     * @param targetElement  HTML DOM element (or its `id` attribute) in which the video element of the Publisher will be inserted (see {@link PublisherProperties.insertMode}). If *null* or *undefined* no default video will be created for this Publisher.\n     * You can always call method {@link Publisher.addVideoElement} or {@link Publisher.createVideoElement} to manage the video elements on your own (see [Manage video players](/en/stable/cheatsheet/manage-videos) section)\n     * @param completionHandler `error` parameter is null if `initPublisher` succeeds, and is defined if it fails.\n     *                          `completionHandler` function is called before the Publisher dispatches an `accessAllowed` or an `accessDenied` event\n     */\n    initPublisher(targetElement: string | HTMLElement | undefined, param2?, param3?): Publisher {\n        let properties: PublisherProperties;\n\n        if (!!param2 && typeof param2 !== 'function') {\n            // Matches 'initPublisher(targetElement, properties)' or 'initPublisher(targetElement, properties, completionHandler)'\n\n            properties = <PublisherProperties>param2;\n\n            properties = {\n                audioSource: typeof properties.audioSource !== 'undefined' ? properties.audioSource : undefined,\n                frameRate:\n                    typeof MediaStreamTrack !== 'undefined' && properties.videoSource instanceof MediaStreamTrack\n                        ? undefined\n                        : typeof properties.frameRate !== 'undefined'\n                            ? properties.frameRate\n                            : undefined,\n                insertMode:\n                    typeof properties.insertMode !== 'undefined'\n                        ? typeof properties.insertMode === 'string'\n                            ? VideoInsertMode[properties.insertMode]\n                            : properties.insertMode\n                        : VideoInsertMode.APPEND,\n                mirror: typeof properties.mirror !== 'undefined' ? properties.mirror : true,\n                publishAudio: typeof properties.publishAudio !== 'undefined' ? properties.publishAudio : true,\n                publishVideo: typeof properties.publishVideo !== 'undefined' ? properties.publishVideo : true,\n                resolution:\n                    typeof MediaStreamTrack !== 'undefined' && properties.videoSource instanceof MediaStreamTrack\n                        ? undefined\n                        : typeof properties.resolution !== 'undefined'\n                            ? properties.resolution\n                            : '640x480',\n                videoSource: typeof properties.videoSource !== 'undefined' ? properties.videoSource : undefined,\n                videoSimulcast: properties.videoSimulcast,\n                filter: properties.filter\n            };\n        } else {\n            // Matches 'initPublisher(targetElement)' or 'initPublisher(targetElement, completionHandler)'\n\n            properties = {\n                insertMode: VideoInsertMode.APPEND,\n                mirror: true,\n                publishAudio: true,\n                publishVideo: true,\n                resolution: '640x480'\n            };\n        }\n\n        const publisher: Publisher = new Publisher(targetElement, properties, this);\n\n        let completionHandler: (error: Error | undefined) => void;\n        if (!!param2 && typeof param2 === 'function') {\n            completionHandler = param2;\n        } else if (!!param3) {\n            completionHandler = param3;\n        }\n\n        publisher\n            .initialize()\n            .then(() => {\n                if (completionHandler !== undefined) {\n                    completionHandler(undefined);\n                }\n                publisher.emitEvent('accessAllowed', []);\n            })\n            .catch((error) => {\n                if (completionHandler !== undefined) {\n                    completionHandler(error);\n                }\n                publisher.emitEvent('accessDenied', [error]);\n            });\n\n        this.publishers.push(publisher);\n        return publisher;\n    }\n\n    /**\n     * Promisified version of {@link OpenVidu.initPublisher}\n     *\n     * > WARNING: events `accessDialogOpened` and `accessDialogClosed` will not be dispatched if using this method instead of {@link OpenVidu.initPublisher}\n     */\n    initPublisherAsync(targetElement: string | HTMLElement | undefined): Promise<Publisher>;\n    initPublisherAsync(targetElement: string | HTMLElement | undefined, properties: PublisherProperties): Promise<Publisher>;\n\n    initPublisherAsync(targetElement: string | HTMLElement | undefined, properties?: PublisherProperties): Promise<Publisher> {\n        return new Promise<Publisher>((resolve, reject) => {\n            let publisher: Publisher;\n\n            const callback = (error: Error) => {\n                if (!!error) {\n                    return reject(error);\n                } else {\n                    return resolve(publisher);\n                }\n            };\n\n            if (!!properties) {\n                publisher = this.initPublisher(targetElement, properties, callback);\n            } else {\n                publisher = this.initPublisher(targetElement, callback);\n            }\n        });\n    }\n\n    /**\n     * Returns a new local recorder for recording streams straight away from the browser\n     * @param stream  Stream to record\n     */\n    initLocalRecorder(stream: Stream): LocalRecorder {\n        return new LocalRecorder(stream);\n    }\n\n    /**\n     * Checks if the browser supports OpenVidu\n     * @returns 1 if the browser supports OpenVidu, 0 otherwise\n     */\n    checkSystemRequirements(): boolean {\n        // Specific iOS platform support (iPhone, iPad)\n        if (platform.isIPhoneOrIPad()) {\n            return (\n                platform.isIOSWithSafari() ||\n                platform.isChromeMobileBrowser() ||\n                platform.isFirefoxMobileBrowser() ||\n                platform.isOperaMobileBrowser() ||\n                platform.isEdgeMobileBrowser() ||\n                platform.isIonicIos() // Ionic apps for iOS\n            );\n        }\n\n        // General platform support for web clients (Desktop, Mobile)\n        return (\n            platform.isChromeBrowser() ||\n            platform.isChromeMobileBrowser() ||\n            platform.isFirefoxBrowser() ||\n            platform.isFirefoxMobileBrowser() ||\n            platform.isOperaBrowser() ||\n            platform.isOperaMobileBrowser() ||\n            platform.isEdgeBrowser() ||\n            platform.isEdgeMobileBrowser() ||\n            platform.isSamsungBrowser() ||\n            platform.isSafariBrowser() ||\n            platform.isAndroidBrowser() || // Android WebView & Ionic apps for Android\n            platform.isElectron() ||\n            platform.isNodeJs() ||\n            // TODO: remove when updating platform detection library\n            platform.isMotorolaEdgeDevice()\n        );\n    }\n\n    /**\n     * Checks if the browser supports screen-sharing. Desktop Chrome, Firefox and Opera support screen-sharing\n     * @returns 1 if the browser supports screen-sharing, 0 otherwise\n     */\n    checkScreenSharingCapabilities(): boolean {\n        return platform.canScreenShare();\n    }\n\n    /**\n     * Collects information about the media input devices available on the system. You can pass property `deviceId` of a {@link Device} object as value of `audioSource` or `videoSource` properties in {@link initPublisher} method\n     */\n    getDevices(): Promise<Device[]> {\n        return new Promise<Device[]>((resolve, reject) => {\n            navigator.mediaDevices\n                .enumerateDevices()\n                .then((deviceInfos) => {\n                    const devices: Device[] = [];\n\n                    // Ionic Android  devices\n                    if (platform.isIonicAndroid() && typeof cordova != 'undefined' && cordova?.plugins?.EnumerateDevicesPlugin) {\n                        cordova.plugins.EnumerateDevicesPlugin.getEnumerateDevices().then((pluginDevices: Device[]) => {\n                            let pluginAudioDevices: Device[] = [];\n                            let videoDevices: Device[] = [];\n                            let audioDevices: Device[] = [];\n                            pluginAudioDevices = pluginDevices.filter((device: Device) => device.kind === 'audioinput');\n                            videoDevices = deviceInfos.filter((device: MediaDeviceInfo) => device.kind === 'videoinput') as any;\n                            audioDevices = deviceInfos.filter((device: MediaDeviceInfo) => device.kind === 'audioinput') as any;\n                            videoDevices.forEach((deviceInfo, index) => {\n                                if (!deviceInfo.label) {\n                                    let label = '';\n                                    if (index === 0) {\n                                        label = 'Front Camera';\n                                    } else if (index === 1) {\n                                        label = 'Back Camera';\n                                    } else {\n                                        label = 'Unknown Camera';\n                                    }\n                                    devices.push({\n                                        kind: deviceInfo.kind,\n                                        deviceId: deviceInfo.deviceId,\n                                        label: label\n                                    });\n                                } else {\n                                    devices.push({\n                                        kind: deviceInfo.kind,\n                                        deviceId: deviceInfo.deviceId,\n                                        label: deviceInfo.label\n                                    });\n                                }\n                            });\n                            audioDevices.forEach((deviceInfo, index) => {\n                                if (!deviceInfo.label) {\n                                    let label = '';\n                                    switch (index) {\n                                        case 0: // Default Microphone\n                                            label = 'Default';\n                                            break;\n                                        case 1: // Microphone + Speakerphone\n                                            const defaultMatch = pluginAudioDevices.filter((d) => d.label.includes('Built'))[0];\n                                            label = defaultMatch ? defaultMatch.label : 'Built-in Microphone';\n                                            break;\n                                        case 2: // Headset Microphone\n                                            const wiredMatch = pluginAudioDevices.filter((d) => d.label.includes('Wired'))[0];\n                                            if (wiredMatch) {\n                                                label = wiredMatch.label;\n                                            } else {\n                                                label = 'Headset earpiece';\n                                            }\n                                            break;\n                                        case 3:\n                                            const wirelessMatch = pluginAudioDevices.filter((d) => d.label.includes('Bluetooth'))[0];\n                                            label = wirelessMatch ? wirelessMatch.label : 'Wireless';\n                                            break;\n                                        default:\n                                            label = 'Unknown Microphone';\n                                            break;\n                                    }\n                                    devices.push({\n                                        kind: deviceInfo.kind,\n                                        deviceId: deviceInfo.deviceId,\n                                        label: label\n                                    });\n                                } else {\n                                    devices.push({\n                                        kind: deviceInfo.kind,\n                                        deviceId: deviceInfo.deviceId,\n                                        label: deviceInfo.label\n                                    });\n                                }\n                            });\n                            return resolve(devices);\n                        });\n                    } else {\n                        // Rest of platforms\n                        deviceInfos.forEach((deviceInfo) => {\n                            if (deviceInfo.kind === 'audioinput' || deviceInfo.kind === 'videoinput') {\n                                devices.push({\n                                    kind: deviceInfo.kind,\n                                    deviceId: deviceInfo.deviceId,\n                                    label: deviceInfo.label\n                                });\n                            }\n                        });\n                        return resolve(devices);\n                    }\n                })\n                .catch((error) => {\n                    logger.error('Error getting devices', error);\n                    return reject(error);\n                });\n        });\n    }\n\n    /**\n     * Get a MediaStream object that you can customize before calling {@link initPublisher} (pass _MediaStreamTrack_ property of the _MediaStream_ value resolved by the Promise as `audioSource` or `videoSource` properties in {@link initPublisher})\n     *\n     * Parameter `options` is the same as in {@link initPublisher} second parameter (of type {@link PublisherProperties}), but only the following properties will be applied: `audioSource`, `videoSource`, `frameRate`, `resolution`\n     *\n     * To customize the Publisher's video, the API for HTMLCanvasElement is very useful. For example, to get a black-and-white video at 10 fps and HD resolution with no sound:\n     * ```\n     * var OV = new OpenVidu();\n     * var FRAME_RATE = 10;\n     *\n     * OV.getUserMedia({\n     *    audioSource: false,\n     *    videoSource: undefined,\n     *    resolution: '1280x720',\n     *    frameRate: FRAME_RATE\n     * })\n     * .then(mediaStream => {\n     *\n     *    var videoTrack = mediaStream.getVideoTracks()[0];\n     *    var video = document.createElement('video');\n     *    video.srcObject = new MediaStream([videoTrack]);\n     *\n     *    var canvas = document.createElement('canvas');\n     *    var ctx = canvas.getContext('2d');\n     *    ctx.filter = 'grayscale(100%)';\n     *\n     *    video.addEventListener('play', () => {\n     *      var loop = () => {\n     *        if (!video.paused && !video.ended) {\n     *          ctx.drawImage(video, 0, 0, 300, 170);\n     *          setTimeout(loop, 1000/ FRAME_RATE); // Drawing at 10 fps\n     *        }\n     *      };\n     *      loop();\n     *    });\n     *    video.play();\n     *\n     *    var grayVideoTrack = canvas.captureStream(FRAME_RATE).getVideoTracks()[0];\n     *    var publisher = this.OV.initPublisher(\n     *      myHtmlTarget,\n     *      {\n     *        audioSource: false,\n     *        videoSource: grayVideoTrack\n     *      });\n     * });\n     * ```\n     */\n    async getUserMedia(options: PublisherProperties): Promise<MediaStream> {\n        const askForAudioStreamOnly = async (previousMediaStream: MediaStream, constraints: MediaStreamConstraints) => {\n            const definedAudioConstraint = constraints.audio === undefined ? true : constraints.audio;\n            const constraintsAux: MediaStreamConstraints = { audio: definedAudioConstraint, video: false };\n            try {\n                const audioOnlyStream = await navigator.mediaDevices.getUserMedia(constraintsAux);\n                previousMediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n                return previousMediaStream;\n            } catch (error) {\n                previousMediaStream.getAudioTracks().forEach((track) => {\n                    track.stop();\n                });\n                previousMediaStream.getVideoTracks().forEach((track) => {\n                    track.stop();\n                });\n                throw this.generateAudioDeviceError(error, constraintsAux);\n            }\n        };\n\n        try {\n            const myConstraints = await this.generateMediaConstraints(options);\n            if (\n                (!!myConstraints.videoTrack && !!myConstraints.audioTrack) ||\n                (!!myConstraints.audioTrack && myConstraints.constraints?.video === false) ||\n                (!!myConstraints.videoTrack && myConstraints.constraints?.audio === false)\n            ) {\n                // No need to call getUserMedia at all. Both tracks provided, or only AUDIO track provided or only VIDEO track provided\n                return this.addAlreadyProvidedTracks(myConstraints, new MediaStream());\n            } else {\n                // getUserMedia must be called. AUDIO or VIDEO are requesting a new track\n\n                // Delete already provided constraints for audio or video\n                if (!!myConstraints.videoTrack) {\n                    delete myConstraints.constraints!.video;\n                }\n                if (!!myConstraints.audioTrack) {\n                    delete myConstraints.constraints!.audio;\n                }\n\n                let mustAskForAudioTrackLater = false;\n                if (typeof options.videoSource === 'string') {\n                    // Video is deviceId or screen sharing\n                    if (\n                        options.videoSource === 'screen' ||\n                        options.videoSource === 'window' ||\n                        (platform.isElectron() && options.videoSource.startsWith('screen:'))\n                    ) {\n                        // Video is screen sharing\n                        mustAskForAudioTrackLater =\n                            !myConstraints.audioTrack && options.audioSource !== null && options.audioSource !== false;\n                        if (navigator.mediaDevices['getDisplayMedia'] && !platform.isElectron()) {\n                            // getDisplayMedia supported\n                            try {\n                                const mediaStream = await navigator.mediaDevices['getDisplayMedia']({ video: true });\n                                this.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                                if (mustAskForAudioTrackLater) {\n                                    return await askForAudioStreamOnly(mediaStream, <MediaStreamConstraints>myConstraints.constraints);\n                                } else {\n                                    return mediaStream;\n                                }\n                            } catch (error) {\n                                let errorName: OpenViduErrorName = OpenViduErrorName.SCREEN_CAPTURE_DENIED;\n                                const errorMessage = error.toString();\n                                throw new OpenViduError(errorName, errorMessage);\n                            }\n                        } else {\n                            // getDisplayMedia NOT supported. Can perform getUserMedia below with already calculated constraints\n                        }\n                    } else {\n                        // Video is deviceId. Can perform getUserMedia below with already calculated constraints\n                    }\n                }\n                // Use already calculated constraints\n                const constraintsAux = mustAskForAudioTrackLater\n                    ? { video: myConstraints.constraints!.video }\n                    : myConstraints.constraints;\n                try {\n                    const mediaStream = await navigator.mediaDevices.getUserMedia(constraintsAux);\n                    this.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                    if (mustAskForAudioTrackLater) {\n                        return await askForAudioStreamOnly(mediaStream, <MediaStreamConstraints>myConstraints.constraints);\n                    } else {\n                        return mediaStream;\n                    }\n                } catch (error) {\n                    let errorName: OpenViduErrorName;\n                    const errorMessage = error.toString();\n                    if (!(options.videoSource === 'screen')) {\n                        errorName = OpenViduErrorName.DEVICE_ACCESS_DENIED;\n                    } else {\n                        errorName = OpenViduErrorName.SCREEN_CAPTURE_DENIED;\n                    }\n                    throw new OpenViduError(errorName, errorMessage);\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /* tslint:disable:no-empty */\n    /**\n     * Disable all logging except error level\n     */\n    enableProdMode(): void {\n        logger.enableProdMode();\n    }\n    /* tslint:enable:no-empty */\n\n    /**\n     * Set OpenVidu advanced configuration options. `configuration` is an object of type {@link OpenViduAdvancedConfiguration}. Call this method to override previous values at any moment.\n     */\n    setAdvancedConfiguration(configuration: OpenViduAdvancedConfiguration): void {\n        this.advancedConfiguration = configuration;\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    onOrientationChanged(handler): void {\n        (globalThis as any).addEventListener('orientationchange', handler);\n    }\n\n    /**\n     * @hidden\n     */\n    sendNewVideoDimensionsIfRequired(publisher: Publisher, reason: StreamPropertyChangedEventReason, WAIT_INTERVAL: number, MAX_ATTEMPTS: number) {\n        let attempts = 0;\n        const oldWidth = publisher?.stream?.videoDimensions?.width || 0;\n        const oldHeight = publisher?.stream?.videoDimensions?.height || 0;\n\n        const repeatUntilChangeOrMaxAttempts: NodeJS.Timeout = setInterval(() => {\n            attempts++;\n            if (attempts > MAX_ATTEMPTS) {\n                clearTimeout(repeatUntilChangeOrMaxAttempts);\n            }\n            publisher.getVideoDimensions().then((newDimensions) => {\n                if (newDimensions.width !== oldWidth || newDimensions.height !== oldHeight) {\n                    clearTimeout(repeatUntilChangeOrMaxAttempts);\n                    this.sendVideoDimensionsChangedEvent(publisher, reason, oldWidth, oldHeight, newDimensions.width, newDimensions.height);\n                }\n            });\n        }, WAIT_INTERVAL);\n    }\n\n    /**\n     * @hidden\n     */\n    sendVideoDimensionsChangedEvent(\n        publisher: Publisher,\n        reason: StreamPropertyChangedEventReason,\n        oldWidth: number,\n        oldHeight: number,\n        newWidth: number,\n        newHeight: number\n    ) {\n        publisher.stream.videoDimensions = {\n            width: newWidth || 0,\n            height: newHeight || 0\n        };\n        this.sendRequest(\n            'streamPropertyChanged',\n            {\n                streamId: publisher.stream.streamId,\n                property: 'videoDimensions',\n                newValue: JSON.stringify(publisher.stream.videoDimensions),\n                reason\n            },\n            (error, response) => {\n                if (error) {\n                    logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                } else {\n                    this.session.emitEvent('streamPropertyChanged', [\n                        new StreamPropertyChangedEvent(\n                            this.session,\n                            publisher.stream,\n                            'videoDimensions',\n                            publisher.stream.videoDimensions,\n                            { width: oldWidth, height: oldHeight },\n                            reason\n                        )\n                    ]);\n                    publisher.emitEvent('streamPropertyChanged', [\n                        new StreamPropertyChangedEvent(\n                            publisher,\n                            publisher.stream,\n                            'videoDimensions',\n                            publisher.stream.videoDimensions,\n                            { width: oldWidth, height: oldHeight },\n                            reason\n                        )\n                    ]);\n                    this.session.sendVideoData(publisher);\n                }\n            }\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    sendTrackChangedEvent(publisher: Publisher, oldLabel: string, newLabel: string, propertyType: ChangedPropertyType) {\n        const oldValue = { label: oldLabel };\n        const newValue = { label: newLabel };\n        const reason = 'trackReplaced';\n\n        if (publisher.stream.isLocalStreamPublished) {\n            this.sendRequest(\n                'streamPropertyChanged',\n                {\n                    streamId: publisher.stream.streamId,\n                    property: propertyType,\n                    newValue: newValue,\n                    reason\n                },\n                (error, response) => {\n                    if (error) {\n                        logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                    } else {\n                        this.session.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(this.session, publisher.stream, propertyType, newValue, oldValue, reason)\n                        ]);\n                        publisher.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(publisher, publisher.stream, propertyType, newValue, oldValue, reason)\n                        ]);\n                    }\n                }\n            );\n        } else {\n            this.session.emitEvent('streamPropertyChanged', [\n                new StreamPropertyChangedEvent(this.session, publisher.stream, propertyType, newValue, oldValue, reason)\n            ]);\n            publisher.emitEvent('streamPropertyChanged', [\n                new StreamPropertyChangedEvent(publisher, publisher.stream, propertyType, newValue, oldValue, reason)\n            ]);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    generateMediaConstraints(publisherProperties: PublisherProperties): Promise<CustomMediaStreamConstraints> {\n        return new Promise<CustomMediaStreamConstraints>((resolve, reject) => {\n            const myConstraints: CustomMediaStreamConstraints = {\n                audioTrack: undefined,\n                videoTrack: undefined,\n                constraints: {\n                    audio: undefined,\n                    video: undefined\n                }\n            };\n            const audioSource = publisherProperties.audioSource;\n            const videoSource = publisherProperties.videoSource;\n\n            // CASE 1: null/false\n            if (audioSource === null || audioSource === false) {\n                // No audio track\n                myConstraints.constraints!.audio = false;\n            }\n            if (videoSource === null || videoSource === false) {\n                // No video track\n                myConstraints.constraints!.video = false;\n            }\n            if (myConstraints.constraints!.audio === false && myConstraints.constraints!.video === false) {\n                // ERROR! audioSource and videoSource cannot be both false at the same time\n                return reject(\n                    new OpenViduError(\n                        OpenViduErrorName.NO_INPUT_SOURCE_SET,\n                        \"Properties 'audioSource' and 'videoSource' cannot be set to false or null at the same time\"\n                    )\n                );\n            }\n\n            // CASE 2: MediaStreamTracks\n            if (typeof MediaStreamTrack !== 'undefined' && audioSource instanceof MediaStreamTrack) {\n                // Already provided audio track\n                myConstraints.audioTrack = audioSource;\n            }\n            if (typeof MediaStreamTrack !== 'undefined' && videoSource instanceof MediaStreamTrack) {\n                // Already provided video track\n                myConstraints.videoTrack = videoSource;\n            }\n\n            // CASE 3: Default tracks\n            if (audioSource === undefined) {\n                myConstraints.constraints!.audio = true;\n            }\n            if (videoSource === undefined) {\n                myConstraints.constraints!.video = {\n                    width: {\n                        ideal: 640\n                    },\n                    height: {\n                        ideal: 480\n                    }\n                };\n            }\n\n            // CASE 3.5: give values to resolution and frameRate if video not null/false\n            if (videoSource !== null && videoSource !== false) {\n                if (!!publisherProperties.resolution) {\n                    const widthAndHeight = publisherProperties.resolution.toLowerCase().split('x');\n                    const idealWidth = Number(widthAndHeight[0]);\n                    const idealHeight = Number(widthAndHeight[1]);\n                    myConstraints.constraints!.video = {\n                        width: {\n                            ideal: idealWidth\n                        },\n                        height: {\n                            ideal: idealHeight\n                        }\n                    };\n                }\n                if (!!publisherProperties.frameRate) {\n                    (<MediaTrackConstraints>myConstraints.constraints!.video).frameRate = { ideal: publisherProperties.frameRate };\n                }\n            }\n\n            // CASE 4: deviceId or screen sharing\n            this.configureDeviceIdOrScreensharing(myConstraints, publisherProperties, resolve, reject);\n\n            return resolve(myConstraints);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    startWs(onConnectSucces: (error: Error) => void): void {\n        const config = {\n            heartbeat: 5000,\n            ws: {\n                uri: this.wsUri + '?sessionId=' + this.session.sessionId,\n                onconnected: onConnectSucces,\n                ondisconnect: this.disconnectCallback.bind(this),\n                onreconnecting: this.reconnectingCallback.bind(this),\n                onreconnected: this.reconnectedCallback.bind(this),\n                ismasternodecrashed: this.isMasterNodeCrashed.bind(this)\n            },\n            rpc: {\n                requestTimeout: 10000,\n                heartbeatRequestTimeout: 5000,\n                participantJoined: this.session.onParticipantJoined.bind(this.session),\n                participantPublished: this.session.onParticipantPublished.bind(this.session),\n                participantUnpublished: this.session.onParticipantUnpublished.bind(this.session),\n                participantLeft: this.session.onParticipantLeft.bind(this.session),\n                participantEvicted: this.session.onParticipantEvicted.bind(this.session),\n                recordingStarted: this.session.onRecordingStarted.bind(this.session),\n                recordingStopped: this.session.onRecordingStopped.bind(this.session),\n                broadcastStarted: this.session.onBroadcastStarted.bind(this.session),\n                broadcastStopped: this.session.onBroadcastStopped.bind(this.session),\n                sendMessage: this.session.onNewMessage.bind(this.session),\n                streamPropertyChanged: this.session.onStreamPropertyChanged.bind(this.session),\n                connectionPropertyChanged: this.session.onConnectionPropertyChanged.bind(this.session),\n                networkQualityLevelChanged: this.session.onNetworkQualityLevelChangedChanged.bind(this.session),\n                filterEventDispatched: this.session.onFilterEventDispatched.bind(this.session),\n                iceCandidate: this.session.recvIceCandidate.bind(this.session),\n                mediaError: this.session.onMediaError.bind(this.session),\n                masterNodeCrashedNotification: this.onMasterNodeCrashedNotification.bind(this),\n                forciblyReconnectSubscriber: this.session.onForciblyReconnectSubscriber.bind(this.session),\n                speechToTextMessage: this.session.onSpeechToTextMessage.bind(this.session),\n                speechToTextDisconnected: this.session.onSpeechToTextDisconnected.bind(this.session)\n            }\n        };\n        this.jsonRpcClient = new RpcBuilder.clients.JsonRpcClient(config);\n    }\n\n    /**\n     * @hidden\n     */\n    onMasterNodeCrashedNotification(response): void {\n        console.error('Master Node has crashed');\n        this.masterNodeHasCrashed = true;\n        this.session.onLostConnection('nodeCrashed');\n        this.jsonRpcClient.close(4103, 'Master Node has crashed');\n    }\n\n    /**\n     * @hidden\n     */\n    getWsReadyState(): number {\n        return this.jsonRpcClient.getReadyState();\n    }\n\n    /**\n     * @hidden\n     */\n    closeWs(): void {\n        this.jsonRpcClient.close(4102, 'Connection closed by client');\n    }\n\n    /**\n     * @hidden\n     */\n    sendRequest(method: string, params: any, callback?): void {\n        if (params && params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        logger.debug('Sending request: {method:\"' + method + '\", params: ' + JSON.stringify(params) + '}');\n        this.jsonRpcClient?.send(method, params, callback);\n    }\n\n    /**\n     * @hidden\n     */\n    getWsUri(): string {\n        return this.wsUri;\n    }\n\n    /**\n     * @hidden\n     */\n    getSecret(): string {\n        return this.secret;\n    }\n\n    /**\n     * @hidden\n     */\n    getRecorder(): boolean {\n        return this.recorder;\n    }\n\n    /**\n     * @hidden\n     */\n    getStt(): boolean {\n        return this.stt;\n    }\n\n    /**\n     * @hidden\n     */\n    generateAudioDeviceError(error, constraints: MediaStreamConstraints): OpenViduError {\n        if (error.name === 'Error') {\n            // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n            error.name = error.constructor.name;\n        }\n        let errorName, errorMessage: string;\n        switch (error.name.toLowerCase()) {\n            case 'notfounderror':\n                errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                errorMessage = error.toString();\n                return new OpenViduError(errorName, errorMessage);\n            case 'notallowederror':\n                errorName = OpenViduErrorName.DEVICE_ACCESS_DENIED;\n                errorMessage = error.toString();\n                return new OpenViduError(errorName, errorMessage);\n            case 'overconstrainederror':\n                if (error.constraint.toLowerCase() === 'deviceid') {\n                    errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                    errorMessage =\n                        \"Audio input device with deviceId '\" +\n                        (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.audio).deviceId!!).exact +\n                        \"' not found\";\n                } else {\n                    errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                    errorMessage = \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                }\n                return new OpenViduError(errorName, errorMessage);\n            case 'notreadableerror':\n                errorName = OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n                errorMessage = error.toString();\n                return new OpenViduError(errorName, errorMessage);\n            default:\n                return new OpenViduError(OpenViduErrorName.INPUT_AUDIO_DEVICE_GENERIC_ERROR, error.toString());\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    addAlreadyProvidedTracks(myConstraints: CustomMediaStreamConstraints, mediaStream: MediaStream, stream?: Stream): MediaStream {\n        if (!!myConstraints.videoTrack) {\n            mediaStream.addTrack(myConstraints.videoTrack);\n            if (!!stream) {\n                if (!!myConstraints.constraints.video) {\n                    stream.lastVideoTrackConstraints = myConstraints.constraints.video;\n                } else {\n                    stream.lastVideoTrackConstraints = myConstraints.videoTrack.getConstraints();\n                }\n            }\n        }\n        if (!!myConstraints.audioTrack) {\n            mediaStream.addTrack(myConstraints.audioTrack);\n        }\n        return mediaStream;\n    }\n\n    /**\n     * @hidden\n     */\n    protected configureDeviceIdOrScreensharing(\n        myConstraints: CustomMediaStreamConstraints,\n        publisherProperties: PublisherProperties,\n        resolve,\n        reject\n    ) {\n        const audioSource = publisherProperties.audioSource;\n        const videoSource = publisherProperties.videoSource;\n        if (typeof audioSource === 'string') {\n            myConstraints.constraints!.audio = { deviceId: { exact: audioSource } };\n        }\n\n        if (typeof videoSource === 'string') {\n            if (!this.isScreenShare(videoSource)) {\n                this.setVideoSource(myConstraints, videoSource);\n            } else {\n                // Screen sharing\n\n                if (!this.checkScreenSharingCapabilities()) {\n                    const error = new OpenViduError(\n                        OpenViduErrorName.SCREEN_SHARING_NOT_SUPPORTED,\n                        'You can only screen share in desktop Chrome, Firefox, Opera, Safari (>=13.0), Edge (>= 80) or Electron. Detected client: ' +\n                        platform.getName() +\n                        ' ' +\n                        platform.getVersion()\n                    );\n                    logger.error(error);\n                    return reject(error);\n                } else {\n                    if (platform.isElectron()) {\n                        const prefix = 'screen:';\n                        const videoSourceString: string = videoSource;\n                        const electronScreenId = videoSourceString.substr(videoSourceString.indexOf(prefix) + prefix.length);\n                        (<any>myConstraints.constraints!.video) = {\n                            mandatory: {\n                                chromeMediaSource: 'desktop',\n                                chromeMediaSourceId: electronScreenId\n                            }\n                        };\n                        return resolve(myConstraints);\n                    } else {\n                        if (\n                            !!this.advancedConfiguration.screenShareChromeExtension &&\n                            !(platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()) &&\n                            !navigator.mediaDevices['getDisplayMedia']\n                        ) {\n                            // Custom screen sharing extension for Chrome (and Opera) and no support for MediaDevices.getDisplayMedia()\n\n                            screenSharing.getScreenConstraints((error, screenConstraints) => {\n                                if (\n                                    !!error ||\n                                    (!!screenConstraints.mandatory && screenConstraints.mandatory.chromeMediaSource === 'screen')\n                                ) {\n                                    if (error === 'permission-denied' || error === 'PermissionDeniedError') {\n                                        const error = new OpenViduError(\n                                            OpenViduErrorName.SCREEN_CAPTURE_DENIED,\n                                            'You must allow access to one window of your desktop'\n                                        );\n                                        logger.error(error);\n                                        return reject(error);\n                                    } else {\n                                        const extensionId = this.advancedConfiguration\n                                            .screenShareChromeExtension!.split('/')\n                                            .pop()!!\n                                            .trim();\n                                        screenSharing.getChromeExtensionStatus(extensionId, (status) => {\n                                            if (status === 'installed-disabled') {\n                                                const error = new OpenViduError(\n                                                    OpenViduErrorName.SCREEN_EXTENSION_DISABLED,\n                                                    'You must enable the screen extension'\n                                                );\n                                                logger.error(error);\n                                                return reject(error);\n                                            }\n                                            if (status === 'not-installed') {\n                                                const error = new OpenViduError(\n                                                    OpenViduErrorName.SCREEN_EXTENSION_NOT_INSTALLED,\n                                                    <string>this.advancedConfiguration.screenShareChromeExtension\n                                                );\n                                                logger.error(error);\n                                                return reject(error);\n                                            }\n                                        });\n                                        return;\n                                    }\n                                } else {\n                                    myConstraints.constraints!.video = screenConstraints;\n                                    return resolve(myConstraints);\n                                }\n                            });\n                            return;\n                        } else {\n                            if (navigator.mediaDevices['getDisplayMedia']) {\n                                // getDisplayMedia support (Chrome >= 72, Firefox >= 66, Safari >= 13)\n                                return resolve(myConstraints);\n                            } else {\n                                // Default screen sharing extension for Chrome/Opera, or is Firefox < 66\n                                const firefoxString =\n                                    platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser()\n                                        ? publisherProperties.videoSource\n                                        : undefined;\n\n                                screenSharingAuto.getScreenId(firefoxString, (error, sourceId, screenConstraints) => {\n                                    if (!!error) {\n                                        if (error === 'not-installed') {\n                                            const extensionUrl = !!this.advancedConfiguration.screenShareChromeExtension\n                                                ? this.advancedConfiguration.screenShareChromeExtension\n                                                : 'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold';\n                                            const err = new OpenViduError(OpenViduErrorName.SCREEN_EXTENSION_NOT_INSTALLED, extensionUrl);\n                                            logger.error(err);\n                                            return reject(err);\n                                        } else if (error === 'installed-disabled') {\n                                            const err = new OpenViduError(\n                                                OpenViduErrorName.SCREEN_EXTENSION_DISABLED,\n                                                'You must enable the screen extension'\n                                            );\n                                            logger.error(err);\n                                            return reject(err);\n                                        } else if (error === 'permission-denied') {\n                                            const err = new OpenViduError(\n                                                OpenViduErrorName.SCREEN_CAPTURE_DENIED,\n                                                'You must allow access to one window of your desktop'\n                                            );\n                                            logger.error(err);\n                                            return reject(err);\n                                        } else {\n                                            const err = new OpenViduError(\n                                                OpenViduErrorName.GENERIC_ERROR,\n                                                'Unknown error when accessing screen share'\n                                            );\n                                            logger.error(err);\n                                            logger.error(error);\n                                            return reject(err);\n                                        }\n                                    } else {\n                                        myConstraints.constraints!.video = screenConstraints.video;\n                                        return resolve(myConstraints);\n                                    }\n                                });\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected setVideoSource(myConstraints: CustomMediaStreamConstraints, videoSource: string) {\n        if (!myConstraints.constraints!.video) {\n            myConstraints.constraints!.video = {};\n        }\n        (<MediaTrackConstraints>myConstraints.constraints!.video)['deviceId'] = { exact: videoSource };\n    }\n\n    /* Private methods */\n\n    private disconnectCallback(): void {\n        logger.warn('Websocket connection lost');\n        if (this.isRoomAvailable()) {\n            this.session.onLostConnection('networkDisconnect');\n        } else {\n            alert('Connection error. Please reload page.');\n        }\n    }\n\n    private reconnectingCallback(): void {\n        logger.warn('Websocket connection lost (reconnecting)');\n        if (!this.isRoomAvailable()) {\n            alert('Connection error. Please reload page.');\n        } else {\n            this.session.emitEvent('reconnecting', []);\n        }\n    }\n\n    private reconnectWebsocketThroughRpcConnectMethod(rpcSessionId) {\n        // This RPC method allows checking:\n        // Single Master: if success, connection recovered\n        //                if error, no Master Node crashed and life will be -1. onLostConnection with reason networkDisconnect will be triggered\n        // Multi Master: if success, connection recovered\n        //               if error and Master Node crashed notification was already received, nothing must be done\n        //               if error and Master Node NOT crashed, sessionStatus method must be sent:\n        //                 if life is equal, networkDisconnect\n        //                 if life is greater, nodeCrashed\n        this.sendRequest('connect', { sessionId: rpcSessionId, reconnect: true }, (error, response) => {\n            if (!!error) {\n                if (this.isMasterNodeCrashed()) {\n                    logger.warn('Master Node has crashed!');\n                } else {\n                    logger.error(error);\n\n                    const notifyLostConnection = (reason, errorMsg) => {\n                        logger.warn(errorMsg);\n                        this.session.onLostConnection(reason);\n                        this.jsonRpcClient.close(4101, 'Reconnection fault: ' + errorMsg);\n                    };\n\n                    const rpcSessionStatus = () => {\n                        if (this.life === -1) {\n                            // Single Master\n                            notifyLostConnection(\n                                'networkDisconnect',\n                                'WS successfully reconnected but the user was already evicted due to timeout'\n                            );\n                        } else {\n                            // Multi Master\n                            // This RPC method is only required to find out the reason of the disconnection:\n                            // whether the client lost its network connection or a Master Node crashed\n                            this.sendRequest('sessionStatus', { sessionId: this.session.sessionId }, (error, response) => {\n                                if (error != null) {\n                                    console.error('Error checking session status', error);\n                                } else {\n                                    if (this.life === response.life) {\n                                        // If the life stored in the client matches the life stored in the server, it means that the client lost its network connection\n                                        notifyLostConnection(\n                                            'networkDisconnect',\n                                            'WS successfully reconnected but the user was already evicted due to timeout'\n                                        );\n                                    } else {\n                                        // If the life stored in the client is below the life stored in the server, it means that the Master Node has crashed\n                                        notifyLostConnection(\n                                            'nodeCrashed',\n                                            'WS successfully reconnected to OpenVidu Server but your Master Node crashed'\n                                        );\n                                    }\n                                }\n                            });\n                        }\n                    };\n\n                    if (error.code === 40007 && error.message === 'reconnection error') {\n                        // Kurento error: invalid RPC sessionId. This means that the kurento-jsonrpc-server of openvidu-server where kurento-jsonrpc-client\n                        // is trying to reconnect does not know about this sessionId. This can mean two things:\n                        // 1) openvidu-browser managed to reconnect after a while, but openvidu-server already evicted the user for not receiving ping.\n                        // 2) openvidu-server process is a different one because of a node crash.\n                        // Send a \"sessionStatus\" method to check the reason\n                        console.error('Invalid RPC sessionId. Client network disconnection or Master Node crash');\n                        rpcSessionStatus();\n                    } else {\n                        rpcSessionStatus();\n                    }\n                }\n            } else {\n                this.jsonRpcClient.resetPing();\n                this.session.onRecoveredConnection();\n            }\n        });\n    }\n\n    private reconnectedCallback(): void {\n        logger.warn('Websocket reconnected');\n        if (this.isRoomAvailable()) {\n            if (!!this.session.connection) {\n                this.reconnectWebsocketThroughRpcConnectMethod(this.session.connection.rpcSessionId);\n            } else {\n                logger.warn('There was no previous connection when running reconnection callback');\n                // Make Session object dispatch 'sessionDisconnected' event\n                const sessionDisconnectEvent = new SessionDisconnectedEvent(this.session, 'networkDisconnect');\n                this.session.ee.emitEvent('sessionDisconnected', [sessionDisconnectEvent]);\n                sessionDisconnectEvent.callDefaultBehavior();\n            }\n        } else {\n            alert('Connection error. Please reload page.');\n        }\n    }\n\n    private isMasterNodeCrashed() {\n        return this.masterNodeHasCrashed;\n    }\n\n    private isRoomAvailable(): boolean {\n        if (this.session !== undefined && this.session instanceof Session) {\n            return true;\n        } else {\n            logger.warn('Session instance not found');\n            return false;\n        }\n    }\n\n    private isScreenShare(videoSource: string) {\n        return videoSource === 'screen' || videoSource === 'window' || (platform.isElectron() && videoSource.startsWith('screen:'));\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { OpenVidu } from './OpenVidu';\nimport { Session } from './Session';\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { PublisherProperties } from '../OpenViduInternal/Interfaces/Public/PublisherProperties';\nimport { PublisherEventMap } from '../OpenViduInternal/Events/EventMap/PublisherEventMap';\nimport { StreamEvent } from '../OpenViduInternal/Events/StreamEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\nimport { TypeOfVideo } from '../OpenViduInternal/Enums/TypeOfVideo';\nimport { StreamEventReason } from '../OpenViduInternal/Events/Types/Types';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Packs local media streams. Participants can publish it to a session. Initialized with {@link OpenVidu.initPublisher} method.\n *\n * See available event listeners at {@link PublisherEventMap}.\n */\nexport class Publisher extends StreamManager {\n    /**\n     * Whether the Publisher has been granted access to the requested input devices or not\n     */\n    accessAllowed = false;\n\n    /**\n     * Whether you have called {@link Publisher.subscribeToRemote} with value `true` or `false` (*false* by default)\n     */\n    isSubscribedToRemote = false;\n\n    /**\n     * The {@link Session} to which the Publisher belongs\n     */\n    session: Session; // Initialized by Session.publish(Publisher)\n\n    private accessDenied = false;\n    protected properties: PublisherProperties;\n    private permissionDialogTimeout: NodeJS.Timer;\n\n    /**\n     * @hidden\n     */\n    openvidu: OpenVidu;\n    /**\n     * @hidden\n     */\n    videoReference: HTMLVideoElement;\n    /**\n     * @hidden\n     */\n    screenShareResizeInterval: NodeJS.Timer;\n\n    /**\n     * @hidden\n     */\n    constructor(targEl: string | HTMLElement | undefined, properties: PublisherProperties, openvidu: OpenVidu) {\n        super(\n            new Stream(!!openvidu.session ? openvidu.session : new Session(openvidu), {\n                publisherProperties: properties,\n                mediaConstraints: {}\n            }),\n            targEl\n        );\n        platform = PlatformUtils.getInstance();\n        this.properties = properties;\n        this.openvidu = openvidu;\n\n        this.stream.ee.on('local-stream-destroyed', (reason: StreamEventReason) => {\n            this.stream.isLocalStreamPublished = false;\n            const streamEvent = new StreamEvent(true, this, 'streamDestroyed', this.stream, reason);\n            this.emitEvent('streamDestroyed', [streamEvent]);\n            streamEvent.callDefaultBehavior();\n        });\n    }\n\n    /**\n     * Publish or unpublish the audio stream (if available). Calling this method twice in a row passing same `enabled` value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The {@link Session} object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The {@link Publisher} object of the local participant will also dispatch the exact same event\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The respective {@link Subscriber} object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See {@link StreamPropertyChangedEvent} to learn more.\n     *\n     * @param enabled `true` to publish the audio stream, `false` to unpublish it\n     */\n    publishAudio(enabled: boolean): void {\n        if (this.stream.audioActive !== enabled) {\n            const affectedMediaStream: MediaStream = this.stream.displayMyRemote()\n                ? this.stream.localMediaStreamWhenSubscribedToRemote!\n                : this.stream.getMediaStream();\n            affectedMediaStream.getAudioTracks().forEach((track) => {\n                track.enabled = enabled;\n            });\n            if (!!this.session && !!this.stream.streamId) {\n                this.session.openvidu.sendRequest(\n                    'streamPropertyChanged',\n                    {\n                        streamId: this.stream.streamId,\n                        property: 'audioActive',\n                        newValue: enabled,\n                        reason: 'publishAudio'\n                    },\n                    (error, response) => {\n                        if (error) {\n                            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                        } else {\n                            this.session.emitEvent('streamPropertyChanged', [\n                                new StreamPropertyChangedEvent(this.session, this.stream, 'audioActive', enabled, !enabled, 'publishAudio')\n                            ]);\n                            this.emitEvent('streamPropertyChanged', [\n                                new StreamPropertyChangedEvent(this, this.stream, 'audioActive', enabled, !enabled, 'publishAudio')\n                            ]);\n                            this.session.sendVideoData(this.stream.streamManager);\n                        }\n                    }\n                );\n            }\n            this.stream.audioActive = enabled;\n            logger.info(\"'Publisher' has \" + (enabled ? 'published' : 'unpublished') + ' its audio stream');\n        }\n    }\n\n    /**\n     * Publish or unpublish the video stream (if available). Calling this method twice in a row passing same `enabled` value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The {@link Session} object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The {@link Publisher} object of the local participant will also dispatch the exact same event\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The respective {@link Subscriber} object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See {@link StreamPropertyChangedEvent} to learn more.\n     *\n     * @param enabled `true` to publish the video stream, `false` to unpublish it\n     * @param resource\n     * \n     * If parameter **`enabled`** is `false`, this optional parameter is of type boolean. It can be set to `true` to forcibly free the hardware resource associated to the video track, or can be set to `false` to keep the access to the hardware resource.\n     * Not freeing the resource makes the operation much more efficient, but depending on the platform two side-effects can be introduced: the video device may not be accessible by other applications and the access light of\n     * webcams may remain on. This is platform-dependent: some browsers will not present the side-effects even when not freeing the resource.\n     * \n     * If parameter **`enabled`** is `true`, this optional parameter is of type [MediaStreamTrack](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack). It can be set to force the restoration of the video track with a custom track. This may be\n     * useful if the Publisher was unpublished freeing the hardware resource, and openvidu-browser is not able to successfully re-create the video track as it was before unpublishing. In this way previous track settings will be ignored and this MediaStreamTrack\n     * will be used instead.\n     */\n    publishVideo<T extends boolean>(enabled: T, resource?: T extends false ? boolean : MediaStreamTrack): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (this.stream.videoActive !== enabled) {\n                const affectedMediaStream: MediaStream = this.stream.displayMyRemote()\n                    ? this.stream.localMediaStreamWhenSubscribedToRemote!\n                    : this.stream.getMediaStream();\n                let mustRestartMediaStream = false;\n                affectedMediaStream.getVideoTracks().forEach((track) => {\n                    track.enabled = enabled;\n                    if (!enabled && resource === true) {\n                        track.stop();\n                    } else if (enabled && track.readyState === 'ended') {\n                        // Resource was freed\n                        mustRestartMediaStream = true;\n                    }\n                });\n\n                // There is a Virtual Background filter applied that must be removed in case the hardware must be freed\n                if (!enabled && resource === true && !!this.stream.filter && this.stream.filter.type.startsWith('VB:')) {\n                    this.stream.lastVBFilter = this.stream.filter; // Save the filter to be re-applied in case of unmute\n                    await this.stream.removeFilterAux(true);\n                }\n\n                if (mustRestartMediaStream) {\n                    const oldVideoTrack = affectedMediaStream.getVideoTracks()[0];\n                    affectedMediaStream.removeTrack(oldVideoTrack);\n\n                    const replaceVideoTrack = async (tr: MediaStreamTrack) => {\n                        affectedMediaStream.addTrack(tr);\n                        if (this.stream.isLocalStreamPublished) {\n                            await this.replaceTrackInRtcRtpSender(tr);\n                        }\n                        if (!!this.stream.lastVBFilter) {\n                            setTimeout(async () => {\n                                let options = this.stream.lastVBFilter!.options;\n                                const lastExecMethod = this.stream.lastVBFilter!.lastExecMethod;\n                                if (!!lastExecMethod && lastExecMethod.method === 'update') {\n                                    options = Object.assign({}, options, lastExecMethod.params);\n                                }\n                                await this.stream.applyFilter(this.stream.lastVBFilter!.type, options);\n                                delete this.stream.lastVBFilter;\n                            }, 1);\n                        }\n                    };\n\n                    if (!!resource && resource instanceof MediaStreamTrack) {\n                        await replaceVideoTrack(resource);\n                    } else {\n                        try {\n                            const mediaStream = await navigator.mediaDevices.getUserMedia({\n                                audio: false,\n                                video: this.stream.lastVideoTrackConstraints\n                            });\n                            await replaceVideoTrack(mediaStream.getVideoTracks()[0]);\n                        } catch (error) {\n                            return reject(error);\n                        }\n                    }\n                }\n\n                if (!!this.session && !!this.stream.streamId) {\n                    this.session.openvidu.sendRequest(\n                        'streamPropertyChanged',\n                        {\n                            streamId: this.stream.streamId,\n                            property: 'videoActive',\n                            newValue: enabled,\n                            reason: 'publishVideo'\n                        },\n                        (error, response) => {\n                            if (error) {\n                                logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                            } else {\n                                this.session.emitEvent('streamPropertyChanged', [\n                                    new StreamPropertyChangedEvent(\n                                        this.session,\n                                        this.stream,\n                                        'videoActive',\n                                        enabled,\n                                        !enabled,\n                                        'publishVideo'\n                                    )\n                                ]);\n                                this.emitEvent('streamPropertyChanged', [\n                                    new StreamPropertyChangedEvent(this, this.stream, 'videoActive', enabled, !enabled, 'publishVideo')\n                                ]);\n                                this.session.sendVideoData(this.stream.streamManager);\n                            }\n                        }\n                    );\n                }\n                this.stream.videoActive = enabled;\n                logger.info(\"'Publisher' has \" + (enabled ? 'published' : 'unpublished') + ' its video stream');\n                return resolve();\n            }\n        });\n    }\n\n    /**\n     * Call this method before {@link Session.publish} if you prefer to subscribe to your Publisher's remote stream instead of using the local stream, as any other user would do.\n     */\n    subscribeToRemote(value?: boolean): void {\n        value = value !== undefined ? value : true;\n        this.isSubscribedToRemote = value;\n        this.stream.subscribeToMyRemote(value);\n    }\n\n    /**\n     * See {@link EventDispatcher.on}\n     */\n    on<K extends keyof PublisherEventMap>(type: K, handler: (event: PublisherEventMap[K]) => void): this {\n        super.on(<any>type, handler);\n\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            } else {\n                this.stream.ee.on('stream-created-by-publisher', () => {\n                    this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.once}\n     */\n    once<K extends keyof PublisherEventMap>(type: K, handler: (event: PublisherEventMap[K]) => void): this {\n        super.once(<any>type, handler);\n\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            } else {\n                this.stream.ee.once('stream-created-by-publisher', () => {\n                    this.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.off}\n     */\n    off<K extends keyof PublisherEventMap>(type: K, handler?: (event: PublisherEventMap[K]) => void): this {\n        super.off(<any>type, handler);\n        return this;\n    }\n\n    /**\n     * Replaces the current video or audio track with a different one. This allows you to replace an ongoing track with a different one\n     * without having to renegotiate the whole WebRTC connection (that is, initializing a new Publisher, unpublishing the previous one\n     * and publishing the new one).\n     *\n     * You can get this new MediaStreamTrack by using the native Web API or simply with {@link OpenVidu.getUserMedia} method.\n     *\n     * **WARNING: this method has been proven to work in the majority of cases, but there may be some combinations of published/replaced tracks that may be incompatible\n     * between them and break the connection in OpenVidu Server. A complete renegotiation may be the only solution in this case.\n     * Visit [RTCRtpSender.replaceTrack](https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack) documentation for further details.**\n     *\n     * @param track The [MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack) object to replace the current one.\n     * If it is an audio track, the current audio track will be the replaced one. If it is a video track, the current video track will be the replaced one.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the track was successfully replaced and rejected with an Error object in other case\n     */\n    async replaceTrack(track: MediaStreamTrack): Promise<void> {\n        return this.replaceTrackAux(track, true);\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    initialize(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            let constraints: MediaStreamConstraints = {};\n            let constraintsAux: MediaStreamConstraints = {};\n            const timeForDialogEvent = 2000;\n            let startTime;\n\n            const errorCallback = (openViduError: OpenViduError) => {\n                this.accessDenied = true;\n                this.accessAllowed = false;\n                logger.error(`Publisher initialization failed. ${openViduError.name}: ${openViduError.message}`);\n                return reject(openViduError);\n            };\n\n            const successCallback = (mediaStream: MediaStream) => {\n                this.accessAllowed = true;\n                this.accessDenied = false;\n\n                if (typeof MediaStreamTrack !== 'undefined' && this.properties.audioSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getAudioTracks()[0]);\n                    mediaStream.addTrack(<MediaStreamTrack>this.properties.audioSource);\n                }\n\n                if (typeof MediaStreamTrack !== 'undefined' && this.properties.videoSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getVideoTracks()[0]);\n                    mediaStream.addTrack(<MediaStreamTrack>this.properties.videoSource);\n                }\n\n                // Apply PublisherProperties.publishAudio and PublisherProperties.publishVideo\n                if (!!mediaStream.getAudioTracks()[0]) {\n                    const enabled =\n                        this.stream.audioActive !== undefined && this.stream.audioActive !== null\n                            ? this.stream.audioActive\n                            : !!this.stream.outboundStreamOpts.publisherProperties.publishAudio;\n                    mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!mediaStream.getVideoTracks()[0]) {\n                    const enabled =\n                        this.stream.videoActive !== undefined && this.stream.videoActive !== null\n                            ? this.stream.videoActive\n                            : !!this.stream.outboundStreamOpts.publisherProperties.publishVideo;\n                    mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n\n                // Set Content Hint on all MediaStreamTracks\n                for (const track of mediaStream.getAudioTracks()) {\n                    if (!track.contentHint?.length) {\n                        // contentHint for audio: \"\", \"speech\", \"speech-recognition\", \"music\".\n                        // https://w3c.github.io/mst-content-hint/#audio-content-hints\n                        track.contentHint = '';\n                        logger.info(`Audio track Content Hint set: '${track.contentHint}'`);\n                    }\n                }\n                for (const track of mediaStream.getVideoTracks()) {\n                    if (!track.contentHint?.length) {\n                        // contentHint for video: \"\", \"motion\", \"detail\", \"text\".\n                        // https://w3c.github.io/mst-content-hint/#video-content-hints\n                        switch (this.stream.typeOfVideo) {\n                            case TypeOfVideo.SCREEN:\n                                track.contentHint = 'detail';\n                                break;\n                            case TypeOfVideo.CUSTOM:\n                                logger.warn('CUSTOM type video track was provided without Content Hint!');\n                                track.contentHint = 'motion';\n                                break;\n                            case TypeOfVideo.CAMERA:\n                            case TypeOfVideo.IPCAM:\n                            default:\n                                track.contentHint = 'motion';\n                                break;\n                        }\n                        logger.info(`Video track Content Hint set: '${track.contentHint}'`);\n                    }\n                }\n\n                this.initializeVideoReference(mediaStream);\n\n                if (!this.stream.displayMyRemote()) {\n                    // When we are subscribed to our remote we don't still set the MediaStream object in the video elements to\n                    // avoid early 'streamPlaying' event\n                    this.stream.updateMediaStreamInVideos();\n                }\n                delete this.firstVideoElement;\n\n                if (this.stream.isSendVideo()) {\n                    // Has video track\n                    this.getVideoDimensions().then((dimensions) => {\n                        this.stream.videoDimensions = {\n                            width: dimensions.width,\n                            height: dimensions.height\n                        };\n\n                        if (this.stream.isSendScreen()) {\n                            // Set interval to listen for screen resize events\n                            this.screenShareResizeInterval = setInterval(() => {\n                                const settings: MediaTrackSettings = mediaStream.getVideoTracks()[0].getSettings();\n                                const newWidth = settings.width;\n                                const newHeight = settings.height;\n                                const widthChanged = newWidth != null && newWidth !== this.stream.videoDimensions.width;\n                                const heightChanged = newHeight != null && newHeight !== this.stream.videoDimensions.height;\n                                if (this.stream.isLocalStreamPublished && (widthChanged || heightChanged)) {\n                                    this.openvidu.sendVideoDimensionsChangedEvent(\n                                        this,\n                                        'screenResized',\n                                        this.stream.videoDimensions.width,\n                                        this.stream.videoDimensions.height,\n                                        newWidth || 0,\n                                        newHeight || 0\n                                    );\n                                }\n                            }, 650);\n                        }\n\n                        this.stream.isLocalStreamReadyToPublish = true;\n                        this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                    });\n                } else {\n                    // Only audio track (no videoDimensions)\n                    this.stream.isLocalStreamReadyToPublish = true;\n                    this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                }\n\n                return resolve();\n            };\n\n            const getMediaSuccess = async (mediaStream: MediaStream, definedAudioConstraint) => {\n                this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (this.stream.isSendScreen() && this.stream.isSendAudio()) {\n                    // When getting desktop as user media audio constraint must be false. Now we can ask for it if required\n                    constraintsAux.audio = definedAudioConstraint;\n                    constraintsAux.video = false;\n                    startTime = Date.now();\n                    this.setPermissionDialogTimer(timeForDialogEvent);\n\n                    try {\n                        const audioOnlyStream = await navigator.mediaDevices.getUserMedia(constraintsAux);\n                        this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                        mediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n                        successCallback(mediaStream);\n                    } catch (error) {\n                        this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                        mediaStream.getAudioTracks().forEach((track) => {\n                            track.stop();\n                        });\n                        mediaStream.getVideoTracks().forEach((track) => {\n                            track.stop();\n                        });\n                        errorCallback(this.openvidu.generateAudioDeviceError(error, constraints));\n                        return;\n                    }\n                } else {\n                    successCallback(mediaStream);\n                }\n            };\n\n            const getMediaError = async (error) => {\n                logger.error(`getMediaError: ${error.toString()}`);\n                this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (error.name === 'Error') {\n                    // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n                    error.name = error.constructor.name;\n                }\n                let errorName, errorMessage;\n                switch (error.name.toLowerCase()) {\n                    case 'notfounderror':\n                        try {\n                            const mediaStream = await navigator.mediaDevices.getUserMedia({\n                                audio: false,\n                                video: constraints.video\n                            });\n                            mediaStream.getVideoTracks().forEach((track) => {\n                                track.stop();\n                            });\n                            errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                            errorMessage = error.toString();\n                            errorCallback(new OpenViduError(errorName, errorMessage));\n                        } catch (error) {\n                            errorName = OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                            errorMessage = error.toString();\n                            errorCallback(new OpenViduError(errorName, errorMessage));\n                        }\n\n                        break;\n                    case 'notallowederror':\n                        errorName = this.stream.isSendScreen()\n                            ? OpenViduErrorName.SCREEN_CAPTURE_DENIED\n                            : OpenViduErrorName.DEVICE_ACCESS_DENIED;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                    case 'overconstrainederror':\n                        try {\n                            const mediaStream = await navigator.mediaDevices.getUserMedia({\n                                audio: false,\n                                video: constraints.video\n                            });\n                            mediaStream.getVideoTracks().forEach((track) => {\n                                track.stop();\n                            });\n                            if (error.constraint.toLowerCase() === 'deviceid') {\n                                errorName = OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                                errorMessage =\n                                    \"Audio input device with deviceId '\" +\n                                    (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.audio).deviceId!!).exact +\n                                    \"' not found\";\n                            } else {\n                                errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                errorMessage =\n                                    \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                            }\n                            errorCallback(new OpenViduError(errorName, errorMessage));\n                        } catch (error) {\n                            if (error.constraint.toLowerCase() === 'deviceid') {\n                                errorName = OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                                errorMessage =\n                                    \"Video input device with deviceId '\" +\n                                    (<ConstrainDOMStringParameters>(<MediaTrackConstraints>constraints.video).deviceId!!).exact +\n                                    \"' not found\";\n                            } else {\n                                errorName = OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                errorMessage =\n                                    \"Video input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                            }\n                            errorCallback(new OpenViduError(errorName, errorMessage));\n                        }\n\n                        break;\n                    case 'aborterror':\n                    case 'notreadableerror':\n                        errorName = OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                    default:\n                        errorName = OpenViduErrorName.GENERIC_ERROR;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError(errorName, errorMessage));\n                        break;\n                }\n            };\n\n            try {\n                const myConstraints = await this.openvidu.generateMediaConstraints(this.properties);\n                if (\n                    (!!myConstraints.videoTrack && !!myConstraints.audioTrack) ||\n                    (!!myConstraints.audioTrack && myConstraints.constraints?.video === false) ||\n                    (!!myConstraints.videoTrack && myConstraints.constraints?.audio === false)\n                ) {\n                    // No need to call getUserMedia at all. MediaStreamTracks already provided\n                    successCallback(this.openvidu.addAlreadyProvidedTracks(myConstraints, new MediaStream(), this.stream));\n                } else {\n                    constraints = myConstraints.constraints;\n\n                    const outboundStreamOptions = {\n                        mediaConstraints: constraints,\n                        publisherProperties: this.properties\n                    };\n                    this.stream.setOutboundStreamOptions(outboundStreamOptions);\n\n                    const definedAudioConstraint = constraints.audio === undefined ? true : constraints.audio;\n                    constraintsAux.audio = this.stream.isSendScreen() ? false : definedAudioConstraint;\n                    constraintsAux.video = constraints.video;\n                    startTime = Date.now();\n                    this.setPermissionDialogTimer(timeForDialogEvent);\n\n                    try {\n                        if (this.stream.isSendScreen() && navigator.mediaDevices['getDisplayMedia'] && !platform.isElectron()) {\n                            const mediaStream = await navigator.mediaDevices['getDisplayMedia']({ video: true });\n                            this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                            await getMediaSuccess(mediaStream, definedAudioConstraint);\n                        } else {\n                            this.stream.lastVideoTrackConstraints = constraintsAux.video;\n                            const mediaStream = await navigator.mediaDevices.getUserMedia(constraintsAux);\n                            this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream, this.stream);\n                            await getMediaSuccess(mediaStream, definedAudioConstraint);\n                        }\n                    } catch (error) {\n                        await getMediaError(error);\n                    }\n                }\n            } catch (error) {\n                errorCallback(error);\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    async replaceTrackAux(track: MediaStreamTrack, updateLastConstraints: boolean): Promise<void> {\n        // Set field \"enabled\" of the new track to the previous value\n        const trackOriginalEnabledValue: boolean = track.enabled;\n        if (track.kind === 'video') {\n            track.enabled = this.stream.videoActive;\n        } else if (track.kind === 'audio') {\n            track.enabled = this.stream.audioActive;\n        }\n        try {\n            if (this.stream.isLocalStreamPublished) {\n                // Only if the Publisher has been published is necessary to call native Web API RTCRtpSender.replaceTrack\n                // If it has not been published yet, replacing it on the MediaStream object is enough\n                this.replaceTrackInMediaStream(track, updateLastConstraints);\n                return await this.replaceTrackInRtcRtpSender(track);\n            } else {\n                // Publisher not published. Simply replace the track on the local MediaStream\n                return this.replaceTrackInMediaStream(track, updateLastConstraints);\n            }\n        } catch (error) {\n            track.enabled = trackOriginalEnabledValue;\n            throw error;\n        }\n    }\n\n    /**\n     * @hidden\n     *\n     * To obtain the videoDimensions we wait for the video reference to have enough metadata\n     * and then try to use MediaStreamTrack.getSettingsMethod(). If not available, then we\n     * use the HTMLVideoElement properties videoWidth and videoHeight\n     */\n    getVideoDimensions(): Promise<{ width: number; height: number }> {\n        return new Promise((resolve, reject) => {\n            // Ionic iOS and Safari iOS supposedly require the video element to actually exist inside the DOM\n            const requiresDomInsertion: boolean = (platform.isIonicIos() || platform.isIOSWithSafari()) && (this.videoReference.readyState < 1);\n\n            let loadedmetadataListener;\n            const resolveDimensions = () => {\n                let width: number;\n                let height: number;\n                if (typeof this.stream.getMediaStream().getVideoTracks()[0].getSettings === 'function') {\n                    const settings = this.stream.getMediaStream().getVideoTracks()[0].getSettings();\n                    width = settings.width || this.videoReference.videoWidth;\n                    height = settings.height || this.videoReference.videoHeight;\n                } else {\n                    logger.warn('MediaStreamTrack does not have getSettings method on ' + platform.getDescription());\n                    width = this.videoReference.videoWidth;\n                    height = this.videoReference.videoHeight;\n                }\n\n                if (loadedmetadataListener != null) {\n                    this.videoReference.removeEventListener('loadedmetadata', loadedmetadataListener);\n                }\n                if (requiresDomInsertion) {\n                    document.body.removeChild(this.videoReference);\n                }\n\n                return resolve({ width, height });\n            };\n\n            if (this.videoReference.readyState >= 1) {\n                // The video already has metadata available\n                // No need of loadedmetadata event\n                resolveDimensions();\n            } else {\n                // The video does not have metadata available yet\n                // Must listen to loadedmetadata event\n                loadedmetadataListener = () => {\n                    if (!this.videoReference.videoWidth) {\n                        let interval = setInterval(() => {\n                            if (!!this.videoReference.videoWidth) {\n                                clearInterval(interval);\n                                resolveDimensions();\n                            }\n                        }, 40);\n                    } else {\n                        resolveDimensions();\n                    }\n                };\n                this.videoReference.addEventListener('loadedmetadata', loadedmetadataListener);\n                if (requiresDomInsertion) {\n                    document.body.appendChild(this.videoReference);\n                }\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    reestablishStreamPlayingEvent() {\n        if (this.ee.getListeners('streamPlaying').length > 0) {\n            this.addPlayEventToFirstVideo();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initializeVideoReference(mediaStream: MediaStream) {\n        this.videoReference = document.createElement('video');\n        this.videoReference.style.display = 'none';\n        this.videoReference.muted = true;\n        this.videoReference.autoplay = true;\n        this.videoReference.controls = false;\n        if (\n            platform.isSafariBrowser() ||\n            (platform.isIPhoneOrIPad() &&\n                (platform.isChromeMobileBrowser() ||\n                    platform.isEdgeMobileBrowser() ||\n                    platform.isOperaMobileBrowser() ||\n                    platform.isFirefoxMobileBrowser()))\n        ) {\n            this.videoReference.playsInline = true;\n        }\n        this.stream.setMediaStream(mediaStream);\n        if (!!this.firstVideoElement) {\n            this.createVideoElement(this.firstVideoElement.targetElement, <VideoInsertMode>this.properties.insertMode);\n        }\n        this.videoReference.srcObject = this.stream.getMediaStream();\n    }\n\n    /**\n     * @hidden\n     */\n    replaceTrackInMediaStream(track: MediaStreamTrack, updateLastConstraints: boolean): void {\n        const mediaStream: MediaStream = this.stream.displayMyRemote()\n            ? this.stream.localMediaStreamWhenSubscribedToRemote!\n            : this.stream.getMediaStream();\n        let removedTrack: MediaStreamTrack;\n        if (track.kind === 'video') {\n            removedTrack = mediaStream.getVideoTracks()[0];\n            if (updateLastConstraints) {\n                this.stream.lastVideoTrackConstraints = track.getConstraints();\n            }\n        } else {\n            removedTrack = mediaStream.getAudioTracks()[0];\n        }\n        removedTrack.enabled = false;\n        removedTrack.stop();\n        mediaStream.removeTrack(removedTrack);\n        mediaStream.addTrack(track);\n        const trackInfo = {\n            oldLabel: removedTrack?.label || '',\n            newLabel: track?.label || ''\n        };\n        if (track.kind === 'video' && updateLastConstraints) {\n            this.openvidu.sendNewVideoDimensionsIfRequired(this, 'trackReplaced', 50, 30);\n            this.openvidu.sendTrackChangedEvent(this, trackInfo.oldLabel, trackInfo.newLabel, 'videoTrack');\n            if (this.stream.isLocalStreamPublished) {\n                this.session.sendVideoData(this.stream.streamManager, 5, true, 5);\n            }\n        } else if (track.kind === 'audio' && updateLastConstraints) {\n            this.openvidu.sendTrackChangedEvent(this, trackInfo.oldLabel, trackInfo.newLabel, 'audioTrack');\n        }\n        if (track.kind === 'audio') {\n            this.stream.disableHarkSpeakingEvent(false);\n            this.stream.disableHarkStoppedSpeakingEvent(false);\n            this.stream.disableHarkVolumeChangeEvent(false);\n            this.stream.initHarkEvents();\n        }\n    }\n\n    /* Private methods */\n\n    private setPermissionDialogTimer(waitTime: number): void {\n        this.permissionDialogTimeout = setTimeout(() => {\n            this.emitEvent('accessDialogOpened', []);\n        }, waitTime);\n    }\n\n    private clearPermissionDialogTimer(startTime: number, waitTime: number): void {\n        clearTimeout(this.permissionDialogTimeout);\n        if (Date.now() - startTime > waitTime) {\n            // Permission dialog was shown and now is closed\n            this.emitEvent('accessDialogClosed', []);\n        }\n    }\n\n    private async replaceTrackInRtcRtpSender(track: MediaStreamTrack): Promise<void> {\n        const senders: RTCRtpSender[] = this.stream.getRTCPeerConnection().getSenders();\n        let sender: RTCRtpSender | undefined;\n        if (track.kind === 'video') {\n            sender = senders.find((s) => !!s.track && s.track.kind === 'video');\n            if (!sender) {\n                throw new Error(\"There's no replaceable track for that kind of MediaStreamTrack in this Publisher object\");\n            }\n        } else if (track.kind === 'audio') {\n            sender = senders.find((s) => !!s.track && s.track.kind === 'audio');\n            if (!sender) {\n                throw new Error(\"There's no replaceable track for that kind of MediaStreamTrack in this Publisher object\");\n            }\n        } else {\n            throw new Error('Unknown track kind ' + track.kind);\n        }\n        await (sender as RTCRtpSender).replaceTrack(track);\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from './Connection';\nimport { Filter } from './Filter';\nimport { OpenVidu } from './OpenVidu';\nimport { Publisher } from './Publisher';\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { Subscriber } from './Subscriber';\nimport { Capabilities } from '../OpenViduInternal/Interfaces/Public/Capabilities';\nimport { EventDispatcher } from './EventDispatcher';\nimport { SignalOptions } from '../OpenViduInternal/Interfaces/Public/SignalOptions';\nimport { SubscriberProperties } from '../OpenViduInternal/Interfaces/Public/SubscriberProperties';\nimport { RemoteConnectionOptions } from '../OpenViduInternal/Interfaces/Private/RemoteConnectionOptions';\nimport { LocalConnectionOptions } from '../OpenViduInternal/Interfaces/Private/LocalConnectionOptions';\nimport { SessionOptions } from '../OpenViduInternal/Interfaces/Private/SessionOptions';\nimport { SessionEventMap } from '../OpenViduInternal/Events/EventMap/SessionEventMap';\nimport { ConnectionEvent } from '../OpenViduInternal/Events/ConnectionEvent';\nimport { FilterEvent } from '../OpenViduInternal/Events/FilterEvent';\nimport { RecordingEvent } from '../OpenViduInternal/Events/RecordingEvent';\nimport { SessionDisconnectedEvent } from '../OpenViduInternal/Events/SessionDisconnectedEvent';\nimport { SignalEvent } from '../OpenViduInternal/Events/SignalEvent';\nimport { SpeechToTextEvent } from '../OpenViduInternal/Events/SpeechToTextEvent';\nimport { StreamEvent } from '../OpenViduInternal/Events/StreamEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { ConnectionPropertyChangedEvent } from '../OpenViduInternal/Events/ConnectionPropertyChangedEvent';\nimport { NetworkQualityLevelChangedEvent } from '../OpenViduInternal/Events/NetworkQualityLevelChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\nimport { StreamPropertyChangedEventReason, ChangedPropertyType, RecordingEventReason, ConnectionEventReason, StreamEventReason } from '../OpenViduInternal/Events/Types/Types';\n/**\n * @hidden\n */\nimport semverMajor = require('semver/functions/major');\n/**\n * @hidden\n */\nimport semverMinor = require('semver/functions/minor');\nimport { ExceptionEvent, ExceptionEventName } from '../OpenViduInternal/Events/ExceptionEvent';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Represents a video call. It can also be seen as a videoconference room where multiple users can connect.\n * Participants who publish their videos to a session can be seen by the rest of users connected to that specific session.\n * Initialized with {@link OpenVidu.initSession} method.\n *\n * See available event listeners at {@link SessionEventMap}.\n */\nexport class Session extends EventDispatcher {\n    /**\n     * Local connection to the Session. This object is defined only after {@link Session.connect} has been successfully executed, and can be retrieved subscribing to `connectionCreated` event\n     */\n    connection: Connection;\n\n    /**\n     * Unique identifier of the Session\n     */\n    sessionId: string;\n\n    /**\n     * Collection of all StreamManagers of this Session ({@link Publisher} and {@link Subscriber})\n     */\n    streamManagers: StreamManager[] = [];\n\n    /**\n     * Object defining the methods that the client is able to call. These are defined by the {@link Connection.role}.\n     * This object is only defined after {@link Session.connect} has been successfully resolved\n     */\n    capabilities: Capabilities;\n\n    // This map is only used to avoid race condition between 'joinRoom' response and 'onParticipantPublished' notification\n    /**\n     * @hidden\n     */\n    remoteStreamsCreated: Map<string, boolean> = new Map();\n\n    /**\n     * @hidden\n     */\n    remoteConnections: Map<string, Connection> = new Map();\n    /**\n     * @hidden\n     */\n    openvidu: OpenVidu;\n    /**\n     * @hidden\n     */\n    options: SessionOptions;\n    /**\n     * @hidden\n     */\n    token: string;\n    /**\n     * @hidden\n     */\n    private videoDataInterval: NodeJS.Timeout;\n    /**\n     * @hidden\n     */\n    private videoDataTimeout: NodeJS.Timeout;\n\n    /**\n     * @hidden\n     */\n    constructor(openvidu: OpenVidu) {\n        super();\n        platform = PlatformUtils.getInstance();\n        this.openvidu = openvidu;\n    }\n\n    connect(token: string): Promise<any>;\n    connect(token: string, metadata: any): Promise<any>;\n\n    /**\n     * Connects to the session using `token`. Parameter `metadata` allows you to pass extra data to share with other users when\n     * they receive `streamCreated` event. The structure of `metadata` string is up to you (maybe some standardized format\n     * as JSON or XML is a good idea).\n     *\n     * This metadata is not considered secure, as it is generated in the client side. To pass secure data, add it as a parameter in the\n     * token generation operation (through the API REST, openvidu-java-client or openvidu-node-client).\n     *\n     * Only after the returned Promise is successfully resolved {@link Session.connection} object will be available and properly defined.\n     *\n     * #### Events dispatched\n     *\n     * The {@link Session} object of the local participant will first dispatch one or more `connectionCreated` events upon successful termination of this method:\n     * - First one for your own local Connection object, so you can retrieve {@link Session.connection} property.\n     * - Then one for each remote Connection previously connected to the Session, if any. Any other remote user connecting to the Session after you have\n     * successfully connected will also dispatch a `connectionCreated` event when they do so.\n     *\n     * The {@link Session} object of the local participant will also dispatch a `streamCreated` event for each remote active {@link Publisher} that was already streaming\n     * when connecting, just after dispatching all remote `connectionCreated` events.\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `connectionCreated` event.\n     *\n     * See {@link ConnectionEvent} and {@link StreamEvent} to learn more.\n     *\n     * @returns A Promise to which you must subscribe that is resolved if the the connection to the Session was successful and rejected with an Error object if not\n     *\n     */\n    connect(token: string, metadata?: any): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.processToken(token);\n\n            if (this.openvidu.checkSystemRequirements()) {\n                // Early configuration to deactivate automatic subscription to streams\n                this.options = {\n                    sessionId: this.sessionId,\n                    participantId: token,\n                    metadata: !!metadata ? this.stringClientMetadata(metadata) : ''\n                };\n                this.connectAux(token)\n                    .then(() => resolve())\n                    .catch((error) => reject(error));\n            } else {\n                return reject(\n                    new OpenViduError(\n                        OpenViduErrorName.BROWSER_NOT_SUPPORTED,\n                        'Browser ' +\n                        platform.getName() +\n                        ' (version ' +\n                        platform.getVersion() +\n                        ') for ' +\n                        platform.getFamily() +\n                        ' is not supported in OpenVidu'\n                    )\n                );\n            }\n        });\n    }\n\n    /**\n     * Leaves the session, destroying all streams and deleting the user as a participant.\n     *\n     * #### Events dispatched\n     *\n     * The {@link Session} object of the local participant will dispatch a `sessionDisconnected` event.\n     * This event will automatically unsubscribe the leaving participant from every Subscriber object of the session (this includes closing the RTCPeerConnection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to each Subscriber (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, each Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `sessionDisconnected` to avoid this behavior and take care of disposing and cleaning all the Subscriber objects yourself.\n     * See {@link SessionDisconnectedEvent} and {@link VideoElementEvent} to learn more.\n     *\n     * The {@link Publisher} object of the local participant will dispatch a `streamDestroyed` event if there is a {@link Publisher} object publishing to the session.\n     * This event will automatically stop all media tracks and delete any HTML video element associated to it (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Publisher object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` if you want to clean the Publisher object on your own or re-publish it in a different Session (to do so it is a mandatory requirement to call `Session.unpublish()`\n     * or/and `Session.disconnect()` in the previous session). See {@link StreamEvent} and {@link VideoElementEvent} to learn more.\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `streamDestroyed` event if the disconnected participant was publishing.\n     * This event will automatically unsubscribe the Subscriber object from the session (this includes closing the RTCPeerConnection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to that Subscriber (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` to avoid this default behavior and take care of disposing and cleaning the Subscriber object yourself.\n     * See {@link StreamEvent} and {@link VideoElementEvent} to learn more.\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `connectionDestroyed` event in any case. See {@link ConnectionEvent} to learn more.\n     */\n    disconnect(): void {\n        this.leave(false, 'disconnect');\n    }\n\n    subscribe(stream: Stream, targetElement: string | HTMLElement | undefined): Subscriber;\n    subscribe(stream: Stream, targetElement: string | HTMLElement | undefined, properties: SubscriberProperties): Subscriber;\n    subscribe(\n        stream: Stream,\n        targetElement: string | HTMLElement | undefined,\n        completionHandler: (error: Error | undefined) => void\n    ): Subscriber;\n    subscribe(\n        stream: Stream,\n        targetElement: string | HTMLElement | undefined,\n        properties: SubscriberProperties,\n        completionHandler: (error: Error | undefined) => void\n    ): Subscriber;\n\n    /**\n     * Subscribes to a `stream`, adding a new HTML video element to DOM with `subscriberProperties` settings. This method is usually called in the callback of `streamCreated` event.\n     *\n     * #### Events dispatched\n     *\n     * The {@link Subscriber} object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM (only if you\n     * [let OpenVidu take care of the video players](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)). See {@link VideoElementEvent} to learn more.\n     *\n     * The {@link Subscriber} object will dispatch a `streamPlaying` event once the remote stream starts playing. See {@link StreamManagerEvent} to learn more.\n     *\n     * @param stream Stream object to subscribe to\n     * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Subscriber will be inserted (see {@link SubscriberProperties.insertMode}). If *null* or *undefined* no default video will be created for this Subscriber.\n     * You can always call method {@link Subscriber.addVideoElement} or {@link Subscriber.createVideoElement} to manage the video elements on your own (see [Manage video players](/en/stable/cheatsheet/manage-videos) section)\n     * @param completionHandler `error` parameter is null if `subscribe` succeeds, and is defined if it fails.\n     */\n    subscribe(\n        stream: Stream,\n        targetElement: string | HTMLElement | undefined,\n        param3?: ((error: Error | undefined) => void) | SubscriberProperties,\n        param4?: (error: Error | undefined) => void\n    ): Subscriber {\n        let properties: SubscriberProperties = {};\n        if (!!param3 && typeof param3 !== 'function') {\n            properties = {\n                insertMode:\n                    typeof param3.insertMode !== 'undefined'\n                        ? typeof param3.insertMode === 'string'\n                            ? VideoInsertMode[param3.insertMode]\n                            : properties.insertMode\n                        : VideoInsertMode.APPEND,\n                subscribeToAudio: typeof param3.subscribeToAudio !== 'undefined' ? param3.subscribeToAudio : true,\n                subscribeToVideo: typeof param3.subscribeToVideo !== 'undefined' ? param3.subscribeToVideo : true\n            };\n        } else {\n            properties = {\n                insertMode: VideoInsertMode.APPEND,\n                subscribeToAudio: true,\n                subscribeToVideo: true\n            };\n        }\n\n        let completionHandler: ((error: Error | undefined) => void) | undefined = undefined;\n        if (!!param3 && typeof param3 === 'function') {\n            completionHandler = param3;\n        } else if (!!param4) {\n            completionHandler = param4;\n        }\n\n        if (!this.sessionConnected()) {\n            if (completionHandler !== undefined) {\n                completionHandler(this.notConnectedError());\n            }\n            throw this.notConnectedError();\n        }\n\n        logger.info('Subscribing to ' + stream.connection.connectionId);\n\n        stream\n            .subscribe()\n            .then(() => {\n                logger.info('Subscribed correctly to ' + stream.connection.connectionId);\n                if (completionHandler !== undefined) {\n                    completionHandler(undefined);\n                }\n            })\n            .catch((error) => {\n                if (completionHandler !== undefined) {\n                    completionHandler(error);\n                }\n            });\n        const subscriber = new Subscriber(stream, targetElement, properties);\n        if (!!subscriber.targetElement) {\n            stream.streamManager.createVideoElement(subscriber.targetElement, <VideoInsertMode>properties.insertMode);\n        }\n        return subscriber;\n    }\n\n    /**\n     * Promisified version of {@link Session.subscribe}\n     */\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement): Promise<Subscriber>;\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement, properties: SubscriberProperties): Promise<Subscriber>;\n\n    subscribeAsync(stream: Stream, targetElement: string | HTMLElement, properties?: SubscriberProperties): Promise<Subscriber> {\n        return new Promise<Subscriber>((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            }\n\n            let subscriber: Subscriber;\n\n            const callback = (error: Error) => {\n                if (!!error) {\n                    return reject(error);\n                } else {\n                    return resolve(subscriber);\n                }\n            };\n\n            if (!!properties) {\n                subscriber = this.subscribe(stream, targetElement, properties, callback);\n            } else {\n                subscriber = this.subscribe(stream, targetElement, callback);\n            }\n        });\n    }\n\n    /**\n     * Unsubscribes from `subscriber`, automatically removing its associated HTML video elements.\n     *\n     * #### Events dispatched\n     *\n     * The {@link Subscriber} object will dispatch a `videoElementDestroyed` event for each video associated to it that was removed from DOM.\n     * Only videos [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)) will be automatically removed\n     *\n     * See {@link VideoElementEvent} to learn more\n     */\n    unsubscribe(subscriber: Subscriber): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            } else {\n                const connectionId = subscriber.stream.connection.connectionId;\n\n                logger.info('Unsubscribing from ' + connectionId);\n\n                this.openvidu.sendRequest(\n                    'unsubscribeFromVideo',\n                    { sender: subscriber.stream.connection.connectionId },\n                    (error, response) => {\n                        if (error) {\n                            logger.error('Error unsubscribing from ' + connectionId);\n                            return reject(error);\n                        } else {\n                            logger.info('Unsubscribed correctly from ' + connectionId);\n                            subscriber.stream.streamManager.removeAllVideos();\n                            subscriber.stream.disposeWebRtcPeer();\n                            subscriber.stream.disposeMediaStream();\n                            return resolve();\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Publishes to the Session the Publisher object\n     *\n     * #### Events dispatched\n     *\n     * The local {@link Publisher} object will dispatch a `streamCreated` event upon successful termination of this method. See {@link StreamEvent} to learn more.\n     *\n     * The local {@link Publisher} object will dispatch a `streamPlaying` once the media stream starts playing. See {@link StreamManagerEvent} to learn more.\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `streamCreated` event so they can subscribe to it. See {@link StreamEvent} to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the publisher was successfully published and rejected with an Error object if not\n     */\n    publish(publisher: Publisher): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            }\n\n            publisher.session = this;\n            publisher.stream.session = this;\n\n            if (!publisher.stream.publishedOnce) {\n                // 'Session.unpublish(Publisher)' has NOT been called\n                this.connection.addStream(publisher.stream);\n                publisher.stream\n                    .publish()\n                    .then(() => {\n                        this.sendVideoData(publisher, 8, true, 5);\n                        return resolve();\n                    })\n                    .catch((error) => reject(error));\n            } else {\n                // 'Session.unpublish(Publisher)' has been called. Must initialize again Publisher\n                publisher\n                    .initialize()\n                    .then(() => {\n                        this.connection.addStream(publisher.stream);\n                        publisher.reestablishStreamPlayingEvent();\n                        publisher.stream\n                            .publish()\n                            .then(() => {\n                                this.sendVideoData(publisher, 8, true, 5);\n                                return resolve();\n                            })\n                            .catch((error) => reject(error));\n                    })\n                    .catch((error) => reject(error));\n            }\n        });\n    }\n\n    /**\n     * Unpublishes from the Session the Publisher object.\n     *\n     * #### Events dispatched\n     *\n     * The {@link Publisher} object of the local participant will dispatch a `streamDestroyed` event.\n     * This event will automatically stop all media tracks and delete any HTML video element associated to this Publisher\n     * (only those videos [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Publisher object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` if you want to clean the Publisher object on your own or re-publish it in a different Session.\n     *\n     * The {@link Session} object of every other participant connected to the session will dispatch a `streamDestroyed` event.\n     * This event will automatically unsubscribe the Subscriber object from the session (this includes closing the RTCPeerConnection and disposing all MediaStreamTracks) and\n     * delete any HTML video element associated to it (only those [created by OpenVidu Browser](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)).\n     * For every video removed, the Subscriber object will dispatch a `videoElementDestroyed` event.\n     * Call `event.preventDefault()` upon event `streamDestroyed` to avoid this default behavior and take care of disposing and cleaning the Subscriber object on your own.\n     *\n     * See {@link StreamEvent} and {@link VideoElementEvent} to learn more.\n     */\n    unpublish(publisher: Publisher): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                throw this.notConnectedError();\n            }\n\n            const stream = publisher.stream;\n\n            if (!stream.connection) {\n                return reject(new Error('The associated Connection object of this Publisher is null'));\n            } else if (stream.connection !== this.connection) {\n                return reject(\n                    new Error(\n                        'The associated Connection object of this Publisher is not your local Connection.  ' +\n                        \"Only moderators can force unpublish on remote Streams via 'forceUnpublish' method\"\n                    )\n                );\n            } else {\n                logger.info('Unpublishing local media (' + stream.connection.connectionId + ')');\n\n                this.openvidu.sendRequest('unpublishVideo', (error, response) => {\n                    if (error) {\n                        return reject(error);\n                    } else {\n                        logger.info('Media unpublished correctly');\n\n                        stream.disposeWebRtcPeer();\n\n                        if (stream.connection.stream == stream) {\n                            // The Connection.stream may have changed if Session.publish was called with other Publisher\n                            delete stream.connection.stream;\n                        }\n\n                        const streamEvent = new StreamEvent(true, publisher, 'streamDestroyed', publisher.stream, 'unpublish');\n                        publisher.emitEvent('streamDestroyed', [streamEvent]);\n                        streamEvent.callDefaultBehavior();\n\n                        return resolve();\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Forces some user to leave the session\n     *\n     * #### Events dispatched\n     *\n     * The behavior is the same as when some user calls {@link Session.disconnect}, but `reason` property in all events will be `\"forceDisconnectByUser\"`.\n     *\n     * The {@link Session} object of every participant will dispatch a `streamDestroyed` event if the evicted user was publishing a stream, with property `reason` set to `\"forceDisconnectByUser\"`.\n     * The {@link Session} object of every participant except the evicted one will dispatch a `connectionDestroyed` event for the evicted user, with property `reason` set to `\"forceDisconnectByUser\"`.\n     *\n     * If any, the {@link Publisher} object of the evicted participant will also dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`.\n     * The {@link Session} object of the evicted participant will dispatch a `sessionDisconnected` event with property `reason` set to `\"forceDisconnectByUser\"`.\n     *\n     * See {@link StreamEvent}, {@link ConnectionEvent} and {@link SessionDisconnectedEvent} to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the participant has been successfully evicted from the session and rejected with an Error object if not\n     */\n    forceDisconnect(connection: Connection): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            }\n\n            logger.info('Forcing disconnect for connection ' + connection.connectionId);\n            this.openvidu.sendRequest('forceDisconnect', { connectionId: connection.connectionId }, (error, response) => {\n                if (error) {\n                    logger.error('Error forcing disconnect for Connection ' + connection.connectionId, error);\n                    if (error.code === 401) {\n                        return reject(\n                            new OpenViduError(\n                                OpenViduErrorName.OPENVIDU_PERMISSION_DENIED,\n                                \"You don't have permissions to force a disconnection\"\n                            )\n                        );\n                    } else {\n                        return reject(error);\n                    }\n                } else {\n                    logger.info('Forcing disconnect correctly for Connection ' + connection.connectionId);\n                    return resolve();\n                }\n            });\n        });\n    }\n\n    /**\n     * Forces some user to unpublish a Stream\n     *\n     * #### Events dispatched\n     *\n     * The behavior is the same as when some user calls {@link Session.unpublish}, but `reason` property in all events will be `\"forceUnpublishByUser\"`\n     *\n     * The {@link Session} object of every participant will dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`\n     *\n     * The {@link Publisher} object of the affected participant will also dispatch a `streamDestroyed` event with property `reason` set to `\"forceDisconnectByUser\"`\n     *\n     * See {@link StreamEvent} to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved only after the remote Stream has been successfully unpublished from the session and rejected with an Error object if not\n     */\n    forceUnpublish(stream: Stream): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            }\n\n            logger.info('Forcing unpublish for stream ' + stream.streamId);\n            this.openvidu.sendRequest('forceUnpublish', { streamId: stream.streamId }, (error, response) => {\n                if (error) {\n                    logger.error('Error forcing unpublish for Stream ' + stream.streamId, error);\n                    if (error.code === 401) {\n                        return reject(\n                            new OpenViduError(\n                                OpenViduErrorName.OPENVIDU_PERMISSION_DENIED,\n                                \"You don't have permissions to force an unpublishing\"\n                            )\n                        );\n                    } else {\n                        return reject(error);\n                    }\n                } else {\n                    logger.info('Forcing unpublish correctly for Stream ' + stream.streamId);\n                    return resolve();\n                }\n            });\n        });\n    }\n\n    /**\n     * Sends one signal. `signal` object has the following optional properties:\n     * ```json\n     * {data:string, to:Connection[], type:string}\n     * ```\n     * All users subscribed to that signal (`session.on('signal:type', ...)` or `session.on('signal', ...)` for all signals) and whose Connection objects are in `to` array will receive it. Their local\n     * Session objects will dispatch a `signal` or `signal:type` event. See {@link SignalEvent} to learn more.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the message successfully reached openvidu-server and rejected with an Error object if not. _This doesn't\n     * mean that openvidu-server could resend the message to all the listed receivers._\n     */\n    signal(signal: SignalOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.sessionConnected()) {\n                return reject(this.notConnectedError());\n            }\n\n            const signalMessage = {};\n\n            if (signal.to && signal.to.length > 0) {\n                const connectionIds: string[] = [];\n                signal.to.forEach((connection) => {\n                    if (!!connection.connectionId) {\n                        connectionIds.push(connection.connectionId);\n                    }\n                });\n                signalMessage['to'] = connectionIds;\n            } else {\n                signalMessage['to'] = [];\n            }\n\n            signalMessage['data'] = signal.data ? signal.data : '';\n\n            let typeAux: string = signal.type ? signal.type : 'signal';\n            if (!!typeAux) {\n                if (typeAux.substring(0, 7) !== 'signal:') {\n                    typeAux = 'signal:' + typeAux;\n                }\n            }\n            signalMessage['type'] = typeAux;\n\n            this.openvidu.sendRequest(\n                'sendMessage',\n                {\n                    message: JSON.stringify(signalMessage)\n                },\n                (error, response) => {\n                    if (!!error) {\n                        return reject(error);\n                    } else {\n                        return resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Subscribe to the Speech-To-Text events for this {@link Stream}. The Session object will emit {@link SpeechToTextEvent} for the Stream\n     * when speech is detected in its audio track.\n     *\n     * @param stream - The Stream for which you want to start receiving {@link SpeechToTextEvent}.\n     * @param lang - The language of the Stream's audio track. It must be a valid [BCP-47](https://tools.ietf.org/html/bcp47) language tag like \"en-US\" or \"es-ES\".\n     * \n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the speech-to-text subscription\n     * was successful and rejected with an Error object if not.\n     */\n    subscribeToSpeechToText(stream: Stream, lang: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.openvidu.sendRequest(\n                'subscribeToSpeechToText',\n                {\n                    connectionId: stream.connection.connectionId,\n                    lang\n                },\n                (error, response) => {\n                    if (!!error) {\n                        return reject(error);\n                    } else {\n                        return resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * Unsubscribe from the Speech-To-Text events for this {@link Stream}.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the speech-to-text subscription\n     * was successful and rejected with an Error object if not.\n     */\n    unsubscribeFromSpeechToText(stream: Stream): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.openvidu.sendRequest(\n                'unsubscribeFromSpeechToText',\n                {\n                    connectionId: stream.connection.connectionId\n                },\n                (error, response) => {\n                    if (!!error) {\n                        return reject(error);\n                    } else {\n                        return resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    /**\n     * See {@link EventDispatcher.on}\n     */\n    on<K extends keyof SessionEventMap>(type: K, handler: (event: SessionEventMap[K]) => void): this {\n        super.onAux(type, \"Event '\" + type + \"' triggered by 'Session'\", handler);\n\n        if (type === 'publisherStartSpeaking') {\n            // If there are already available remote streams with audio, enable hark 'speaking' event in all of them\n            this.remoteConnections.forEach((remoteConnection) => {\n                if (!!remoteConnection.stream?.hasAudio) {\n                    remoteConnection.stream.enableHarkSpeakingEvent();\n                }\n            });\n            if (!!this.connection?.stream?.hasAudio) {\n                // If connected to the Session and publishing with audio, also enable hark 'speaking' event for the Publisher\n                this.connection.stream.enableHarkSpeakingEvent();\n            }\n        }\n        if (type === 'publisherStopSpeaking') {\n            // If there are already available remote streams with audio, enable hark 'stopped_speaking' event in all of them\n            this.remoteConnections.forEach((remoteConnection) => {\n                if (!!remoteConnection.stream?.hasAudio) {\n                    remoteConnection.stream.enableHarkStoppedSpeakingEvent();\n                }\n            });\n            if (!!this.connection?.stream?.hasAudio) {\n                // If connected to the Session and publishing with audio, also enable hark 'stopped_speaking' event for the Publisher\n                this.connection.stream.enableHarkStoppedSpeakingEvent();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.once}\n     */\n    once<K extends keyof SessionEventMap>(type: K, handler: (event: SessionEventMap[K]) => void): this {\n        super.onceAux(type, \"Event '\" + type + \"' triggered once by 'Session'\", handler);\n\n        if (type === 'publisherStartSpeaking') {\n            // If there are already available remote streams with audio, enable hark 'speaking' event (once) in all of them once\n            this.remoteConnections.forEach((remoteConnection) => {\n                if (!!remoteConnection.stream?.hasAudio) {\n                    remoteConnection.stream.enableOnceHarkSpeakingEvent();\n                }\n            });\n            if (!!this.connection?.stream?.hasAudio) {\n                // If connected to the Session and publishing with audio, also enable hark 'speaking' event (once) for the Publisher\n                this.connection.stream.enableOnceHarkSpeakingEvent();\n            }\n        }\n        if (type === 'publisherStopSpeaking') {\n            // If there are already available remote streams with audio, enable hark 'stopped_speaking' event (once) in all of them once\n            this.remoteConnections.forEach((remoteConnection) => {\n                if (!!remoteConnection.stream?.hasAudio) {\n                    remoteConnection.stream.enableOnceHarkStoppedSpeakingEvent();\n                }\n            });\n            if (!!this.connection?.stream?.hasAudio) {\n                // If connected to the Session and publishing with audio, also enable hark 'stopped_speaking' event (once) for the Publisher\n                this.connection.stream.enableOnceHarkStoppedSpeakingEvent();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.off}\n     */\n    off<K extends keyof SessionEventMap>(type: K, handler?: (event: SessionEventMap[K]) => void): this {\n        super.offAux(type, handler);\n\n        if (type === 'publisherStartSpeaking') {\n            // Check if Session object still has some listener for the event\n            if (!this.anySpeechEventListenerEnabled('publisherStartSpeaking', false)) {\n                this.remoteConnections.forEach((remoteConnection) => {\n                    if (!!remoteConnection.stream?.streamManager) {\n                        // Check if Subscriber object still has some listener for the event\n                        if (!this.anySpeechEventListenerEnabled('publisherStartSpeaking', false, remoteConnection.stream.streamManager)) {\n                            remoteConnection.stream.disableHarkSpeakingEvent(false);\n                        }\n                    }\n                });\n                if (!!this.connection?.stream?.streamManager) {\n                    // Check if Publisher object still has some listener for the event\n                    if (!this.anySpeechEventListenerEnabled('publisherStartSpeaking', false, this.connection.stream.streamManager)) {\n                        this.connection.stream.disableHarkSpeakingEvent(false);\n                    }\n                }\n            }\n        }\n        if (type === 'publisherStopSpeaking') {\n            // Check if Session object still has some listener for the event\n            if (!this.anySpeechEventListenerEnabled('publisherStopSpeaking', false)) {\n                this.remoteConnections.forEach((remoteConnection) => {\n                    if (!!remoteConnection.stream?.streamManager) {\n                        // Check if Subscriber object still has some listener for the event\n                        if (!this.anySpeechEventListenerEnabled('publisherStopSpeaking', false, remoteConnection.stream.streamManager)) {\n                            remoteConnection.stream.disableHarkStoppedSpeakingEvent(false);\n                        }\n                    }\n                });\n                if (!!this.connection?.stream?.streamManager) {\n                    // Check if Publisher object still has some listener for the event\n                    if (!this.anySpeechEventListenerEnabled('publisherStopSpeaking', false, this.connection.stream.streamManager)) {\n                        this.connection.stream.disableHarkStoppedSpeakingEvent(false);\n                    }\n                }\n            }\n        }\n        return this;\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    onParticipantJoined(event: RemoteConnectionOptions): void {\n        // Connection shouldn't exist\n        this.getConnection(event.id, '')\n            .then((connection) => {\n                logger.warn('Connection ' + connection.connectionId + ' already exists in connections list');\n            })\n            .catch((openViduError) => {\n                const connection = new Connection(this, event);\n                this.remoteConnections.set(event.id, connection);\n                this.ee.emitEvent('connectionCreated', [new ConnectionEvent(false, this, 'connectionCreated', connection, '')]);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantLeft(event: { connectionId: string; reason: ConnectionEventReason }): void {\n        this.getRemoteConnection(event.connectionId, 'onParticipantLeft')\n            .then((connection) => {\n                if (!!connection.stream) {\n                    const stream = connection.stream;\n\n                    const streamEvent = new StreamEvent(true, this, 'streamDestroyed', stream, event.reason);\n                    this.ee.emitEvent('streamDestroyed', [streamEvent]);\n                    streamEvent.callDefaultBehavior();\n\n                    this.remoteStreamsCreated.delete(stream.streamId);\n                }\n                connection.dispose();\n                this.remoteConnections.delete(connection.connectionId);\n                this.ee.emitEvent('connectionDestroyed', [\n                    new ConnectionEvent(false, this, 'connectionDestroyed', connection, event.reason)\n                ]);\n            })\n            .catch((openViduError) => {\n                logger.error(openViduError);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantPublished(event: RemoteConnectionOptions): void {\n        const afterConnectionFound = (connection) => {\n            this.remoteConnections.set(connection.connectionId, connection);\n\n            if (!this.remoteStreamsCreated.get(connection.stream.streamId)) {\n                // Avoid race condition between stream.subscribe() in \"onParticipantPublished\" and in \"joinRoom\" rpc callback\n                // This condition is false if openvidu-server sends \"participantPublished\" event to a subscriber participant that has\n                // already subscribed to certain stream in the callback of \"joinRoom\" method\n\n                this.ee.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', connection.stream, '')]);\n            }\n\n            this.remoteStreamsCreated.set(connection.stream.streamId, true);\n        };\n\n        // Get the existing Connection created on 'onParticipantJoined' for\n        // existing participants or create a new one for new participants\n        let connection: Connection;\n        this.getRemoteConnection(event.id, 'onParticipantPublished')\n\n            .then((con) => {\n                // Update existing Connection\n                connection = con;\n                event.metadata = con.data;\n                connection.remoteOptions = event;\n                connection.initRemoteStreams(event.streams);\n                afterConnectionFound(connection);\n            })\n            .catch((openViduError) => {\n                // Create new Connection\n                connection = new Connection(this, event);\n                afterConnectionFound(connection);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantUnpublished(event: { connectionId: string; reason: StreamEventReason }): void {\n        if (event.connectionId === this.connection.connectionId) {\n            // Your stream has been forcedly unpublished from the session\n            this.stopPublisherStream(event.reason);\n        } else {\n            this.getRemoteConnection(event.connectionId, 'onParticipantUnpublished')\n\n                .then((connection) => {\n                    const streamEvent = new StreamEvent(true, this, 'streamDestroyed', connection.stream!, event.reason);\n                    this.ee.emitEvent('streamDestroyed', [streamEvent]);\n                    streamEvent.callDefaultBehavior();\n\n                    // Deleting the remote stream if it exists\n                    if (connection.stream != null) {\n                        const streamId: string = connection.stream!.streamId;\n                        this.remoteStreamsCreated.delete(streamId);\n                        connection.removeStream();\n                    }\n                })\n                .catch((openViduError) => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onParticipantEvicted(event: { connectionId: string; reason: ConnectionEventReason }): void {\n        if (event.connectionId === this.connection.connectionId) {\n            // You have been evicted from the session\n            if (!!this.sessionId && !this.connection.disposed) {\n                this.leave(true, event.reason);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onNewMessage(event: { type?: string; data?: string; from?: string }): void {\n        logger.info('New signal: ' + JSON.stringify(event));\n\n        const strippedType = !!event.type ? event.type.replace(/^(signal:)/, '') : undefined;\n\n        if (!!event.from) {\n            // Signal sent by other client\n            this.getConnection(\n                event.from,\n                \"Connection '\" +\n                event.from +\n                \"' unknown when 'onNewMessage'. Existing remote connections: \" +\n                JSON.stringify(this.remoteConnections.keys()) +\n                '. Existing local connection: ' +\n                this.connection.connectionId\n            )\n\n                .then((connection) => {\n                    this.ee.emitEvent('signal', [new SignalEvent(this, strippedType, event.data, connection)]);\n                    if (!!event.type && event.type !== 'signal') {\n                        this.ee.emitEvent(event.type, [new SignalEvent(this, strippedType, event.data, connection)]);\n                    }\n                })\n                .catch((openViduError) => {\n                    logger.error(openViduError);\n                });\n        } else {\n            // Signal sent by server\n            this.ee.emitEvent('signal', [new SignalEvent(this, strippedType, event.data, undefined)]);\n            if (!!event.type && event.type !== 'signal') {\n                this.ee.emitEvent(event.type, [new SignalEvent(this, strippedType, event.data, undefined)]);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onStreamPropertyChanged(event: { connectionId: string; streamId: string; property: ChangedPropertyType; newValue: any; reason: StreamPropertyChangedEventReason }): void {\n        const callback = (connection: Connection) => {\n            if (!!connection.stream && connection.stream.streamId === event.streamId) {\n                const stream = connection.stream;\n                let oldValue;\n                switch (event.property) {\n                    case 'audioActive':\n                        oldValue = stream.audioActive;\n                        event.newValue = event.newValue === 'true';\n                        stream.audioActive = event.newValue;\n                        break;\n                    case 'videoActive':\n                        oldValue = stream.videoActive;\n                        event.newValue = event.newValue === 'true';\n                        stream.videoActive = event.newValue;\n                        const videoTrack = stream?.getMediaStream()?.getVideoTracks()?.[0];\n                        if(videoTrack && !videoTrack.enabled && stream.videoActive){\n                            videoTrack.enabled = true;\n                        }\n                        break;\n                    case 'videoTrack':\n                        event.newValue = JSON.parse(event.newValue);\n                        break;\n                    case 'audioTrack':\n                        event.newValue = JSON.parse(event.newValue);\n                        break;\n                    case 'videoDimensions':\n                        oldValue = stream.videoDimensions;\n                        event.newValue = JSON.parse(JSON.parse(event.newValue));\n                        stream.videoDimensions = event.newValue;\n                        break;\n                    case 'filter':\n                        oldValue = stream.filter;\n                        event.newValue = Object.keys(event.newValue).length > 0 ? event.newValue : undefined;\n                        if (event.newValue !== undefined) {\n                            stream.filter = new Filter(event.newValue.type, event.newValue.options);\n                            stream.filter.stream = stream;\n                            if (event.newValue.lastExecMethod) {\n                                stream.filter.lastExecMethod = event.newValue.lastExecMethod;\n                            }\n                        } else {\n                            delete stream.filter;\n                        }\n                        event.newValue = stream.filter;\n                        break;\n                }\n                this.ee.emitEvent('streamPropertyChanged', [\n                    new StreamPropertyChangedEvent(this, stream, event.property, event.newValue, oldValue, event.reason)\n                ]);\n                if (!!stream.streamManager) {\n                    stream.streamManager.emitEvent('streamPropertyChanged', [\n                        new StreamPropertyChangedEvent(stream.streamManager, stream, event.property, event.newValue, oldValue, event.reason)\n                    ]);\n                }\n            } else {\n                logger.error(\n                    \"No stream with streamId '\" +\n                    event.streamId +\n                    \"' found for connection '\" +\n                    event.connectionId +\n                    \"' on 'streamPropertyChanged' event\"\n                );\n            }\n        };\n\n        if (event.connectionId === this.connection.connectionId) {\n            // Your stream has been forcedly changed (filter feature)\n            callback(this.connection);\n        } else {\n            this.getRemoteConnection(event.connectionId, 'onStreamPropertyChanged')\n                .then((connection) => {\n                    callback(connection);\n                })\n                .catch((openViduError) => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onConnectionPropertyChanged(event: { property: string; newValue: any }): void {\n        let oldValue;\n        switch (event.property) {\n            case 'role':\n                oldValue = this.connection.role.slice();\n                this.connection.role = event.newValue;\n                this.connection.localOptions!.role = event.newValue;\n                break;\n            case 'record':\n                oldValue = this.connection.record;\n                event.newValue = event.newValue === 'true';\n                this.connection.record = event.newValue;\n                this.connection.localOptions!.record = event.newValue;\n                break;\n        }\n        this.ee.emitEvent('connectionPropertyChanged', [\n            new ConnectionPropertyChangedEvent(this, this.connection, event.property, event.newValue, oldValue)\n        ]);\n    }\n\n    /**\n     * @hidden\n     */\n    onNetworkQualityLevelChangedChanged(event: { connectionId: string; newValue: number; oldValue: number }): void {\n        if (event.connectionId === this.connection.connectionId) {\n            this.ee.emitEvent('networkQualityLevelChanged', [\n                new NetworkQualityLevelChangedEvent(this, event.newValue, event.oldValue, this.connection)\n            ]);\n        } else {\n            this.getConnection(event.connectionId, 'Connection not found for connectionId ' + event.connectionId)\n                .then((connection: Connection) => {\n                    this.ee.emitEvent('networkQualityLevelChanged', [\n                        new NetworkQualityLevelChangedEvent(this, event.newValue, event.oldValue, connection)\n                    ]);\n                })\n                .catch((openViduError) => {\n                    logger.error(openViduError);\n                });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    recvIceCandidate(event: {\n        senderConnectionId: string;\n        endpointName: string;\n        sdpMLineIndex: number;\n        sdpMid: string;\n        candidate: string;\n    }): void {\n        // The event contains fields that can be used to obtain a proper candidate,\n        // using the RTCIceCandidate constructor:\n        // https://w3c.github.io/webrtc-pc/#dom-rtcicecandidate-constructor\n        const candidateInit: RTCIceCandidateInit = {\n            candidate: event.candidate,\n            sdpMLineIndex: event.sdpMLineIndex,\n            sdpMid: event.sdpMid\n        };\n        const iceCandidate = new RTCIceCandidate(candidateInit);\n\n        this.getConnection(\n            event.senderConnectionId,\n            'Connection not found for connectionId ' +\n            event.senderConnectionId +\n            ' owning endpoint ' +\n            event.endpointName +\n            '. Ice candidate will be ignored: ' +\n            iceCandidate\n        )\n            .then((connection) => {\n                const stream: Stream = connection.stream!;\n                stream\n                    .getWebRtcPeer()\n                    .addIceCandidate(iceCandidate)\n                    .catch((error) => {\n                        logger.error(\n                            'Error adding candidate for ' + stream!.streamId + ' stream of endpoint ' + event.endpointName + ': ' + error\n                        );\n                    });\n            })\n            .catch((openViduError) => {\n                logger.error(openViduError);\n            });\n    }\n\n    /**\n     * @hidden\n     */\n    onSessionClosed(msg): void {\n        logger.info('Session closed: ' + JSON.stringify(msg));\n        const s = msg.sessionId;\n        if (s !== undefined) {\n            this.ee.emitEvent('session-closed', [\n                {\n                    session: s\n                }\n            ]);\n        } else {\n            logger.warn('Session undefined on session closed', msg);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onLostConnection(reason: ConnectionEventReason): void {\n        logger.warn('Lost connection in Session ' + this.sessionId);\n        if (!!this.sessionId && !!this.connection && !this.connection.disposed) {\n            this.leave(true, reason);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onRecoveredConnection(): void {\n        logger.info('Recovered connection in Session ' + this.sessionId);\n        this.reconnectBrokenStreams();\n        this.ee.emitEvent('reconnected', []);\n    }\n\n    /**\n     * @hidden\n     */\n    onMediaError(event: { error: string }): void {\n        logger.error('Media error: ' + JSON.stringify(event));\n        const err = event.error;\n        if (err) {\n            this.ee.emitEvent('error-media', [{ error: err }]);\n        } else {\n            logger.warn('Received undefined media error:', event);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    onRecordingStarted(event: { id: string; name: string }): void {\n        this.ee.emitEvent('recordingStarted', [new RecordingEvent(this, 'recordingStarted', event.id, event.name)]);\n    }\n\n    /**\n     * @hidden\n     */\n    onRecordingStopped(event: { id: string; name: string; reason: RecordingEventReason }): void {\n        this.ee.emitEvent('recordingStopped', [new RecordingEvent(this, 'recordingStopped', event.id, event.name, event.reason)]);\n    }\n\n    /**\n     * @hidden\n     */\n    onBroadcastStarted(): void {\n        this.ee.emitEvent('broadcastStarted', []);\n    }\n\n    /**\n     * @hidden\n     */\n    onBroadcastStopped(): void {\n        this.ee.emitEvent('broadcastStopped', []);\n    }\n\n    /**\n     * @hidden\n     */\n    onFilterEventDispatched(event: { connectionId: string; streamId: string; filterType: string; eventType: string; data: string }): void {\n        const connectionId: string = event.connectionId;\n        this.getConnection(connectionId, 'No connection found for connectionId ' + connectionId).then((connection) => {\n            logger.info(`Filter event of type \"${event.eventType}\" dispatched`);\n            const stream: Stream = connection.stream!;\n            if (!stream || !stream.filter) {\n                return logger.error(\n                    `Filter event of type \"${event.eventType}\" dispatched for stream ${stream.streamId} but there is no ${!stream ? 'stream' : 'filter'\n                    } defined`\n                );\n            }\n            const eventHandler = stream.filter.handlers.get(event.eventType);\n            if (!eventHandler || typeof eventHandler !== 'function') {\n                const actualHandlers: string[] = Array.from(stream.filter.handlers.keys());\n                return logger.error(\n                    `Filter event of type \"${event.eventType}\" not handled or not a function! Active filter events: ${actualHandlers.join(\n                        ','\n                    )}`\n                );\n            } else {\n                eventHandler.call(this, new FilterEvent(stream.filter, event.eventType, event.data));\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    onForciblyReconnectSubscriber(event: { connectionId: string; streamId: string; sdpOffer: string }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.getRemoteConnection(event.connectionId, 'onForciblyReconnectSubscriber')\n                .then((connection) => {\n                    if (!!connection.stream && connection.stream.streamId === event.streamId) {\n                        const stream = connection.stream;\n\n                        if (stream.setupReconnectionEventEmitter(resolve, reject)) {\n                            // Ongoing reconnection\n                            // Wait for the event emitter to be free (with success or error) and call the method again\n                            if (stream.reconnectionEventEmitter!['onForciblyReconnectSubscriberLastEvent'] != null) {\n                                // Two or more onForciblyReconnectSubscriber events were received while a reconnection process\n                                // of the subscriber was already taking place. Always use the last one to retry the re-subscription\n                                // process, as that SDP offer will be the only one available at the server side. Ignore previous ones\n                                stream.reconnectionEventEmitter!['onForciblyReconnectSubscriberLastEvent'] = event;\n                                return reject('Ongoing forced subscriber reconnection');\n                            } else {\n                                // One onForciblyReconnectSubscriber even has been received while a reconnection process\n                                // of the subscriber was already taking place. Set up a listener to wait for it to retry the\n                                // forced reconnection process\n                                stream.reconnectionEventEmitter!['onForciblyReconnectSubscriberLastEvent'] = event;\n                                const callback = () => {\n                                    const eventAux = stream.reconnectionEventEmitter!['onForciblyReconnectSubscriberLastEvent'];\n                                    delete stream.reconnectionEventEmitter!['onForciblyReconnectSubscriberLastEvent'];\n                                    this.onForciblyReconnectSubscriber(eventAux);\n                                };\n                                stream.reconnectionEventEmitter!.once('success', () => {\n                                    callback();\n                                });\n                                stream.reconnectionEventEmitter!.once('error', () => {\n                                    callback();\n                                });\n                            }\n                            return;\n                        }\n\n                        stream\n                            .completeWebRtcPeerReceive(true, true, event.sdpOffer)\n                            .then(() => stream.finalResolveForSubscription(true, resolve))\n                            .catch((error) =>\n                                stream.finalRejectForSubscription(\n                                    true,\n                                    `Error while forcibly reconnecting remote stream ${event.streamId}: ${error.toString()}`,\n                                    reject\n                                )\n                            );\n                    } else {\n                        const errMsg =\n                            \"No stream with streamId '\" +\n                            event.streamId +\n                            \"' found for connection '\" +\n                            event.connectionId +\n                            \"' on 'streamPropertyChanged' event\";\n                        logger.error(errMsg);\n                        return reject(errMsg);\n                    }\n                })\n                .catch((openViduError) => {\n                    logger.error(openViduError);\n                    return reject(openViduError);\n                });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    reconnectBrokenStreams(): void {\n        logger.info('Re-establishing media connections...');\n        let someReconnection = false;\n        // Re-establish Publisher stream\n        if (!!this.connection.stream && this.connection.stream.streamIceConnectionStateBroken()) {\n            logger.warn('Re-establishing Publisher ' + this.connection.stream.streamId);\n            this.connection.stream.initWebRtcPeerSend(true);\n            someReconnection = true;\n        }\n        // Re-establish Subscriber streams\n        this.remoteConnections.forEach((remoteConnection) => {\n            if (!!remoteConnection.stream && remoteConnection.stream.streamIceConnectionStateBroken()) {\n                logger.warn('Re-establishing Subscriber ' + remoteConnection.stream.streamId);\n                remoteConnection.stream.initWebRtcPeerReceive(true);\n                someReconnection = true;\n            }\n        });\n        if (!someReconnection) {\n            logger.info('There were no media streams in need of a reconnection');\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    async onSpeechToTextMessage(event: {\n        timestamp?: Date;\n        streamId: string;\n        connectionId: string;\n        sessionId: string;\n        text: string;\n        reason: string;\n        raw: string;\n        lang: string;\n    }): Promise<void> {\n        const connection = await this.getConnection(event.connectionId, 'No connection found for connectionId ' + event.connectionId);\n        const ev = new SpeechToTextEvent(this, connection, event.text, <any>(event.reason).toLowerCase(), event.raw, event.lang);\n        this.ee.emitEvent('speechToTextMessage', [ev]);\n    }\n\n    /**\n     * @hidden\n     */\n    async onSpeechToTextDisconnected(event: { message: string }): Promise<void> {\n        this.emitEvent('exception', [new ExceptionEvent(this, ExceptionEventName.SPEECH_TO_TEXT_DISCONNECTED, this, event.message)]);\n    }\n\n    /**\n     * @hidden\n     */\n    emitEvent(type: string, eventArray: any[]): void {\n        this.ee.emitEvent(type, eventArray);\n    }\n\n    /**\n     * @hidden\n     */\n    leave(forced: boolean, reason: ConnectionEventReason): void {\n        forced = !!forced;\n        logger.info('Leaving Session (forced=' + forced + ')');\n        this.stopVideoDataIntervals();\n\n        if (!!this.connection) {\n            if (!this.connection.disposed && !forced) {\n                this.openvidu.sendRequest('leaveRoom', (error, response) => {\n                    if (error) {\n                        logger.error(`leaveRoom error: ${JSON.stringify(error)}`);\n                    }\n                    this.openvidu.closeWs();\n                });\n            } else {\n                this.openvidu.closeWs();\n            }\n\n            this.stopPublisherStream(reason);\n\n            if (!this.connection.disposed) {\n                // Make Session object dispatch 'sessionDisconnected' event (if it is not already disposed)\n                const sessionDisconnectEvent = new SessionDisconnectedEvent(this, reason);\n                this.ee.emitEvent('sessionDisconnected', [sessionDisconnectEvent]);\n                sessionDisconnectEvent.callDefaultBehavior();\n            }\n        } else {\n            logger.warn('You were not connected to the session ' + this.sessionId);\n        }\n        logger.flush();\n    }\n\n    /**\n     * @hidden\n     */\n    initializeParams(token: string) {\n        const joinParams = {\n            token: !!token ? token : '',\n            session: this.sessionId,\n            platform: !!platform.getDescription() ? platform.getDescription() : 'unknown',\n            sdkVersion: this.openvidu.libraryVersion,\n            metadata: !!this.options.metadata ? this.options.metadata : '',\n            secret: this.openvidu.getSecret(),\n            recorder: this.openvidu.getRecorder(),\n            stt: this.openvidu.getStt()\n        };\n        return joinParams;\n    }\n\n    /**\n     * @hidden\n     */\n    sendVideoData(streamManager: StreamManager, intervalSeconds: number = 1, doInterval: boolean = false, maxLoops: number = 1) {\n        if (\n            platform.isChromeBrowser() ||\n            platform.isChromeMobileBrowser() ||\n            platform.isOperaBrowser() ||\n            platform.isOperaMobileBrowser() ||\n            platform.isEdgeBrowser() ||\n            platform.isEdgeMobileBrowser() ||\n            platform.isElectron() ||\n            (platform.isSafariBrowser() && !platform.isIonicIos()) ||\n            platform.isAndroidBrowser() ||\n            platform.isSamsungBrowser() ||\n            platform.isIonicAndroid() ||\n            platform.isIOSWithSafari()\n        ) {\n            const obtainAndSendVideo = async () => {\n                const pc = streamManager.stream.getRTCPeerConnection();\n                if (pc.connectionState === 'connected') {\n                    const statsMap = await pc.getStats();\n                    const arr: any[] = [];\n                    statsMap.forEach((stats) => {\n                        if ('frameWidth' in stats && 'frameHeight' in stats && arr.length === 0) {\n                            arr.push(stats);\n                        }\n                    });\n                    if (arr.length > 0) {\n                        this.openvidu.sendRequest(\n                            'videoData',\n                            {\n                                height: arr[0].frameHeight,\n                                width: arr[0].frameWidth,\n                                videoActive: streamManager.stream.videoActive != null ? streamManager.stream.videoActive : false,\n                                audioActive: streamManager.stream.audioActive != null ? streamManager.stream.audioActive : false\n                            },\n                            (error, response) => {\n                                if (error) {\n                                    logger.error(\"Error sending 'videoData' event\", error);\n                                }\n                            }\n                        );\n                    }\n                }\n            };\n            if (doInterval) {\n                let loops = 1;\n                this.videoDataInterval = setInterval(() => {\n                    if (loops < maxLoops) {\n                        loops++;\n                        obtainAndSendVideo();\n                    } else {\n                        clearInterval(this.videoDataInterval);\n                    }\n                }, intervalSeconds * 1000);\n            } else {\n                this.videoDataTimeout = setTimeout(obtainAndSendVideo, intervalSeconds * 1000);\n            }\n        } else if (platform.isFirefoxBrowser() || platform.isFirefoxMobileBrowser() || platform.isIonicIos() || platform.isReactNative()) {\n            // Basic version for Firefox and Ionic iOS. They do not support stats\n            this.openvidu.sendRequest(\n                'videoData',\n                {\n                    height: streamManager.stream.videoDimensions?.height || 0,\n                    width: streamManager.stream.videoDimensions?.width || 0,\n                    videoActive: streamManager.stream.videoActive != null ? streamManager.stream.videoActive : false,\n                    audioActive: streamManager.stream.audioActive != null ? streamManager.stream.audioActive : false\n                },\n                (error, response) => {\n                    if (error) {\n                        logger.error(\"Error sending 'videoData' event\", error);\n                    }\n                }\n            );\n        } else {\n            logger.error(\n                'Browser ' +\n                platform.getName() +\n                ' (version ' +\n                platform.getVersion() +\n                ') for ' +\n                platform.getFamily() +\n                ' is not supported in OpenVidu for Network Quality'\n            );\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    sessionConnected() {\n        return this.connection != null;\n    }\n\n    /**\n     * @hidden\n     */\n    notConnectedError(): OpenViduError {\n        return new OpenViduError(\n            OpenViduErrorName.OPENVIDU_NOT_CONNECTED,\n            \"There is no connection to the session. Method 'Session.connect' must be successfully completed first\"\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    anySpeechEventListenerEnabled(event: string, onlyOnce: boolean, streamManager?: StreamManager): boolean {\n        let handlersInSession = this.ee.getListeners(event);\n        if (onlyOnce) {\n            handlersInSession = handlersInSession.filter((h) => (h as any).once);\n        }\n        let listenersInSession = handlersInSession.length;\n        if (listenersInSession > 0) return true;\n        let listenersInStreamManager = 0;\n        if (!!streamManager) {\n            let handlersInStreamManager = streamManager.ee.getListeners(event);\n            if (onlyOnce) {\n                handlersInStreamManager = handlersInStreamManager.filter((h) => (h as any).once);\n            }\n            listenersInStreamManager = handlersInStreamManager.length;\n        }\n        return listenersInStreamManager > 0;\n    }\n\n    /**\n     * @hidden\n     */\n    getTokenParams(token: string) {\n        const match = token.match(/^(wss?)\\:\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n        if (!!match) {\n            const url = {\n                protocol: match[1],\n                host: match[2],\n                hostname: match[3],\n                port: match[4],\n                pathname: match[5],\n                search: match[6],\n                hash: match[7]\n            };\n\n            const params = token.split('?');\n            const queryParams = decodeURI(params[1])\n                .split('&')\n                .map((param) => param.split('='))\n                .reduce((values, [key, value]) => {\n                    values[key] = value;\n                    return values;\n                }, {});\n\n            return {\n                sessionId: queryParams['sessionId'],\n                secret: queryParams['secret'],\n                recorder: queryParams['recorder'],\n                stt: queryParams['stt'],\n                webrtcStatsInterval: queryParams['webrtcStatsInterval'],\n                sendBrowserLogs: queryParams['sendBrowserLogs'],\n                edition: queryParams['edition'],\n                wsUri: url.protocol + '://' + url.host + '/openvidu',\n                httpUri: 'https://' + url.host\n            };\n        } else {\n            throw new Error(`Token not valid: \"${token}\"`);\n        }\n    }\n\n    /* Private methods */\n\n    private connectAux(token: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.openvidu.startWs((error) => {\n                if (!!error) {\n                    return reject(error);\n                } else {\n                    const joinParams = this.initializeParams(token);\n\n                    this.openvidu.sendRequest('joinRoom', joinParams, (error, response: LocalConnectionOptions) => {\n                        if (!!error) {\n                            return reject(error);\n                        } else {\n                            // Process join room response\n                            this.processJoinRoomResponse(response, token);\n\n                            // Initialize local Connection object with values returned by openvidu-server\n                            this.connection = new Connection(this, response);\n\n                            // Initialize remote Connections with value returned by openvidu-server\n                            const events = {\n                                connections: new Array<Connection>(),\n                                streams: new Array<Stream>()\n                            };\n                            const existingParticipants: RemoteConnectionOptions[] = response.value;\n                            existingParticipants.forEach((remoteConnectionOptions: RemoteConnectionOptions) => {\n                                const connection = new Connection(this, remoteConnectionOptions);\n                                this.remoteConnections.set(connection.connectionId, connection);\n                                events.connections.push(connection);\n                                if (!!connection.stream) {\n                                    this.remoteStreamsCreated.set(connection.stream.streamId, true);\n                                    events.streams.push(connection.stream);\n                                }\n                            });\n\n                            // Own 'connectionCreated' event\n                            this.ee.emitEvent('connectionCreated', [\n                                new ConnectionEvent(false, this, 'connectionCreated', this.connection, '')\n                            ]);\n\n                            // One 'connectionCreated' event for each existing connection in the session\n                            events.connections.forEach((connection) => {\n                                this.ee.emitEvent('connectionCreated', [\n                                    new ConnectionEvent(false, this, 'connectionCreated', connection, '')\n                                ]);\n                            });\n\n                            // One 'streamCreated' event for each active stream in the session\n                            events.streams.forEach((stream) => {\n                                this.ee.emitEvent('streamCreated', [new StreamEvent(false, this, 'streamCreated', stream, '')]);\n                            });\n\n                            if (!!response.recordingId && !!response.recordingName) {\n                                this.ee.emitEvent('recordingStarted', [\n                                    new RecordingEvent(this, 'recordingStarted', response.recordingId, response.recordingName)\n                                ]);\n                            }\n\n                            return resolve();\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    private stopPublisherStream(reason: StreamEventReason) {\n        if (!!this.connection.stream) {\n            // Dispose Publisher's  local stream\n            this.connection.stream.disposeWebRtcPeer();\n            if (this.connection.stream.isLocalStreamPublished) {\n                // Make Publisher object dispatch 'streamDestroyed' event if the Stream was published\n                this.connection.stream.ee.emitEvent('local-stream-destroyed', [reason]);\n            }\n        }\n    }\n\n    private stopVideoDataIntervals(): void {\n        clearInterval(this.videoDataInterval);\n        clearTimeout(this.videoDataTimeout);\n    }\n\n    private stringClientMetadata(metadata: any): string {\n        if (typeof metadata !== 'string') {\n            return JSON.stringify(metadata);\n        } else {\n            return metadata;\n        }\n    }\n\n    protected getConnection(connectionId: string, errorMessage: string): Promise<Connection> {\n        return new Promise<Connection>((resolve, reject) => {\n            const connection = this.remoteConnections.get(connectionId);\n            if (!!connection) {\n                // Resolve remote connection\n                return resolve(connection);\n            } else {\n                if (this.connection.connectionId === connectionId) {\n                    // Resolve local connection\n                    return resolve(this.connection);\n                } else {\n                    // Connection not found. Reject with OpenViduError\n                    return reject(new OpenViduError(OpenViduErrorName.GENERIC_ERROR, errorMessage));\n                }\n            }\n        });\n    }\n\n    private getRemoteConnection(connectionId: string, operation: string): Promise<Connection> {\n        return new Promise<Connection>((resolve, reject) => {\n            const connection = this.remoteConnections.get(connectionId);\n            if (!!connection) {\n                // Resolve remote connection\n                return resolve(connection);\n            } else {\n                // Remote connection not found. Reject with OpenViduError\n                const errorMessage =\n                    'Remote connection ' +\n                    connectionId +\n                    \" unknown when '\" +\n                    operation +\n                    \"'. \" +\n                    'Existing remote connections: ' +\n                    JSON.stringify(this.remoteConnections.keys());\n                return reject(new OpenViduError(OpenViduErrorName.GENERIC_ERROR, errorMessage));\n            }\n        });\n    }\n\n    private processToken(token: string): void {\n        const tokenParams = this.getTokenParams(token);\n        this.sessionId = tokenParams.sessionId;\n\n        if (!!tokenParams.secret) {\n            this.openvidu.secret = tokenParams.secret;\n        }\n        if (!!tokenParams.recorder) {\n            this.openvidu.recorder = true;\n        }\n        if (!!tokenParams.stt) {\n            this.openvidu.stt = true;\n        }\n        if (!!tokenParams.webrtcStatsInterval) {\n            this.openvidu.webrtcStatsInterval = tokenParams.webrtcStatsInterval;\n        }\n        if (!!tokenParams.sendBrowserLogs) {\n            this.openvidu.sendBrowserLogs = tokenParams.sendBrowserLogs;\n        }\n        this.openvidu.isAtLeastPro = tokenParams.edition === 'pro' || tokenParams.edition === 'enterprise';\n        this.openvidu.isEnterprise = tokenParams.edition === 'enterprise';\n\n        this.openvidu.wsUri = tokenParams.wsUri;\n        this.openvidu.httpUri = tokenParams.httpUri;\n    }\n\n    private processJoinRoomResponse(opts: LocalConnectionOptions, token: string) {\n        this.sessionId = opts.session;\n        if (opts.customIceServers != null && opts.customIceServers.length > 0) {\n            this.openvidu.iceServers = [];\n            for (const iceServer of opts.customIceServers) {\n                let rtcIceServer: RTCIceServer = {\n                    urls: [iceServer.url]\n                };\n                logger.log('STUN/TURN server IP: ' + iceServer.url);\n                if (iceServer.username != null && iceServer.credential != null) {\n                    rtcIceServer.username = iceServer.username;\n                    rtcIceServer.credential = iceServer.credential;\n                    logger.log('TURN credentials [' + iceServer.username + ':' + iceServer.credential + ']');\n                }\n                this.openvidu.iceServers.push(rtcIceServer);\n            }\n        }\n        this.openvidu.role = opts.role;\n        this.openvidu.finalUserId = opts.finalUserId;\n        this.openvidu.mediaServer = opts.mediaServer;\n        this.openvidu.videoSimulcast = opts.videoSimulcast;\n        this.capabilities = {\n            subscribe: true,\n            publish: this.openvidu.role !== 'SUBSCRIBER',\n            forceUnpublish: this.openvidu.role === 'MODERATOR',\n            forceDisconnect: this.openvidu.role === 'MODERATOR'\n        };\n        logger.info('openvidu-server version: ' + opts.version);\n        if (opts.life != null) {\n            this.openvidu.life = opts.life;\n        }\n        const minorDifference: number = semverMinor(opts.version) - semverMinor(this.openvidu.libraryVersion);\n        if (semverMajor(opts.version) !== semverMajor(this.openvidu.libraryVersion) || !(minorDifference == 0 || minorDifference == 1)) {\n            logger.error(\n                `openvidu-browser (${this.openvidu.libraryVersion}) and openvidu-server (${opts.version}) versions are incompatible. ` +\n                'Errors are likely to occur. openvidu-browser SDK is only compatible with the same version or the immediately following minor version of an OpenVidu deployment'\n            );\n        } else if (minorDifference == 1) {\n            logger.warn(\n                `openvidu-browser version ${this.openvidu.libraryVersion} does not match openvidu-server version ${opts.version}. ` +\n                `These versions are still compatible with each other, but openvidu-browser version must be updated as soon as possible to ${semverMajor(\n                    opts.version\n                )}.${semverMinor(opts.version)}.x. ` +\n                `This client using openvidu-browser ${this.openvidu.libraryVersion} will become incompatible with the next release of openvidu-server`\n            );\n        }\n\n        // Configure JSNLogs\n        OpenViduLogger.configureJSNLog(this.openvidu, token);\n\n        // Store token\n        this.token = token;\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from './Connection';\nimport { Filter } from './Filter';\nimport { Publisher } from './Publisher';\nimport { Session } from './Session';\nimport { StreamManager } from './StreamManager';\nimport { Subscriber } from './Subscriber';\nimport { InboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/InboundStreamOptions';\nimport { OutboundStreamOptions } from '../OpenViduInternal/Interfaces/Private/OutboundStreamOptions';\nimport {\n    WebRtcPeer,\n    WebRtcPeerSendonly,\n    WebRtcPeerRecvonly,\n    WebRtcPeerSendrecv,\n    WebRtcPeerConfiguration\n} from '../OpenViduInternal/WebRtcPeer/WebRtcPeer';\nimport { WebRtcStats } from '../OpenViduInternal/WebRtcStats/WebRtcStats';\nimport { ExceptionEvent, ExceptionEventName } from '../OpenViduInternal/Events/ExceptionEvent';\nimport { PublisherSpeakingEvent } from '../OpenViduInternal/Events/PublisherSpeakingEvent';\nimport { StreamManagerEvent } from '../OpenViduInternal/Events/StreamManagerEvent';\nimport { StreamPropertyChangedEvent } from '../OpenViduInternal/Events/StreamPropertyChangedEvent';\nimport { OpenViduError, OpenViduErrorName } from '../OpenViduInternal/Enums/OpenViduError';\nimport { TypeOfVideo } from '../OpenViduInternal/Enums/TypeOfVideo';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * @hidden\n */\nimport hark = require('hark');\n/**\n * @hidden\n */\nimport EventEmitter = require('wolfy87-eventemitter');\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Represents each one of the media streams available in OpenVidu Server for certain session.\n * Each {@link Publisher} and {@link Subscriber} has an attribute of type Stream, as they give access\n * to one of them (sending and receiving it, respectively)\n */\nexport class Stream {\n    /**\n     * The Connection object that is publishing the stream\n     */\n    connection: Connection;\n\n    /**\n     * Frame rate of the video in frames per second. This property is only defined if the {@link Publisher} of\n     * the stream was initialized passing a _frameRate_ property on {@link OpenVidu.initPublisher} method\n     */\n    frameRate?: number;\n\n    /**\n     * Whether the stream has a video track or not\n     */\n    hasVideo: boolean;\n\n    /**\n     * Whether the stream has an audio track or not\n     */\n    hasAudio: boolean;\n\n    /**\n     * Whether the stream has the video track muted or unmuted. If {@link hasVideo} is false, this property is undefined.\n     *\n     * This property may change if the Publisher publishing the stream calls {@link Publisher.publishVideo}. Whenever this happens a {@link StreamPropertyChangedEvent} will be dispatched\n     * by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    videoActive: boolean;\n\n    /**\n     * Whether the stream has the audio track muted or unmuted. If {@link hasAudio} is false, this property is undefined\n     *\n     * This property may change if the Publisher publishing the stream calls {@link Publisher.publishAudio}. Whenever this happens a {@link StreamPropertyChangedEvent} will be dispatched\n     * by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    audioActive: boolean;\n\n    /**\n     * Unique identifier of the stream. If the stream belongs to a...\n     * - Subscriber object: property `streamId` is always defined\n     * - Publisher object: property `streamId` is only defined after successful execution of {@link Session.publish}\n     */\n    streamId: string;\n\n    /**\n     * Time when this stream was created in OpenVidu Server (UTC milliseconds). Depending on the owner of this stream:\n     * - Subscriber object: property `creationTime` is always defined\n     * - Publisher object: property `creationTime` is only defined after successful execution of {@link Session.publish}\n     */\n    creationTime: number;\n\n    /**\n     * Can be:\n     * - `\"CAMERA\"`: when the video source comes from a webcam.\n     * - `\"SCREEN\"`: when the video source comes from screen-sharing.\n     * - `\"CUSTOM\"`: when {@link PublisherProperties.videoSource} has been initialized in the Publisher side with a custom MediaStreamTrack when calling {@link OpenVidu.initPublisher}).\n     * - `\"IPCAM\"`: when the video source comes from an IP camera participant instead of a regular participant (see [IP cameras](/en/stable/advanced-features/ip-cameras/)).\n     *\n     * If {@link hasVideo} is false, this property is undefined\n     */\n    typeOfVideo?: keyof typeof TypeOfVideo; // TODO: Change this type to enum TypeOfVideo on the next breaking-change release\n\n    /**\n     * StreamManager object ({@link Publisher} or {@link Subscriber}) in charge of displaying this stream in the DOM\n     */\n    streamManager: StreamManager;\n\n    /**\n     * Width and height in pixels of the encoded video stream. If {@link hasVideo} is false, this property is undefined\n     *\n     * This property may change if the Publisher that is publishing:\n     * - If it is a mobile device, whenever the user rotates the device.\n     * - If it is screen-sharing, whenever the user changes the size of the captured window.\n     *\n     * Whenever this happens a {@link StreamPropertyChangedEvent} will be dispatched by the Session object as well as by the affected Subscriber/Publisher object\n     */\n    videoDimensions: { width: number; height: number };\n\n    /**\n     * **WARNING**: experimental option. This interface may change in the near future\n     *\n     * Filter applied to the Stream. You can apply filters by calling {@link Stream.applyFilter}, execute methods of the applied filter with\n     * {@link Filter.execMethod} and remove it with {@link Stream.removeFilter}. Be aware that the client calling this methods must have the\n     * necessary permissions: the token owned by the client must have been initialized with the appropriated `allowedFilters` array.\n     */\n    filter?: Filter;\n\n    protected webRtcPeer: WebRtcPeer;\n    protected mediaStream?: MediaStream;\n    private webRtcStats: WebRtcStats;\n\n    private isSubscribeToRemote = false;\n\n    private virtualBackgroundSourceElements?: { videoClone: HTMLVideoElement; mediaStreamClone: MediaStream };\n    /**\n     * @hidden\n     */\n    virtualBackgroundSinkElements?: { VB: any; video: HTMLVideoElement };\n\n    /**\n     * @hidden\n     */\n    isLocalStreamReadyToPublish = false;\n    /**\n     * @hidden\n     */\n    isLocalStreamPublished = false;\n    /**\n     * @hidden\n     */\n    publishedOnce = false;\n    /**\n     * @hidden\n     */\n    session: Session;\n    /**\n     * @hidden\n     */\n    inboundStreamOpts: InboundStreamOptions;\n    /**\n     * @hidden\n     */\n    outboundStreamOpts: OutboundStreamOptions;\n    /**\n     * @hidden\n     */\n    speechEvent: any;\n    /**\n     * @hidden\n     */\n    harkSpeakingEnabled = false;\n    /**\n     * @hidden\n     */\n    harkSpeakingEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    harkStoppedSpeakingEnabled = false;\n    /**\n     * @hidden\n     */\n    harkStoppedSpeakingEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    harkVolumeChangeEnabled = false;\n    /**\n     * @hidden\n     */\n    harkVolumeChangeEnabledOnce = false;\n    /**\n     * @hidden\n     */\n    harkOptions;\n    /**\n     * @hidden\n     */\n    localMediaStreamWhenSubscribedToRemote?: MediaStream;\n    /**\n     * @hidden\n     */\n    ee = new EventEmitter();\n    /**\n     * @hidden\n     */\n    reconnectionEventEmitter: EventEmitter | undefined;\n    /**\n     * @hidden\n     */\n    lastVideoTrackConstraints: MediaTrackConstraints | boolean | undefined;\n    /**\n     * @hidden\n     */\n    lastVBFilter?: Filter;\n\n    /**\n     * @hidden\n     */\n    constructor(session: Session, options: InboundStreamOptions | OutboundStreamOptions | {}) {\n        platform = PlatformUtils.getInstance();\n        this.session = session;\n\n        if (options.hasOwnProperty('id')) {\n            // InboundStreamOptions: stream belongs to a Subscriber\n            this.inboundStreamOpts = <InboundStreamOptions>options;\n            this.streamId = this.inboundStreamOpts.id;\n            this.creationTime = this.inboundStreamOpts.createdAt;\n            this.hasAudio = this.inboundStreamOpts.hasAudio;\n            this.hasVideo = this.inboundStreamOpts.hasVideo;\n            if (this.hasAudio) {\n                this.audioActive = this.inboundStreamOpts.audioActive;\n            }\n            if (this.hasVideo) {\n                this.videoActive = this.inboundStreamOpts.videoActive;\n                this.typeOfVideo = !this.inboundStreamOpts.typeOfVideo ? undefined : this.inboundStreamOpts.typeOfVideo;\n                this.frameRate = this.inboundStreamOpts.frameRate === -1 ? undefined : this.inboundStreamOpts.frameRate;\n                this.videoDimensions = this.inboundStreamOpts.videoDimensions;\n            }\n            if (!!this.inboundStreamOpts.filter && Object.keys(this.inboundStreamOpts.filter).length > 0) {\n                if (\n                    !!this.inboundStreamOpts.filter.lastExecMethod &&\n                    Object.keys(this.inboundStreamOpts.filter.lastExecMethod).length === 0\n                ) {\n                    delete this.inboundStreamOpts.filter.lastExecMethod;\n                }\n                this.filter = this.inboundStreamOpts.filter;\n            }\n        } else {\n            // OutboundStreamOptions: stream belongs to a Publisher\n            this.outboundStreamOpts = <OutboundStreamOptions>options;\n\n            this.hasAudio = this.isSendAudio();\n            this.hasVideo = this.isSendVideo();\n\n            if (this.hasAudio) {\n                this.audioActive = !!this.outboundStreamOpts.publisherProperties.publishAudio;\n            }\n            if (this.hasVideo) {\n                this.videoActive = !!this.outboundStreamOpts.publisherProperties.publishVideo;\n                this.frameRate = this.outboundStreamOpts.publisherProperties.frameRate;\n                if (\n                    typeof MediaStreamTrack !== 'undefined' &&\n                    this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack\n                ) {\n                    this.typeOfVideo = TypeOfVideo.CUSTOM;\n                } else {\n                    this.typeOfVideo = this.isSendScreen() ? TypeOfVideo.SCREEN : TypeOfVideo.CAMERA;\n                }\n            }\n            if (!!this.outboundStreamOpts.publisherProperties.filter) {\n                this.filter = this.outboundStreamOpts.publisherProperties.filter;\n            }\n        }\n\n        this.ee.on('mediastream-updated', () => {\n            this.streamManager.updateMediaStream(this.mediaStream!);\n            logger.debug('Video srcObject [' + this.mediaStream?.id + '] updated in stream [' + this.streamId + ']');\n        });\n    }\n\n    /**\n     * Recreates the media connection with the server. This entails the disposal of the previous RTCPeerConnection and the re-negotiation\n     * of a new one, that will apply the same properties.\n     *\n     * This method can be useful in those situations were there the media connection breaks and OpenVidu is not able to recover on its own\n     * for any kind of unanticipated reason (see [Automatic reconnection](/en/stable/advanced-features/automatic-reconnection/)).\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the reconnection operation was successful and rejected with an Error object if not\n     */\n    public reconnect(): Promise<void> {\n        return this.reconnectStream('API');\n    }\n\n    /**\n     * Applies an audio/video filter to the stream.\n     *\n     * @param type Type of filter applied. See {@link Filter.type}\n     * @param options Parameters used to initialize the filter. See {@link Filter.options}\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved to the applied filter if success and rejected with an Error object if not\n     */\n    applyFilter(type: string, options: Object): Promise<Filter> {\n        return new Promise(async (resolve, reject) => {\n            if (!!this.filter) {\n                return reject(\n                    new OpenViduError(OpenViduErrorName.GENERIC_ERROR, 'There is already a filter applied to Stream ' + this.streamId)\n                );\n            }\n\n            const resolveApplyFilter = (error, triggerEvent) => {\n                if (error) {\n                    logger.error('Error applying filter for Stream ' + this.streamId, error);\n                    if (error.code === 401) {\n                        return reject(\n                            new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to apply a filter\")\n                        );\n                    } else {\n                        return reject(error);\n                    }\n                } else {\n                    logger.info('Filter successfully applied on Stream ' + this.streamId);\n                    const oldValue: Filter = this.filter!;\n                    this.filter = new Filter(type, options);\n                    this.filter.stream = this;\n                    if (triggerEvent) {\n                        this.session.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(this.session, this, 'filter', this.filter, oldValue, 'applyFilter')\n                        ]);\n                        this.streamManager.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(this.streamManager, this, 'filter', this.filter, oldValue, 'applyFilter')\n                        ]);\n                    }\n                    return resolve(this.filter);\n                }\n            };\n\n            if (type.startsWith('VB:')) {\n                // Client filters\n\n                if (!this.hasVideo) {\n                    return reject(\n                        new OpenViduError(\n                            OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR,\n                            'The Virtual Background filter requires a video track to be applied'\n                        )\n                    );\n                }\n                if (!this.mediaStream || this.streamManager.videos.length === 0) {\n                    return reject(\n                        new OpenViduError(\n                            OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR,\n                            'The StreamManager requires some video element to be attached to it in order to apply a Virtual Background filter'\n                        )\n                    );\n                }\n\n                let openviduToken: string;\n                if (!!this.session.token) {\n                    openviduToken = this.session.token;\n                } else {\n                    openviduToken = options['token'];\n                }\n                if (!openviduToken) {\n                    return reject(\n                        new OpenViduError(\n                            OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR,\n                            'Virtual Background requires the client to be connected to a Session or to have a \"token\" property available in \"options\" parameter with a valid OpenVidu token'\n                        )\n                    );\n                }\n\n                const tokenParams = this.session.getTokenParams(openviduToken);\n                if (tokenParams.edition !== 'pro' && tokenParams.edition !== 'enterprise') {\n                    return reject(\n                        new OpenViduError(\n                            OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR,\n                            'OpenVidu Virtual Background API is available from OpenVidu Pro edition onwards'\n                        )\n                    );\n                }\n\n                openviduToken = encodeURIComponent(btoa(openviduToken));\n\n                logger.info('Applying Virtual Background to stream ' + this.streamId);\n\n                const afterScriptLoaded = async () => {\n                    try {\n                        const id = this.streamId + '_' + uuidv4();\n                        const mediaStreamClone = this.mediaStream!.clone();\n                        const videoClone = this.streamManager.videos[0].video.cloneNode(false) as HTMLVideoElement;\n                        // @ts-ignore\n                        videoClone.id = VirtualBackground.VirtualBackground.SOURCE_VIDEO_PREFIX + id;\n                        videoClone.srcObject = mediaStreamClone;\n                        videoClone.muted = true;\n                        this.virtualBackgroundSourceElements = { videoClone, mediaStreamClone };\n\n                        // @ts-ignore\n                        VirtualBackground.VirtualBackground.hideHtmlElement(videoClone, false);\n                        // @ts-ignore\n                        VirtualBackground.VirtualBackground.appendHtmlElementToHiddenContainer(videoClone, id);\n\n                        await videoClone.play();\n\n                        // @ts-ignore\n                        const VB = new VirtualBackground.VirtualBackground({\n                            id,\n                            openviduServerUrl: new URL(tokenParams.httpUri),\n                            openviduToken,\n                            inputVideo: videoClone,\n                            inputResolution: '160x96',\n                            outputFramerate: 24\n                        });\n\n                        let filteredVideo: HTMLVideoElement;\n                        switch (type) {\n                            case 'VB:blur': {\n                                filteredVideo = await VB.backgroundBlur(options);\n                                break;\n                            }\n                            case 'VB:image': {\n                                filteredVideo = await VB.backgroundImage(options);\n                                break;\n                            }\n                            default:\n                                throw new Error('Unknown Virtual Background filter: ' + type);\n                        }\n\n                        this.virtualBackgroundSinkElements = { VB, video: filteredVideo };\n\n                        videoClone.style.display = 'none';\n\n                        if (this.streamManager.remote) {\n                            this.streamManager.replaceTrackInMediaStream(\n                                (this.virtualBackgroundSinkElements.video.srcObject as MediaStream).getVideoTracks()[0],\n                                false\n                            );\n                        } else {\n                            (this.streamManager as Publisher).replaceTrackAux(\n                                (this.virtualBackgroundSinkElements.video.srcObject as MediaStream).getVideoTracks()[0],\n                                false\n                            );\n                        }\n\n                        resolveApplyFilter(undefined, false);\n                    } catch (error) {\n                        if (error.name === OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR) {\n                            resolveApplyFilter(new OpenViduError(OpenViduErrorName.VIRTUAL_BACKGROUND_ERROR, error.message), false);\n                        } else {\n                            resolveApplyFilter(error, false);\n                        }\n                    }\n                };\n\n                // @ts-ignore\n                if (typeof VirtualBackground === 'undefined') {\n                    let script: HTMLScriptElement = document.createElement('script');\n                    script.type = 'text/javascript';\n                    script.src = tokenParams.httpUri + '/openvidu/virtual-background/openvidu-virtual-background.js?token=' + openviduToken;\n                    script.onload = async () => {\n                        try {\n                            await afterScriptLoaded();\n                            resolve(new Filter(type, options));\n                        } catch (error) {\n                            reject(error);\n                        }\n                    };\n                    document.body.appendChild(script);\n                } else {\n                    afterScriptLoaded()\n                        .then(() => resolve(new Filter(type, options)))\n                        .catch((error) => reject(error));\n                }\n            } else {\n                // Server filters\n\n                if (!this.session.sessionConnected()) {\n                    return reject(this.session.notConnectedError());\n                }\n\n                logger.info('Applying server filter to stream ' + this.streamId);\n                options = options != null ? options : {};\n                let optionsString = options;\n                if (typeof optionsString !== 'string') {\n                    optionsString = JSON.stringify(optionsString);\n                }\n                this.session.openvidu.sendRequest(\n                    'applyFilter',\n                    { streamId: this.streamId, type, options: optionsString },\n                    (error, response) => {\n                        resolveApplyFilter(error, true);\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * Removes an audio/video filter previously applied.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the previously applied filter has been successfully removed and rejected with an Error object in other case\n     */\n    async removeFilter(): Promise<void> {\n        return await this.removeFilterAux(false);\n    }\n\n    /**\n     * Returns the internal RTCPeerConnection object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection)\n     *\n     * @returns Native RTCPeerConnection Web API object\n     */\n    getRTCPeerConnection(): RTCPeerConnection {\n        return this.webRtcPeer.pc;\n    }\n\n    /**\n     * Returns the internal MediaStream object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n     *\n     * @returns Native MediaStream Web API object\n     */\n    getMediaStream(): MediaStream {\n        return this.mediaStream!;\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    removeFilterAux(isDisposing: boolean): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            const resolveRemoveFilter = (error, triggerEvent) => {\n                if (error) {\n                    delete this.filter;\n                    logger.error('Error removing filter for Stream ' + this.streamId, error);\n                    if (error.code === 401) {\n                        return reject(\n                            new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to remove a filter\")\n                        );\n                    } else {\n                        return reject(error);\n                    }\n                } else {\n                    logger.info('Filter successfully removed from Stream ' + this.streamId);\n                    const oldValue = this.filter!;\n                    delete this.filter;\n                    if (triggerEvent) {\n                        this.session.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(this.session, this, 'filter', this.filter!, oldValue, 'applyFilter')\n                        ]);\n                        this.streamManager.emitEvent('streamPropertyChanged', [\n                            new StreamPropertyChangedEvent(this.streamManager, this, 'filter', this.filter!, oldValue, 'applyFilter')\n                        ]);\n                    }\n                    return resolve();\n                }\n            };\n\n            if (!!this.filter) {\n                // There is a filter applied\n\n                if (this.filter?.type.startsWith('VB:')) {\n                    // Client filters\n\n                    try {\n                        const mediaStreamClone = this.virtualBackgroundSourceElements!.mediaStreamClone;\n                        if (!isDisposing) {\n                            if (this.streamManager.remote) {\n                                this.streamManager.replaceTrackInMediaStream(mediaStreamClone.getVideoTracks()[0], false);\n                            } else {\n                                await (this.streamManager as Publisher).replaceTrackAux(mediaStreamClone.getVideoTracks()[0], false);\n                            }\n                        } else {\n                            mediaStreamClone.getTracks().forEach((track) => track.stop());\n                        }\n\n                        this.virtualBackgroundSinkElements!.VB.cleanUp();\n\n                        delete this.virtualBackgroundSinkElements;\n                        delete this.virtualBackgroundSourceElements;\n\n                        return resolveRemoveFilter(undefined, false);\n                    } catch (error) {\n                        return resolveRemoveFilter(error, false);\n                    }\n                } else {\n                    // Server filters\n\n                    if (!this.session.sessionConnected()) {\n                        return reject(this.session.notConnectedError());\n                    }\n\n                    logger.info('Removing filter of stream ' + this.streamId);\n                    this.session.openvidu.sendRequest('removeFilter', { streamId: this.streamId }, (error, response) => {\n                        return resolveRemoveFilter(error, true);\n                    });\n                }\n            } else {\n                // There is no filter applied\n                return reject(new OpenViduError(OpenViduErrorName.GENERIC_ERROR, 'Stream ' + this.streamId + ' has no filter applied'));\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    setMediaStream(mediaStream: MediaStream): void {\n        this.mediaStream = mediaStream;\n    }\n\n    /**\n     * @hidden\n     */\n    updateMediaStreamInVideos() {\n        this.ee.emitEvent('mediastream-updated', []);\n    }\n\n    /**\n     * @hidden\n     */\n    getWebRtcPeer(): WebRtcPeer {\n        return this.webRtcPeer;\n    }\n\n    /**\n     * @hidden\n     */\n    subscribeToMyRemote(value: boolean): void {\n        this.isSubscribeToRemote = value;\n    }\n\n    /**\n     * @hidden\n     */\n    setOutboundStreamOptions(outboundStreamOpts: OutboundStreamOptions): void {\n        this.outboundStreamOpts = outboundStreamOpts;\n    }\n\n    /**\n     * @hidden\n     */\n    subscribe(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.initWebRtcPeerReceive(false)\n                .then(() => resolve())\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    publish(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (this.isLocalStreamReadyToPublish) {\n                this.initWebRtcPeerSend(false)\n                    .then(() => resolve())\n                    .catch((error) => reject(error));\n            } else {\n                this.ee.once('stream-ready-to-publish', () => {\n                    this.publish()\n                        .then(() => resolve())\n                        .catch((error) => reject(error));\n                });\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    disposeWebRtcPeer(): void {\n        let webrtcId;\n        if (!!this.webRtcPeer) {\n            this.webRtcPeer.dispose();\n            webrtcId = this.webRtcPeer.getId();\n        }\n        this.stopWebRtcStats();\n        logger.info(\n            (!!this.outboundStreamOpts ? 'Outbound ' : 'Inbound ') +\n            'RTCPeerConnection with id [' +\n            webrtcId +\n            \"] from 'Stream' with id [\" +\n            this.streamId +\n            '] is now closed'\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    async disposeMediaStream(): Promise<void> {\n        if (!!this.filter && this.filter.type.startsWith('VB:')) {\n            try {\n                await this.removeFilterAux(true);\n                console.debug(`Success removing Virtual Background filter for stream ${this.streamId}`);\n            } catch (error) {\n                console.error(`Error removing Virtual Background filter for stream ${this.streamId}`, error);\n            }\n        }\n        if (this.mediaStream) {\n            this.mediaStream.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this.mediaStream.getVideoTracks().forEach((track) => {\n                track.stop();\n            });\n            delete this.mediaStream;\n        }\n        // If subscribeToRemote local MediaStream must be stopped\n        if (this.localMediaStreamWhenSubscribedToRemote) {\n            this.localMediaStreamWhenSubscribedToRemote.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this.localMediaStreamWhenSubscribedToRemote.getVideoTracks().forEach((track) => {\n                track.stop();\n            });\n            delete this.localMediaStreamWhenSubscribedToRemote;\n        }\n        if (!!this.speechEvent) {\n            if (!!this.speechEvent.stop) {\n                this.speechEvent.stop();\n            }\n            delete this.speechEvent;\n        }\n        logger.info(\n            (!!this.outboundStreamOpts ? 'Local ' : 'Remote ') + \"MediaStream from 'Stream' with id [\" + this.streamId + '] is now disposed'\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    displayMyRemote(): boolean {\n        return this.isSubscribeToRemote;\n    }\n\n    /**\n     * @hidden\n     */\n    isSendAudio(): boolean {\n        return (\n            !!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== null &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== false\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    isSendVideo(): boolean {\n        return (\n            !!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== null &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== false\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    isSendScreen(): boolean {\n        let screen = false\n        if (typeof MediaStreamTrack !== 'undefined' &&\n            this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) {\n            let trackSettings: any = this.outboundStreamOpts.publisherProperties.videoSource.getSettings();\n            if (trackSettings.displaySurface) {\n                screen = [\"monitor\", \"window\", \"browser\"].includes(trackSettings.displaySurface);\n            }\n        }\n        if (!screen && platform.isElectron()) {\n            screen =\n                typeof this.outboundStreamOpts.publisherProperties.videoSource === 'string' &&\n                this.outboundStreamOpts.publisherProperties.videoSource.startsWith('screen:');\n        }\n        if (!screen) {\n            screen = this.outboundStreamOpts.publisherProperties.videoSource === 'screen';\n        }\n        return !!this.outboundStreamOpts && screen;\n    }\n\n    /**\n     * @hidden\n     */\n    enableHarkSpeakingEvent(): void {\n        this.setHarkListenerIfNotExists();\n        if (!this.harkSpeakingEnabled && !!this.speechEvent) {\n            this.harkSpeakingEnabled = true;\n            this.speechEvent.on('speaking', () => {\n                this.session.emitEvent('publisherStartSpeaking', [\n                    new PublisherSpeakingEvent(this.session, 'publisherStartSpeaking', this.connection, this.streamId)\n                ]);\n                this.streamManager.emitEvent('publisherStartSpeaking', [\n                    new PublisherSpeakingEvent(this.streamManager, 'publisherStartSpeaking', this.connection, this.streamId)\n                ]);\n                this.harkSpeakingEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceHarkSpeakingEvent(): void {\n        this.setHarkListenerIfNotExists();\n        if (!this.harkSpeakingEnabledOnce && !!this.speechEvent) {\n            this.harkSpeakingEnabledOnce = true;\n            this.speechEvent.once('speaking', () => {\n                if (this.harkSpeakingEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    this.session.emitEvent('publisherStartSpeaking', [\n                        new PublisherSpeakingEvent(this.session, 'publisherStartSpeaking', this.connection, this.streamId)\n                    ]);\n                    this.streamManager.emitEvent('publisherStartSpeaking', [\n                        new PublisherSpeakingEvent(this.streamManager, 'publisherStartSpeaking', this.connection, this.streamId)\n                    ]);\n                }\n                this.disableHarkSpeakingEvent(true);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    disableHarkSpeakingEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.harkSpeakingEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.harkSpeakingEnabled) {\n                    // The 'on' version of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.harkSpeakingEnabled = false;\n            }\n            // Shutting down the hark event\n            if (\n                this.harkVolumeChangeEnabled ||\n                this.harkVolumeChangeEnabledOnce ||\n                this.harkStoppedSpeakingEnabled ||\n                this.harkStoppedSpeakingEnabledOnce\n            ) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('speaking');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableHarkStoppedSpeakingEvent(): void {\n        this.setHarkListenerIfNotExists();\n        if (!this.harkStoppedSpeakingEnabled && !!this.speechEvent) {\n            this.harkStoppedSpeakingEnabled = true;\n            this.speechEvent.on('stopped_speaking', () => {\n                this.session.emitEvent('publisherStopSpeaking', [\n                    new PublisherSpeakingEvent(this.session, 'publisherStopSpeaking', this.connection, this.streamId)\n                ]);\n                this.streamManager.emitEvent('publisherStopSpeaking', [\n                    new PublisherSpeakingEvent(this.streamManager, 'publisherStopSpeaking', this.connection, this.streamId)\n                ]);\n                this.harkStoppedSpeakingEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceHarkStoppedSpeakingEvent(): void {\n        this.setHarkListenerIfNotExists();\n        if (!this.harkStoppedSpeakingEnabledOnce && !!this.speechEvent) {\n            this.harkStoppedSpeakingEnabledOnce = true;\n            this.speechEvent.once('stopped_speaking', () => {\n                if (this.harkStoppedSpeakingEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    this.session.emitEvent('publisherStopSpeaking', [\n                        new PublisherSpeakingEvent(this.session, 'publisherStopSpeaking', this.connection, this.streamId)\n                    ]);\n                    this.streamManager.emitEvent('publisherStopSpeaking', [\n                        new PublisherSpeakingEvent(this.streamManager, 'publisherStopSpeaking', this.connection, this.streamId)\n                    ]);\n                }\n                this.disableHarkStoppedSpeakingEvent(true);\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    disableHarkStoppedSpeakingEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.harkStoppedSpeakingEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.harkStoppedSpeakingEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.harkStoppedSpeakingEnabled = false;\n            }\n            // Shutting down the hark event\n            if (\n                this.harkVolumeChangeEnabled ||\n                this.harkVolumeChangeEnabledOnce ||\n                this.harkSpeakingEnabled ||\n                this.harkSpeakingEnabledOnce\n            ) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('stopped_speaking');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableHarkVolumeChangeEvent(force: boolean): void {\n        if (this.setHarkListenerIfNotExists()) {\n            if (!this.harkVolumeChangeEnabled || force) {\n                this.harkVolumeChangeEnabled = true;\n                this.speechEvent.on('volume_change', (harkEvent) => {\n                    const oldValue = this.speechEvent.oldVolumeValue;\n                    const value = { newValue: harkEvent, oldValue };\n                    this.speechEvent.oldVolumeValue = harkEvent;\n                    this.streamManager.emitEvent('streamAudioVolumeChange', [\n                        new StreamManagerEvent(this.streamManager, 'streamAudioVolumeChange', value)\n                    ]);\n                });\n            }\n        } else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.harkVolumeChangeEnabled = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    enableOnceHarkVolumeChangeEvent(force: boolean): void {\n        if (this.setHarkListenerIfNotExists()) {\n            if (!this.harkVolumeChangeEnabledOnce || force) {\n                this.harkVolumeChangeEnabledOnce = true;\n                this.speechEvent.once('volume_change', (harkEvent) => {\n                    const oldValue = this.speechEvent.oldVolumeValue;\n                    const value = { newValue: harkEvent, oldValue };\n                    this.speechEvent.oldVolumeValue = harkEvent;\n                    this.disableHarkVolumeChangeEvent(true);\n                    this.streamManager.emitEvent('streamAudioVolumeChange', [\n                        new StreamManagerEvent(this.streamManager, 'streamAudioVolumeChange', value)\n                    ]);\n                });\n            }\n        } else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.harkVolumeChangeEnabledOnce = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    disableHarkVolumeChangeEvent(disabledByOnce: boolean): void {\n        if (!!this.speechEvent) {\n            this.harkVolumeChangeEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.harkVolumeChangeEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            } else {\n                this.harkVolumeChangeEnabled = false;\n            }\n            // Shutting down the hark event\n            if (\n                this.harkSpeakingEnabled ||\n                this.harkSpeakingEnabledOnce ||\n                this.harkStoppedSpeakingEnabled ||\n                this.harkStoppedSpeakingEnabledOnce\n            ) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('volume_change');\n            } else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    isLocal(): boolean {\n        // inbound options undefined and outbound options defined\n        return !this.inboundStreamOpts && !!this.outboundStreamOpts;\n    }\n\n    /**\n     * @hidden\n     */\n    getSelectedIceCandidate(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.webRtcStats\n                .getSelectedIceCandidateInfo()\n                .then((report) => resolve(report))\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    getRemoteIceCandidateList(): RTCIceCandidate[] {\n        return this.webRtcPeer.remoteCandidatesQueue;\n    }\n\n    /**\n     * @hidden\n     */\n    getLocalIceCandidateList(): RTCIceCandidate[] {\n        return this.webRtcPeer.localCandidatesQueue;\n    }\n\n    /**\n     * @hidden\n     */\n    streamIceConnectionStateBroken() {\n        if (!this.getWebRtcPeer() || !this.getRTCPeerConnection()) {\n            return false;\n        }\n        if (this.isLocal() && !!this.session.openvidu.advancedConfiguration.forceMediaReconnectionAfterNetworkDrop) {\n            logger.warn(\n                `OpenVidu Browser advanced configuration option \"forceMediaReconnectionAfterNetworkDrop\" is enabled. Stream ${this.streamId\n                } (${this.isLocal() ? 'Publisher' : 'Subscriber'}) will force a reconnection`\n            );\n            return true;\n        }\n        const iceConnectionState: RTCIceConnectionState = this.getRTCPeerConnection().iceConnectionState;\n        return iceConnectionState !== 'connected' && iceConnectionState !== 'completed';\n    }\n\n    /* Private methods */\n\n    private setHarkListenerIfNotExists(): boolean {\n        if (!!this.mediaStream) {\n            if (!this.speechEvent) {\n                const harkOptions = !!this.harkOptions\n                    ? this.harkOptions\n                    : this.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {};\n                harkOptions.interval = typeof harkOptions.interval === 'number' ? harkOptions.interval : 100;\n                harkOptions.threshold = typeof harkOptions.threshold === 'number' ? harkOptions.threshold : -50;\n                this.speechEvent = hark(this.mediaStream, harkOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    setupReconnectionEventEmitter(resolve: (value: void | PromiseLike<void>) => void, reject: (reason?: any) => void): boolean {\n        if (this.reconnectionEventEmitter == undefined) {\n            // There is no ongoing reconnection\n            this.reconnectionEventEmitter = new EventEmitter();\n            return false;\n        } else {\n            // Ongoing reconnection\n            console.warn(\n                `Trying to reconnect stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                }) but an ongoing reconnection process is active. Waiting for response...`\n            );\n            this.reconnectionEventEmitter.once('success', () => resolve());\n            this.reconnectionEventEmitter.once('error', (error) => reject(error));\n            return true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerSend(reconnect: boolean): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (reconnect) {\n                if (this.setupReconnectionEventEmitter(resolve, reject)) {\n                    // Ongoing reconnection\n                    return;\n                }\n            } else {\n                // MediaStream will already have hark events for reconnected streams\n                this.initHarkEvents(); // Init hark events for the local stream\n            }\n\n            const finalResolve = () => {\n                if (reconnect) {\n                    this.reconnectionEventEmitter?.emitEvent('success');\n                    delete this.reconnectionEventEmitter;\n                }\n                return resolve();\n            };\n\n            const finalReject = (error) => {\n                if (reconnect) {\n                    this.reconnectionEventEmitter?.emitEvent('error', [error]);\n                    delete this.reconnectionEventEmitter;\n                }\n                return reject(error);\n            };\n\n            const successOfferCallback = (sdpOfferParam) => {\n                logger.debug('Sending SDP offer to publish as ' + this.streamId, sdpOfferParam);\n\n                const method = reconnect ? 'reconnectStream' : 'publishVideo';\n                let params;\n                if (reconnect) {\n                    params = {\n                        stream: this.streamId,\n                        sdpString: sdpOfferParam\n                    };\n                } else {\n                    let typeOfVideo;\n                    if (this.isSendVideo()) {\n                        typeOfVideo =\n                            typeof MediaStreamTrack !== 'undefined' &&\n                                this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack\n                                ? TypeOfVideo.CUSTOM\n                                : this.isSendScreen()\n                                    ? TypeOfVideo.SCREEN\n                                    : TypeOfVideo.CAMERA;\n                    }\n                    params = {\n                        doLoopback: this.displayMyRemote() || false,\n                        hasAudio: this.isSendAudio(),\n                        hasVideo: this.isSendVideo(),\n                        audioActive: this.audioActive,\n                        videoActive: this.videoActive,\n                        typeOfVideo,\n                        frameRate: !!this.frameRate ? this.frameRate : -1,\n                        videoDimensions: JSON.stringify(this.videoDimensions),\n                        filter: this.outboundStreamOpts.publisherProperties.filter,\n                        sdpOffer: sdpOfferParam\n                    };\n                }\n\n                this.session.openvidu.sendRequest(method, params, (error, response) => {\n                    if (error) {\n                        if (error.code === 401) {\n                            finalReject(\n                                new OpenViduError(OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to publish\")\n                            );\n                        } else {\n                            finalReject('Error on publishVideo: ' + JSON.stringify(error));\n                        }\n                    } else {\n                        this.webRtcPeer\n                            .processRemoteAnswer(response.sdpAnswer)\n                            .then(() => {\n                                this.streamId = response.id;\n                                this.creationTime = response.createdAt;\n                                this.isLocalStreamPublished = true;\n                                this.publishedOnce = true;\n                                if (this.displayMyRemote()) {\n                                    this.localMediaStreamWhenSubscribedToRemote = this.mediaStream;\n                                    this.remotePeerSuccessfullyEstablished(reconnect);\n                                }\n                                if (reconnect) {\n                                    this.ee.emitEvent('stream-reconnected-by-publisher', []);\n                                } else {\n                                    this.ee.emitEvent('stream-created-by-publisher', []);\n                                }\n                                this.initWebRtcStats();\n                                logger.info(\n                                    \"'Publisher' (\" +\n                                    this.streamId +\n                                    ') successfully ' +\n                                    (reconnect ? 'reconnected' : 'published') +\n                                    ' to session'\n                                );\n\n                                finalResolve();\n                            })\n                            .catch((error) => {\n                                finalReject(error);\n                            });\n                    }\n                });\n            };\n\n            const config: WebRtcPeerConfiguration = {\n                mediaConstraints: {\n                    audio: this.hasAudio,\n                    video: this.hasVideo\n                },\n                simulcast: this.outboundStreamOpts.publisherProperties.videoSimulcast ?? this.session.openvidu.videoSimulcast,\n                onIceCandidate: this.connection.sendIceCandidate.bind(this.connection),\n                onIceConnectionStateException: this.onIceConnectionStateExceptionHandler.bind(this),\n                iceServers: this.getIceServersConf(),\n                mediaStream: this.mediaStream,\n                mediaServer: this.session.openvidu.mediaServer,\n                typeOfVideo: this.typeOfVideo ? TypeOfVideo[this.typeOfVideo] : undefined\n            };\n\n            if (this.session.openvidu.mediaServer !== 'mediasoup') {\n                // Simulcast is only supported by mediasoup\n                config.simulcast = false;\n            }\n\n            if (reconnect) {\n                this.disposeWebRtcPeer();\n            }\n            if (this.displayMyRemote()) {\n                this.webRtcPeer = new WebRtcPeerSendrecv(config);\n            } else {\n                this.webRtcPeer = new WebRtcPeerSendonly(config);\n            }\n            this.webRtcPeer.addIceConnectionStateChangeListener('publisher of ' + this.connection.connectionId);\n            this.webRtcPeer\n                .createOffer()\n                .then((sdpOffer) => {\n                    this.webRtcPeer\n                        .processLocalOffer(sdpOffer)\n                        .then(() => {\n                            successOfferCallback(sdpOffer.sdp);\n                        })\n                        .catch((error) => {\n                            finalReject(new Error('(publish) SDP process local offer error: ' + JSON.stringify(error)));\n                        });\n                })\n                .catch((error) => {\n                    finalReject(new Error('(publish) SDP create offer error: ' + JSON.stringify(error)));\n                });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    finalResolveForSubscription(reconnect: boolean, resolve: (value: void | PromiseLike<void>) => void) {\n        logger.info(\"'Subscriber' (\" + this.streamId + ') successfully ' + (reconnect ? 'reconnected' : 'subscribed'));\n        this.remotePeerSuccessfullyEstablished(reconnect);\n        this.initWebRtcStats();\n        if (reconnect) {\n            this.reconnectionEventEmitter?.emitEvent('success');\n            delete this.reconnectionEventEmitter;\n        }\n        return resolve();\n    }\n\n    /**\n     * @hidden\n     */\n    finalRejectForSubscription(reconnect: boolean, error: any, reject: (reason?: any) => void) {\n        logger.error(\n            \"Error for 'Subscriber' (\" +\n            this.streamId +\n            ') while trying to ' +\n            (reconnect ? 'reconnect' : 'subscribe') +\n            ': ' +\n            error.toString()\n        );\n        if (reconnect) {\n            this.reconnectionEventEmitter?.emitEvent('error', [error]);\n            delete this.reconnectionEventEmitter;\n        }\n        return reject(error);\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerReceive(reconnect: boolean): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (reconnect) {\n                if (this.setupReconnectionEventEmitter(resolve, reject)) {\n                    // Ongoing reconnection\n                    return;\n                }\n            }\n\n            if (this.session.openvidu.mediaServer === 'mediasoup') {\n                // Server initiates negotiation\n\n                this.initWebRtcPeerReceiveFromServer(reconnect)\n                    .then(() => this.finalResolveForSubscription(reconnect, resolve))\n                    .catch((error) => this.finalRejectForSubscription(reconnect, error, reject));\n            } else {\n                // Client initiates negotiation\n\n                this.initWebRtcPeerReceiveFromClient(reconnect)\n                    .then(() => this.finalResolveForSubscription(reconnect, resolve))\n                    .catch((error) => this.finalRejectForSubscription(reconnect, error, reject));\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerReceiveFromClient(reconnect: boolean): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.completeWebRtcPeerReceive(reconnect, false)\n                .then((response) => {\n                    this.webRtcPeer\n                        .processRemoteAnswer(response.sdpAnswer)\n                        .then(() => resolve())\n                        .catch((error) => reject(error));\n                })\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcPeerReceiveFromServer(reconnect: boolean): Promise<void> {\n        return new Promise((resolve, reject) => {\n            // Server initiates negotiation\n            this.session.openvidu.sendRequest('prepareReceiveVideoFrom', { sender: this.streamId, reconnect }, (error, response) => {\n                if (error) {\n                    return reject(new Error('Error on prepareReceiveVideoFrom: ' + JSON.stringify(error)));\n                } else {\n                    this.completeWebRtcPeerReceive(reconnect, false, response.sdpOffer)\n                        .then(() => resolve())\n                        .catch((error) => reject(error));\n                }\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    completeWebRtcPeerReceive(reconnect: boolean, forciblyReconnect: boolean, sdpOfferByServer?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            logger.debug(\"'Session.subscribe(Stream)' called\");\n\n            const sendSdpToServer = (sdpString: string) => {\n                logger.debug(`Sending local SDP ${!!sdpOfferByServer ? 'answer' : 'offer'} to subscribe to ${this.streamId}`, sdpString);\n\n                const method = reconnect ? 'reconnectStream' : 'receiveVideoFrom';\n                const params = {};\n                params[reconnect ? 'stream' : 'sender'] = this.streamId;\n                if (!!sdpOfferByServer) {\n                    params[reconnect ? 'sdpString' : 'sdpAnswer'] = sdpString;\n                } else {\n                    params['sdpOffer'] = sdpString;\n                }\n                if (reconnect) {\n                    params['forciblyReconnect'] = forciblyReconnect;\n                }\n\n                this.session.openvidu.sendRequest(method, params, (error, response) => {\n                    if (error) {\n                        return reject(new Error('Error on ' + method + ' : ' + JSON.stringify(error)));\n                    } else {\n                        return resolve(response);\n                    }\n                });\n            };\n\n            const config: WebRtcPeerConfiguration = {\n                mediaConstraints: {\n                    audio: this.hasAudio,\n                    video: this.hasVideo\n                },\n                simulcast: false,\n                onIceCandidate: this.connection.sendIceCandidate.bind(this.connection),\n                onIceConnectionStateException: this.onIceConnectionStateExceptionHandler.bind(this),\n                iceServers: this.getIceServersConf(),\n                mediaServer: this.session.openvidu.mediaServer,\n                typeOfVideo: this.typeOfVideo ? TypeOfVideo[this.typeOfVideo] : undefined\n            };\n\n            if (reconnect) {\n                this.disposeWebRtcPeer();\n            }\n\n            this.webRtcPeer = new WebRtcPeerRecvonly(config);\n            this.webRtcPeer.addIceConnectionStateChangeListener(this.streamId);\n\n            if (!!sdpOfferByServer) {\n                this.webRtcPeer\n                    .processRemoteOffer(sdpOfferByServer)\n                    .then(() => {\n                        this.webRtcPeer\n                            .createAnswer()\n                            .then((sdpAnswer) => {\n                                this.webRtcPeer\n                                    .processLocalAnswer(sdpAnswer)\n                                    .then(() => {\n                                        sendSdpToServer(sdpAnswer.sdp!);\n                                    })\n                                    .catch((error) => {\n                                        return reject(new Error('(subscribe) SDP process local answer error: ' + JSON.stringify(error)));\n                                    });\n                            })\n                            .catch((error) => {\n                                return reject(new Error('(subscribe) SDP create answer error: ' + JSON.stringify(error)));\n                            });\n                    })\n                    .catch((error) => {\n                        return reject(new Error('(subscribe) SDP process remote offer error: ' + JSON.stringify(error)));\n                    });\n            } else {\n                this.webRtcPeer\n                    .createOffer()\n                    .then((sdpOffer) => {\n                        this.webRtcPeer\n                            .processLocalOffer(sdpOffer)\n                            .then(() => {\n                                sendSdpToServer(sdpOffer.sdp!);\n                            })\n                            .catch((error) => {\n                                return reject(new Error('(subscribe) SDP process local offer error: ' + JSON.stringify(error)));\n                            });\n                    })\n                    .catch((error) => {\n                        return reject(new Error('(subscribe) SDP create offer error: ' + JSON.stringify(error)));\n                    });\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    remotePeerSuccessfullyEstablished(reconnect: boolean): void {\n        if (reconnect && this.mediaStream != null) {\n            // Now we can destroy the existing MediaStream\n            this.disposeMediaStream();\n        }\n\n        this.mediaStream = new MediaStream();\n        let receiver: RTCRtpReceiver;\n        for (receiver of this.webRtcPeer.pc.getReceivers()) {\n            if (!!receiver.track) {\n                this.mediaStream.addTrack(receiver.track);\n            }\n        }\n        logger.debug('Peer remote stream', this.mediaStream);\n\n        if (!!this.mediaStream) {\n            if (this.streamManager instanceof Subscriber) {\n                // Apply SubscriberProperties.subscribeToAudio and SubscriberProperties.subscribeToVideo\n                if (!!this.mediaStream.getAudioTracks()[0]) {\n                    const enabled = reconnect ? this.audioActive : !!(this.streamManager as Subscriber).properties.subscribeToAudio;\n                    this.mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!this.mediaStream.getVideoTracks()[0]) {\n                    const enabled = reconnect ? this.videoActive : !!this.videoActive && !!(this.streamManager as Subscriber).properties.subscribeToVideo;\n                    this.mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n            }\n\n            this.updateMediaStreamInVideos();\n            this.initHarkEvents(); // Init hark events for the remote stream\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    initHarkEvents(): void {\n        if (!!this.mediaStream!.getAudioTracks()[0]) {\n            // Hark events can only be set if audio track is available\n            if (this.session.anySpeechEventListenerEnabled('publisherStartSpeaking', true, this.streamManager)) {\n                this.enableOnceHarkSpeakingEvent();\n            }\n            if (this.session.anySpeechEventListenerEnabled('publisherStartSpeaking', false, this.streamManager)) {\n                this.enableHarkSpeakingEvent();\n            }\n            if (this.session.anySpeechEventListenerEnabled('publisherStopSpeaking', true, this.streamManager)) {\n                this.enableOnceHarkStoppedSpeakingEvent();\n            }\n            if (this.session.anySpeechEventListenerEnabled('publisherStopSpeaking', false, this.streamManager)) {\n                this.enableHarkStoppedSpeakingEvent();\n            }\n            if (this.harkVolumeChangeEnabledOnce) {\n                this.enableOnceHarkVolumeChangeEvent(true);\n            }\n            if (this.harkVolumeChangeEnabled) {\n                this.enableHarkVolumeChangeEvent(true);\n            }\n        }\n    }\n\n    private onIceConnectionStateExceptionHandler(exceptionName: ExceptionEventName, message: string, data?: any): void {\n        switch (exceptionName) {\n            case ExceptionEventName.ICE_CONNECTION_FAILED:\n                this.onIceConnectionFailed();\n                break;\n            case ExceptionEventName.ICE_CONNECTION_DISCONNECTED:\n                this.onIceConnectionDisconnected();\n                break;\n        }\n        this.session.emitEvent('exception', [new ExceptionEvent(this.session, exceptionName, this, message, data)]);\n    }\n\n    private onIceConnectionFailed() {\n        // Immediately reconnect, as this is a terminal error\n        logger.log(\n            `[ICE_CONNECTION_FAILED] Handling ICE_CONNECTION_FAILED event. Reconnecting stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n            })`\n        );\n        this.reconnectStreamAndLogResultingIceConnectionState(ExceptionEventName.ICE_CONNECTION_FAILED);\n    }\n\n    private onIceConnectionDisconnected() {\n        // Wait to see if the ICE connection is able to reconnect\n        logger.log(\n            `[ICE_CONNECTION_DISCONNECTED] Handling ICE_CONNECTION_DISCONNECTED event. Waiting for ICE to be restored and reconnect stream ${this.streamId\n            } (${this.isLocal() ? 'Publisher' : 'Subscriber'}) if not possible`\n        );\n        const timeout = this.session.openvidu.advancedConfiguration.iceConnectionDisconnectedExceptionTimeout || 4000;\n        this.awaitWebRtcPeerConnectionState(timeout).then((state) => {\n            switch (state) {\n                case 'failed':\n                    // Do nothing, as an ICE_CONNECTION_FAILED event will have already raised\n                    logger.warn(\n                        `[ICE_CONNECTION_DISCONNECTED] ICE connection of stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                        }) is now failed after ICE_CONNECTION_DISCONNECTED`\n                    );\n                    break;\n                case 'connected':\n                case 'completed':\n                    logger.log(\n                        `[ICE_CONNECTION_DISCONNECTED] ICE connection of stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                        }) automatically restored after ICE_CONNECTION_DISCONNECTED. Current ICE connection state: ${state}`\n                    );\n                    break;\n                case 'closed':\n                case 'checking':\n                case 'new':\n                case 'disconnected':\n                    // Rest of states\n                    logger.warn(\n                        `[ICE_CONNECTION_DISCONNECTED] ICE connection of stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                        }) couldn't be restored after ICE_CONNECTION_DISCONNECTED event. Current ICE connection state after ${timeout} ms: ${state}`\n                    );\n                    this.reconnectStreamAndLogResultingIceConnectionState(ExceptionEventName.ICE_CONNECTION_DISCONNECTED);\n                    break;\n            }\n        });\n    }\n\n    private async reconnectStreamAndLogResultingIceConnectionState(event: string) {\n        try {\n            const finalIceStateAfterReconnection = await this.reconnectStreamAndReturnIceConnectionState(event);\n            switch (finalIceStateAfterReconnection) {\n                case 'connected':\n                case 'completed':\n                    logger.log(\n                        `[${event}] Stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                        }) successfully reconnected after ${event}. Current ICE connection state: ${finalIceStateAfterReconnection}`\n                    );\n                    break;\n                default:\n                    logger.error(\n                        `[${event}] Stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                        }) failed to reconnect after ${event}. Current ICE connection state: ${finalIceStateAfterReconnection}`\n                    );\n                    break;\n            }\n        } catch (error) {\n            logger.error(\n                `[${event}] Error reconnecting stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                }) after ${event}: ${error}`\n            );\n        }\n    }\n\n    private async reconnectStreamAndReturnIceConnectionState(event: string): Promise<RTCIceConnectionState> {\n        logger.log(`[${event}] Reconnecting stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'}) after event ${event}`);\n        try {\n            await this.reconnectStream(event);\n            const timeout = this.session.openvidu.advancedConfiguration.iceConnectionDisconnectedExceptionTimeout || 4000;\n            return this.awaitWebRtcPeerConnectionState(timeout);\n        } catch (error) {\n            logger.warn(\n                `[${event}] Error reconnecting stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'}). Reason: ${error}`\n            );\n            return this.awaitWebRtcPeerConnectionState(1);\n        }\n    }\n\n    private async awaitWebRtcPeerConnectionState(timeout: number): Promise<RTCIceConnectionState> {\n        let state = this.getRTCPeerConnection().iceConnectionState;\n        const interval = 150;\n        const intervals = Math.ceil(timeout / interval);\n        for (let i = 0; i < intervals; i++) {\n            state = this.getRTCPeerConnection().iceConnectionState;\n            if (state === 'connected' || state === 'completed') {\n                break;\n            }\n            // Sleep\n            await new Promise((resolve) => setTimeout(resolve, interval));\n        }\n        return state;\n    }\n\n    private async reconnectStream(event: string) {\n        const isWsConnected = await this.isWebsocketConnected(event, 3000);\n        if (isWsConnected) {\n            // There is connection to openvidu-server. The RTCPeerConnection is the only one broken\n            logger.log(\n                `[${event}] Trying to reconnect stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                }) and the websocket is opened`\n            );\n            if (this.isLocal()) {\n                return this.initWebRtcPeerSend(true);\n            } else {\n                return this.initWebRtcPeerReceive(true);\n            }\n        } else {\n            // There is no connection to openvidu-server. Nothing can be done. The automatic reconnection\n            // feature should handle a possible reconnection of RTCPeerConnection in case network comes back\n            const errorMsg = `[${event}] Trying to reconnect stream ${this.streamId} (${this.isLocal() ? 'Publisher' : 'Subscriber'\n                }) but the websocket wasn't opened`;\n            logger.error(errorMsg);\n            throw Error(errorMsg);\n        }\n    }\n\n    private isWebsocketConnected(event: string, msResponseTimeout: number): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const wsReadyState = this.session.openvidu.getWsReadyState();\n            if (wsReadyState === 1) {\n                const responseTimeout = setTimeout(() => {\n                    console.warn(`[${event}] Websocket timeout of ${msResponseTimeout}ms`);\n                    return resolve(false);\n                }, msResponseTimeout);\n                this.session.openvidu.sendRequest('echo', {}, (error, response) => {\n                    clearTimeout(responseTimeout);\n                    if (!!error) {\n                        console.warn(`[${event}] Websocket 'echo' returned error: ${error}`);\n                        return resolve(false);\n                    } else {\n                        return resolve(true);\n                    }\n                });\n            } else {\n                console.warn(`[${event}] Websocket readyState is ${wsReadyState}`);\n                return resolve(false);\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    initWebRtcStats(): void {\n        this.webRtcStats = new WebRtcStats(this);\n        this.webRtcStats.initWebRtcStats();\n\n        //TODO: send common webrtc stats from client to openvidu-server\n        /*if (this.session.openvidu.webrtcStatsInterval > 0) {\n            setInterval(() => {\n                this.gatherStatsForPeer().then(jsonStats => {\n                    const body = {\n                        sessionId: this.session.sessionId,\n                        participantPrivateId: this.connection.rpcSessionId,\n                        stats: jsonStats\n                    }\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('POST', this.session.openvidu.httpUri + '/elasticsearch/webrtc-stats', true);\n                    xhr.setRequestHeader('Content-Type', 'application/json');\n                    xhr.send(JSON.stringify(body));\n                })\n            }, this.session.openvidu.webrtcStatsInterval * 1000);\n        }*/\n    }\n\n    private stopWebRtcStats(): void {\n        if (!!this.webRtcStats && this.webRtcStats.isEnabled()) {\n            this.webRtcStats.stopWebRtcStats();\n        }\n    }\n\n    private getIceServersConf(): RTCIceServer[] | undefined {\n        let returnValue;\n        if (!!this.session.openvidu.advancedConfiguration.iceServers) {\n            returnValue =\n                this.session.openvidu.advancedConfiguration.iceServers === 'freeice'\n                    ? undefined\n                    : this.session.openvidu.advancedConfiguration.iceServers;\n        } else if (this.session.openvidu.iceServers) {\n            returnValue = this.session.openvidu.iceServers;\n        } else {\n            returnValue = undefined;\n        }\n        return returnValue;\n    }\n\n    private gatherStatsForPeer(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.isLocal()) {\n                // Publisher stream stats\n\n                this.getRTCPeerConnection()\n                    .getSenders()\n                    .forEach((sender) =>\n                        sender.getStats().then((response) => {\n                            response.forEach((report) => {\n                                if (this.isReportWanted(report)) {\n                                    const finalReport = {};\n\n                                    finalReport['type'] = report.type;\n                                    finalReport['timestamp'] = report.timestamp;\n                                    finalReport['id'] = report.id;\n\n                                    // Common to Chrome, Firefox and Safari\n                                    if (report.type === 'outbound-rtp') {\n                                        finalReport['ssrc'] = report.ssrc;\n                                        finalReport['firCount'] = report.firCount;\n                                        finalReport['pliCount'] = report.pliCount;\n                                        finalReport['nackCount'] = report.nackCount;\n                                        finalReport['qpSum'] = report.qpSum;\n\n                                        // Set media type\n                                        if (!!report.kind) {\n                                            finalReport['mediaType'] = report.kind;\n                                        } else if (!!report.mediaType) {\n                                            finalReport['mediaType'] = report.mediaType;\n                                        } else {\n                                            // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                            finalReport['mediaType'] = report.id.indexOf('VideoStream') !== -1 ? 'video' : 'audio';\n                                        }\n\n                                        if (finalReport['mediaType'] === 'video') {\n                                            finalReport['framesEncoded'] = report.framesEncoded;\n                                        }\n\n                                        finalReport['packetsSent'] = report.packetsSent;\n                                        finalReport['bytesSent'] = report.bytesSent;\n                                    }\n\n                                    // Only for Chrome and Safari\n                                    if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                        // This is the final selected candidate pair\n                                        finalReport['availableOutgoingBitrate'] = report.availableOutgoingBitrate;\n                                        finalReport['rtt'] = report.currentRoundTripTime;\n                                        finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                                    }\n\n                                    // Only for Firefox >= 66.0\n                                    if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n                                    }\n\n                                    logger.log(finalReport);\n                                }\n                            });\n                        })\n                    );\n            } else {\n                // Subscriber stream stats\n\n                this.getRTCPeerConnection()\n                    .getReceivers()\n                    .forEach((receiver) =>\n                        receiver.getStats().then((response) => {\n                            response.forEach((report) => {\n                                if (this.isReportWanted(report)) {\n                                    const finalReport = {};\n\n                                    finalReport['type'] = report.type;\n                                    finalReport['timestamp'] = report.timestamp;\n                                    finalReport['id'] = report.id;\n\n                                    // Common to Chrome, Firefox and Safari\n                                    if (report.type === 'inbound-rtp') {\n                                        finalReport['ssrc'] = report.ssrc;\n                                        finalReport['firCount'] = report.firCount;\n                                        finalReport['pliCount'] = report.pliCount;\n                                        finalReport['nackCount'] = report.nackCount;\n                                        finalReport['qpSum'] = report.qpSum;\n\n                                        // Set media type\n                                        if (!!report.kind) {\n                                            finalReport['mediaType'] = report.kind;\n                                        } else if (!!report.mediaType) {\n                                            finalReport['mediaType'] = report.mediaType;\n                                        } else {\n                                            // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                            finalReport['mediaType'] = report.id.indexOf('VideoStream') !== -1 ? 'video' : 'audio';\n                                        }\n\n                                        if (finalReport['mediaType'] === 'video') {\n                                            finalReport['framesDecoded'] = report.framesDecoded;\n                                        }\n\n                                        finalReport['packetsReceived'] = report.packetsReceived;\n                                        finalReport['packetsLost'] = report.packetsLost;\n                                        finalReport['jitter'] = report.jitter;\n                                        finalReport['bytesReceived'] = report.bytesReceived;\n                                    }\n\n                                    // Only for Chrome and Safari\n                                    if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                        // This is the final selected candidate pair\n                                        finalReport['availableIncomingBitrate'] = report.availableIncomingBitrate;\n                                        finalReport['rtt'] = report.currentRoundTripTime;\n                                        finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                                    }\n\n                                    // Only for Firefox >= 66.0\n                                    if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n                                    }\n                                    logger.log(finalReport);\n                                }\n                            });\n                        })\n                    );\n            }\n        });\n    }\n\n    private isReportWanted(report: any): boolean {\n        return (\n            (report.type === 'inbound-rtp' && !this.isLocal()) ||\n            (report.type === 'outbound-rtp' && this.isLocal()) ||\n            (report.type === 'candidate-pair' && report.nominated && report.bytesSent > 0)\n        );\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { Subscriber } from './Subscriber';\nimport { EventDispatcher } from './EventDispatcher';\nimport { StreamManagerVideo } from '../OpenViduInternal/Interfaces/Public/StreamManagerVideo';\nimport { StreamManagerEventMap } from '../OpenViduInternal/Events/EventMap/StreamManagerEventMap';\nimport { StreamManagerEvent } from '../OpenViduInternal/Events/StreamManagerEvent';\nimport { VideoElementEvent } from '../OpenViduInternal/Events/VideoElementEvent';\nimport { ExceptionEvent, ExceptionEventName } from '../OpenViduInternal/Events/ExceptionEvent';\nimport { VideoInsertMode } from '../OpenViduInternal/Enums/VideoInsertMode';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\nimport { PlatformUtils } from '../OpenViduInternal/Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\n/**\n * Interface in charge of displaying the media streams in the HTML DOM. This wraps any {@link Publisher} and {@link Subscriber} object.\n * You can insert as many video players fo the same Stream as you want by calling {@link StreamManager.addVideoElement} or\n * {@link StreamManager.createVideoElement}.\n * The use of StreamManager wrapper is particularly useful when you don't need to differentiate between Publisher or Subscriber streams or just\n * want to directly manage your own video elements (even more than one video element per Stream). This scenario is pretty common in\n * declarative, MVC frontend frameworks such as Angular, React or Vue.js\n *\n * See available event listeners at {@link StreamManagerEventMap}.\n */\nexport abstract class StreamManager extends EventDispatcher {\n    /**\n     * The Stream represented in the DOM by the Publisher/Subscriber\n     */\n    stream: Stream;\n\n    /**\n     * All the videos displaying the Stream of this Publisher/Subscriber\n     */\n    videos: StreamManagerVideo[] = [];\n\n    /**\n     * Whether the Stream represented in the DOM is local or remote\n     * - `false` for {@link Publisher}\n     * - `true` for {@link Subscriber}\n     */\n    remote: boolean;\n\n    /**\n     * The DOM HTMLElement assigned as target element when creating the video for the Publisher/Subscriber. This property is only defined if:\n     * - {@link Publisher} has been initialized by calling method {@link OpenVidu.initPublisher} with a valid `targetElement` parameter\n     * - {@link Subscriber} has been initialized by calling method {@link Session.subscribe} with a valid `targetElement` parameter\n     */\n    targetElement: HTMLElement;\n\n    /**\n     * `id` attribute of the DOM video element displaying the Publisher/Subscriber's stream. This property is only defined if:\n     * - {@link Publisher} has been initialized by calling method {@link OpenVidu.initPublisher} with a valid `targetElement` parameter\n     * - {@link Subscriber} has been initialized by calling method {@link Session.subscribe} with a valid `targetElement` parameter\n     */\n    id: string;\n\n    /**\n     * @hidden\n     */\n    protected firstVideoElement?: StreamManagerVideo;\n    /**\n     * @hidden\n     */\n    protected element: HTMLElement;\n    /**\n     * @hidden\n     */\n    protected canPlayListener: EventListener;\n    /**\n     * @hidden\n     */\n    private streamPlayingEventExceptionTimeout?: NodeJS.Timeout;\n    /**\n     * @hidden\n     */\n    private lazyLaunchVideoElementCreatedEvent = false;\n\n    /**\n     * @hidden\n     */\n    constructor(stream: Stream, targetElement?: HTMLElement | string) {\n        super();\n        platform = PlatformUtils.getInstance();\n        this.stream = stream;\n        this.stream.streamManager = this;\n        this.remote = !this.stream.isLocal();\n\n        if (!!targetElement) {\n            let targEl;\n            if (typeof targetElement === 'string') {\n                targEl = document.getElementById(targetElement);\n            } else if (targetElement instanceof HTMLElement) {\n                targEl = targetElement;\n            }\n\n            if (!!targEl) {\n                this.firstVideoElement = {\n                    targetElement: targEl,\n                    video: document.createElement('video'),\n                    id: '',\n                    canplayListenerAdded: false\n                };\n                if (\n                    platform.isSafariBrowser() ||\n                    (platform.isIPhoneOrIPad() &&\n                        (platform.isChromeMobileBrowser() ||\n                            platform.isEdgeMobileBrowser() ||\n                            platform.isOperaMobileBrowser() ||\n                            platform.isFirefoxMobileBrowser()))\n                ) {\n                    this.firstVideoElement.video.playsInline = true;\n                }\n                this.targetElement = targEl;\n                this.element = targEl;\n            }\n        }\n\n        this.canPlayListener = () => {\n            this.deactivateStreamPlayingEventExceptionTimeout();\n            this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n        };\n    }\n\n    /**\n     * See {@link EventDispatcher.on}\n     */\n    on<K extends keyof StreamManagerEventMap>(type: K, handler: (event: StreamManagerEventMap[K]) => void): this {\n        super.onAux(type, \"Event '\" + type + \"' triggered by '\" + (this.remote ? 'Subscriber' : 'Publisher') + \"'\", handler);\n\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n                this.lazyLaunchVideoElementCreatedEvent = false;\n            }\n        }\n        if (type === 'streamPlaying') {\n            if (\n                this.videos[0] &&\n                this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4\n            ) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n            }\n        }\n        if (this.stream.hasAudio) {\n            if (type === 'publisherStartSpeaking') {\n                this.stream.enableHarkSpeakingEvent();\n            }\n            if (type === 'publisherStopSpeaking') {\n                this.stream.enableHarkStoppedSpeakingEvent();\n            }\n            if (type === 'streamAudioVolumeChange') {\n                this.stream.enableHarkVolumeChangeEvent(false);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.once}\n     */\n    once<K extends keyof StreamManagerEventMap>(type: K, handler: (event: StreamManagerEventMap[K]) => void): this {\n        super.onceAux(type, \"Event '\" + type + \"' triggered once by '\" + (this.remote ? 'Subscriber' : 'Publisher') + \"'\", handler);\n\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n            }\n        }\n        if (type === 'streamPlaying') {\n            if (\n                this.videos[0] &&\n                this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4\n            ) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent(this, 'streamPlaying', undefined)]);\n            }\n        }\n        if (this.stream.hasAudio) {\n            if (type === 'publisherStartSpeaking') {\n                this.stream.enableOnceHarkSpeakingEvent();\n            }\n            if (type === 'publisherStopSpeaking') {\n                this.stream.enableOnceHarkStoppedSpeakingEvent();\n            }\n            if (type === 'streamAudioVolumeChange') {\n                this.stream.enableOnceHarkVolumeChangeEvent(false);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * See {@link EventDispatcher.off}\n     */\n    off<K extends keyof StreamManagerEventMap>(type: K, handler?: (event: StreamManagerEventMap[K]) => void): this {\n        super.offAux(type, handler);\n\n        if (type === 'publisherStartSpeaking') {\n            // Both StreamManager and Session can have \"publisherStartSpeaking\" event listeners\n            const remainingStartSpeakingEventListeners =\n                this.ee.getListeners(type).length + this.stream.session.ee.getListeners(type).length;\n            if (remainingStartSpeakingEventListeners === 0) {\n                this.stream.disableHarkSpeakingEvent(false);\n            }\n        }\n        if (type === 'publisherStopSpeaking') {\n            // Both StreamManager and Session can have \"publisherStopSpeaking\" event listeners\n            const remainingStopSpeakingEventListeners =\n                this.ee.getListeners(type).length + this.stream.session.ee.getListeners(type).length;\n            if (remainingStopSpeakingEventListeners === 0) {\n                this.stream.disableHarkStoppedSpeakingEvent(false);\n            }\n        }\n        if (type === 'streamAudioVolumeChange') {\n            // Only StreamManager can have \"streamAudioVolumeChange\" event listeners\n            const remainingVolumeEventListeners = this.ee.getListeners(type).length;\n            if (remainingVolumeEventListeners === 0) {\n                this.stream.disableHarkVolumeChangeEvent(false);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes `video` element parameter display this {@link stream}. This is useful when you are\n     * [managing the video elements on your own](/en/stable/cheatsheet/manage-videos/#you-take-care-of-the-video-players)\n     *\n     * Calling this method with a video already added to other Publisher/Subscriber will cause the video element to be\n     * disassociated from that previous Publisher/Subscriber and to be associated to this one.\n     *\n     * @returns 1 if the video wasn't associated to any other Publisher/Subscriber and has been successfully added to this one.\n     * 0 if the video was already added to this Publisher/Subscriber. -1 if the video was previously associated to any other\n     * Publisher/Subscriber and has been successfully disassociated from that one and properly added to this one.\n     */\n    addVideoElement(video: HTMLVideoElement): number {\n        this.initializeVideoProperties(video);\n\n        if (!this.remote && this.stream.displayMyRemote()) {\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n\n        // If the video element is already part of this StreamManager do nothing\n        for (const v of this.videos) {\n            if (v.video === video) {\n                return 0;\n            }\n        }\n\n        let returnNumber = 1;\n\n        for (const streamManager of this.stream.session.streamManagers) {\n            if (streamManager.disassociateVideo(video)) {\n                returnNumber = -1;\n                break;\n            }\n        }\n\n        this.stream.session.streamManagers.forEach((streamManager) => {\n            streamManager.disassociateVideo(video);\n        });\n\n        this.pushNewStreamManagerVideo({\n            video,\n            id: video.id,\n            canplayListenerAdded: false\n        });\n\n        logger.info('New video element associated to ', this);\n\n        return returnNumber;\n    }\n\n    /**\n     * Creates a new video element displaying this {@link stream}. This allows you to have multiple video elements displaying the same media stream.\n     *\n     * #### Events dispatched\n     *\n     * The Publisher/Subscriber object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM. See {@link VideoElementEvent}\n     *\n     * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Publisher/Subscriber will be inserted\n     * @param insertMode How the video element will be inserted accordingly to `targetElemet`\n     *\n     * @returns The created HTMLVideoElement\n     */\n    createVideoElement(targetElement?: string | HTMLElement, insertMode?: VideoInsertMode): HTMLVideoElement {\n        let targEl;\n        if (typeof targetElement === 'string') {\n            targEl = document.getElementById(targetElement);\n            if (!targEl) {\n                throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n            }\n        } else if (targetElement instanceof HTMLElement) {\n            targEl = targetElement;\n        } else {\n            throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n        }\n\n        const video = this.createVideo();\n        this.initializeVideoProperties(video);\n\n        let insMode = !!insertMode ? insertMode : VideoInsertMode.APPEND;\n        switch (insMode) {\n            case VideoInsertMode.AFTER:\n                targEl.parentNode!!.insertBefore(video, targEl.nextSibling);\n                break;\n            case VideoInsertMode.APPEND:\n                targEl.appendChild(video);\n                break;\n            case VideoInsertMode.BEFORE:\n                targEl.parentNode!!.insertBefore(video, targEl);\n                break;\n            case VideoInsertMode.PREPEND:\n                targEl.insertBefore(video, targEl.childNodes[0]);\n                break;\n            case VideoInsertMode.REPLACE:\n                targEl.parentNode!!.replaceChild(video, targEl);\n                break;\n            default:\n                insMode = VideoInsertMode.APPEND;\n                targEl.appendChild(video);\n                break;\n        }\n\n        const v: StreamManagerVideo = {\n            targetElement: targEl,\n            video,\n            insertMode: insMode,\n            id: video.id,\n            canplayListenerAdded: false\n        };\n        this.pushNewStreamManagerVideo(v);\n\n        this.ee.emitEvent('videoElementCreated', [new VideoElementEvent(v.video, this, 'videoElementCreated')]);\n        this.lazyLaunchVideoElementCreatedEvent = !!this.firstVideoElement;\n\n        return video;\n    }\n\n    /**\n     * Updates the current configuration for the {@link PublisherSpeakingEvent} feature and the [StreamManagerEvent.streamAudioVolumeChange](/en/stable/api/openvidu-browser/classes/StreamManagerEvent.html) feature for this specific\n     * StreamManager audio stream, overriding the global options set with {@link OpenVidu.setAdvancedConfiguration}. This way you can customize the audio events options\n     * for each specific StreamManager and change them dynamically.\n     *\n     * @param publisherSpeakingEventsOptions New options to be applied to this StreamManager's audio stream. It is an object which includes the following optional properties:\n     * - `interval`: (number) how frequently the analyser polls the audio stream to check if speaking has started/stopped or audio volume has changed. Default **100** (ms)\n     * - `threshold`: (number) the volume at which _publisherStartSpeaking_, _publisherStopSpeaking_ events will be fired. Default **-50** (dB)\n     */\n    updatePublisherSpeakingEventsOptions(publisherSpeakingEventsOptions: { interval?: number; threshold?: number }): void {\n        const currentHarkOptions = !!this.stream.harkOptions\n            ? this.stream.harkOptions\n            : this.stream.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {};\n        const newInterval =\n            typeof publisherSpeakingEventsOptions.interval === 'number'\n                ? publisherSpeakingEventsOptions.interval\n                : typeof currentHarkOptions.interval === 'number'\n                ? currentHarkOptions.interval\n                : 100;\n        const newThreshold =\n            typeof publisherSpeakingEventsOptions.threshold === 'number'\n                ? publisherSpeakingEventsOptions.threshold\n                : typeof currentHarkOptions.threshold === 'number'\n                ? currentHarkOptions.threshold\n                : -50;\n        this.stream.harkOptions = {\n            interval: newInterval,\n            threshold: newThreshold\n        };\n        if (!!this.stream.speechEvent) {\n            this.stream.speechEvent.setInterval(newInterval);\n            this.stream.speechEvent.setThreshold(newThreshold);\n        }\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    initializeVideoProperties(video: HTMLVideoElement): void {\n        if (!(!this.remote && this.stream.displayMyRemote())) {\n            // Avoid setting the MediaStream into the srcObject if remote subscription before publishing\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                // If srcObject already set don't do it again\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n        video.autoplay = true;\n        video.controls = false;\n\n        if (\n            platform.isSafariBrowser() ||\n            (platform.isIPhoneOrIPad() &&\n                (platform.isChromeMobileBrowser() ||\n                    platform.isEdgeMobileBrowser() ||\n                    platform.isOperaMobileBrowser() ||\n                    platform.isFirefoxMobileBrowser()))\n        ) {\n            video.playsInline = true;\n        }\n\n        if (!video.id) {\n            video.id = (this.remote ? 'remote-' : 'local-') + 'video-' + this.stream.streamId;\n            // DEPRECATED property: assign once the property id if the user provided a valid targetElement\n            if (!this.id && !!this.targetElement) {\n                this.id = video.id;\n            }\n        }\n\n        if (this.remote && this.isMirroredVideo(video)) {\n            // Subscriber video associated to a previously mirrored video element\n            this.removeMirrorVideo(video);\n        } else if (!this.remote && !this.stream.displayMyRemote()) {\n            // Publisher video\n            video.muted = true;\n            if (this.isMirroredVideo(video) && !this.stream.outboundStreamOpts.publisherProperties.mirror) {\n                // If the video was already rotated and now is set to not mirror\n                this.removeMirrorVideo(video);\n            } else if (this.stream.outboundStreamOpts.publisherProperties.mirror && !this.stream.isSendScreen()) {\n                // If the video is now set to mirror and is not screen share\n                this.mirrorVideo(video);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    removeAllVideos(): void {\n        for (let i = this.stream.session.streamManagers.length - 1; i >= 0; --i) {\n            if (this.stream.session.streamManagers[i] === this) {\n                this.stream.session.streamManagers.splice(i, 1);\n            }\n        }\n\n        this.videos.forEach((streamManagerVideo) => {\n            // Remove oncanplay event listener (only OpenVidu browser listener, not the user ones)\n            if (!!streamManagerVideo.video && !!streamManagerVideo.video.removeEventListener) {\n                streamManagerVideo.video.removeEventListener('canplay', this.canPlayListener);\n            }\n            streamManagerVideo.canplayListenerAdded = false;\n            if (!!streamManagerVideo.targetElement) {\n                // Only remove from DOM videos created by OpenVidu Browser (those generated by passing a valid targetElement in OpenVidu.initPublisher\n                // and Session.subscribe or those created by StreamManager.createVideoElement). All this videos triggered a videoElementCreated event\n                streamManagerVideo.video.parentNode!.removeChild(streamManagerVideo.video);\n                this.ee.emitEvent('videoElementDestroyed', [\n                    new VideoElementEvent(streamManagerVideo.video, this, 'videoElementDestroyed')\n                ]);\n            }\n            // Remove srcObject from the video\n            this.removeSrcObject(streamManagerVideo);\n            // Remove from collection of videos every video managed by OpenVidu Browser\n            this.videos.filter((v) => !v.targetElement);\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    disassociateVideo(video: HTMLVideoElement): boolean {\n        let disassociated = false;\n        for (let i = 0; i < this.videos.length; i++) {\n            if (this.videos[i].video === video) {\n                this.videos[i].video.removeEventListener('canplay', this.canPlayListener);\n                this.videos.splice(i, 1);\n                disassociated = true;\n                logger.info('Video element disassociated from ', this);\n                break;\n            }\n        }\n        return disassociated;\n    }\n\n    /**\n     * @hidden\n     */\n    addPlayEventToFirstVideo() {\n        if (!!this.videos[0] && !!this.videos[0].video && !this.videos[0].canplayListenerAdded) {\n            this.activateStreamPlayingEventExceptionTimeout();\n            this.videos[0].video.addEventListener('canplay', this.canPlayListener);\n            this.videos[0].canplayListenerAdded = true;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    updateMediaStream(mediaStream: MediaStream) {\n        this.videos.forEach((streamManagerVideo) => {\n            streamManagerVideo.video.srcObject = mediaStream;\n            if (platform.isIonicIos()) {\n                // iOS Ionic. LIMITATION: must reinsert the video in the DOM for\n                // the media stream to be updated\n                const vParent = streamManagerVideo.video.parentElement;\n                const newVideo = streamManagerVideo.video;\n                vParent!!.replaceChild(newVideo, streamManagerVideo.video);\n                streamManagerVideo.video = newVideo;\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    emitEvent(type: string, eventArray: any[]): void {\n        this.ee.emitEvent(type, eventArray);\n    }\n\n    /**\n     * @hidden\n     */\n    createVideo(): HTMLVideoElement {\n        return document.createElement('video');\n    }\n\n    /**\n     * @hidden\n     */\n    removeSrcObject(streamManagerVideo: StreamManagerVideo) {\n        streamManagerVideo.video.srcObject = null;\n        this.deactivateStreamPlayingEventExceptionTimeout();\n    }\n\n    /**\n     * @hidden\n     */\n    abstract replaceTrackInMediaStream(track: MediaStreamTrack, updateLastConstraints: boolean): void;\n\n    /* Private methods */\n\n    protected pushNewStreamManagerVideo(streamManagerVideo: StreamManagerVideo) {\n        this.videos.push(streamManagerVideo);\n        this.addPlayEventToFirstVideo();\n        if (this.stream.session.streamManagers.indexOf(this) === -1) {\n            this.stream.session.streamManagers.push(this);\n        }\n    }\n\n    private mirrorVideo(video: HTMLVideoElement): void {\n        if (!platform.isIonicIos()) {\n            video.style.transform = 'rotateY(180deg)';\n            video.style.webkitTransform = 'rotateY(180deg)';\n        }\n    }\n\n    private removeMirrorVideo(video: HTMLVideoElement): void {\n        video.style.transform = 'unset';\n        video.style.webkitTransform = 'unset';\n    }\n\n    private isMirroredVideo(video: HTMLVideoElement): boolean {\n        return video.style.transform === 'rotateY(180deg)' || video.style.webkitTransform === 'rotateY(180deg)';\n    }\n\n    private activateStreamPlayingEventExceptionTimeout() {\n        if (!this.remote) {\n            // ExceptionEvent NO_STREAM_PLAYING_EVENT is only for subscribers\n            return;\n        }\n        if (this.streamPlayingEventExceptionTimeout != null) {\n            // The timeout is already activated\n            return;\n        }\n        // Trigger ExceptionEvent NO_STREAM_PLAYING_EVENT if after timeout there is no 'canplay' event\n        const msTimeout = this.stream.session.openvidu.advancedConfiguration.noStreamPlayingEventExceptionTimeout || 4000;\n        this.streamPlayingEventExceptionTimeout = setTimeout(() => {\n            const msg =\n                'StreamManager of Stream ' +\n                this.stream.streamId +\n                ' (' +\n                (this.remote ? 'Subscriber' : 'Publisher') +\n                ') did not trigger \"streamPlaying\" event in ' +\n                msTimeout +\n                ' ms';\n            logger.warn(msg);\n            this.stream.session.emitEvent('exception', [\n                new ExceptionEvent(this.stream.session, ExceptionEventName.NO_STREAM_PLAYING_EVENT, (<any>this) as Subscriber, msg)\n            ]);\n            delete this.streamPlayingEventExceptionTimeout;\n        }, msTimeout);\n    }\n\n    private deactivateStreamPlayingEventExceptionTimeout() {\n        clearTimeout(this.streamPlayingEventExceptionTimeout as any);\n        delete this.streamPlayingEventExceptionTimeout;\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Stream } from './Stream';\nimport { StreamManager } from './StreamManager';\nimport { SubscriberProperties } from '../OpenViduInternal/Interfaces/Public/SubscriberProperties';\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Packs remote media streams. Participants automatically receive them when others publish their streams. Initialized with {@link Session.subscribe} method\n *\n * See available event listeners at {@link StreamManagerEventMap}.\n */\nexport class Subscriber extends StreamManager {\n    /**\n     * @hidden\n     */\n    properties: SubscriberProperties;\n\n    /**\n     * @hidden\n     */\n    constructor(stream: Stream, targEl: string | HTMLElement | undefined, properties: SubscriberProperties) {\n        super(stream, targEl);\n        this.element = this.targetElement;\n        this.stream = stream;\n        this.properties = properties;\n    }\n\n    /**\n     * Subscribe or unsubscribe from the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the audio stream, `false` to unsubscribe from it\n     */\n    subscribeToAudio(value: boolean): Subscriber {\n        this.stream\n            .getMediaStream()\n            .getAudioTracks()\n            .forEach((track) => {\n                track.enabled = value;\n            });\n        this.stream.audioActive = value;\n        logger.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its audio stream');\n        return this;\n    }\n\n    /**\n     * Subscribe or unsubscribe from the video stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the video stream, `false` to unsubscribe from it\n     */\n    subscribeToVideo(value: boolean): Subscriber {\n        this.stream\n            .getMediaStream()\n            .getVideoTracks()\n            .forEach((track) => {\n                track.enabled = value;\n            });\n        this.stream.videoActive = value;\n        logger.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its video stream');\n        return this;\n    }\n\n    /* Hidden methods */\n\n    /**\n     * @hidden\n     */\n    replaceTrackInMediaStream(track: MediaStreamTrack, updateLastConstraints: boolean): void {\n        const mediaStream: MediaStream = this.stream.getMediaStream();\n        let removedTrack: MediaStreamTrack;\n        if (track.kind === 'video') {\n            removedTrack = mediaStream.getVideoTracks()[0];\n            if (updateLastConstraints) {\n                this.stream.lastVideoTrackConstraints = track.getConstraints();\n            }\n        } else {\n            removedTrack = mediaStream.getAudioTracks()[0];\n        }\n        mediaStream.removeTrack(removedTrack);\n        removedTrack.stop();\n        mediaStream.addTrack(track);\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum LocalRecorderState {\n    READY = 'READY',\n    RECORDING = 'RECORDING',\n    PAUSED = 'PAUSED',\n    FINISHED = 'FINISHED'\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * Defines property {@link OpenViduError.name}\n */\nexport enum OpenViduErrorName {\n    /**\n     * Browser is not supported by OpenVidu.\n     * Returned upon unsuccessful {@link Session.connect}\n     */\n    BROWSER_NOT_SUPPORTED = 'BROWSER_NOT_SUPPORTED',\n\n    /**\n     * The user hasn't granted permissions to the required input device when the browser asked for them.\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    DEVICE_ACCESS_DENIED = 'DEVICE_ACCESS_DENIED',\n\n    /**\n     * The required input device is probably being used by other process when the browser asked for it.\n     * This error can also be triggered when the user granted permission to use the devices but a hardware\n     * error occurred at the OS, browser or web page level, which prevented access to the device.\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    DEVICE_ALREADY_IN_USE = 'DEVICE_ALREADY_IN_USE',\n\n    /**\n     * The user hasn't granted permissions to capture some desktop screen when the browser asked for them.\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    SCREEN_CAPTURE_DENIED = 'SCREEN_CAPTURE_DENIED',\n\n    /**\n     * Browser does not support screen sharing.\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    SCREEN_SHARING_NOT_SUPPORTED = 'SCREEN_SHARING_NOT_SUPPORTED',\n\n    /**\n     * Only for Chrome, there's no screen sharing extension installed\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    SCREEN_EXTENSION_NOT_INSTALLED = 'SCREEN_EXTENSION_NOT_INSTALLED',\n\n    /**\n     * Only for Chrome, the screen sharing extension is installed but is disabled\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    SCREEN_EXTENSION_DISABLED = 'SCREEN_EXTENSION_DISABLED',\n\n    /**\n     * No video input device found with the provided deviceId (property {@link PublisherProperties.videoSource})\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    INPUT_VIDEO_DEVICE_NOT_FOUND = 'INPUT_VIDEO_DEVICE_NOT_FOUND',\n\n    /**\n     * No audio input device found with the provided deviceId (property {@link PublisherProperties.audioSource})\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    INPUT_AUDIO_DEVICE_NOT_FOUND = 'INPUT_AUDIO_DEVICE_NOT_FOUND',\n\n    /**\n     * There was an unknown error when trying to access the specified audio device\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    INPUT_AUDIO_DEVICE_GENERIC_ERROR = 'INPUT_AUDIO_DEVICE_GENERIC_ERROR',\n\n    /**\n     * Method {@link OpenVidu.initPublisher} or  {@link OpenVidu.getUserMedia} has been called with properties `videoSource` and `audioSource` of\n     * {@link PublisherProperties} parameter both set to *false* or *null*\n     */\n    NO_INPUT_SOURCE_SET = 'NO_INPUT_SOURCE_SET',\n\n    /**\n     * Some media property of {@link PublisherProperties} such as `frameRate` or `resolution` is not supported\n     * by the input devices (whenever it is possible they are automatically adjusted to the most similar value).\n     * Returned upon unsuccessful {@link OpenVidu.initPublisher} or {@link OpenVidu.getUserMedia}\n     */\n    PUBLISHER_PROPERTIES_ERROR = 'PUBLISHER_PROPERTIES_ERROR',\n\n    /**\n     * The client tried to call a method without the required permissions. This can occur for methods {@link Session.publish},\n     * {@link Session.forceUnpublish}, {@link Session.forceDisconnect}, {@link Stream.applyFilter}, {@link Stream.removeFilter}\n     */\n    OPENVIDU_PERMISSION_DENIED = 'OPENVIDU_PERMISSION_DENIED',\n\n    /**\n     * There is no connection to the Session. This error will be thrown when any method requiring a connection to\n     * openvidu-server is called before successfully calling method {@link Session.connect}\n     */\n    OPENVIDU_NOT_CONNECTED = 'OPENVIDU_NOT_CONNECTED',\n\n    /**\n     * Error related to [Virtual Background](/en/stable/advanced-features/virtual-background/)\n     */\n    VIRTUAL_BACKGROUND_ERROR = 'VIRTUAL_BACKGROUND_ERROR',\n\n    /**\n     * Generic error\n     */\n    GENERIC_ERROR = 'GENERIC_ERROR'\n}\n\n/**\n * Simple object to identify runtime errors on the client side\n */\nexport class OpenViduError {\n    /**\n     * Uniquely identifying name of the error\n     */\n    name: OpenViduErrorName;\n\n    /**\n     * Full description of the error\n     */\n    message: string;\n\n    /**\n     * @hidden\n     */\n    constructor(name: OpenViduErrorName, message: string) {\n        this.name = name;\n        this.message = message;\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum TypeOfVideo {\n    CAMERA = 'CAMERA',\n    SCREEN = 'SCREEN',\n    CUSTOM = 'CUSTOM',\n    IPCAM = 'IPCAM'\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * How the video will be inserted in the DOM for Publishers and Subscribers. See {@link PublisherProperties.insertMode} and {@link SubscriberProperties.insertMode}\n */\nexport enum VideoInsertMode {\n    /**\n     * Video inserted after the target element (as next sibling)\n     */\n    AFTER = 'AFTER',\n    /**\n     * Video inserted as last child of the target element\n     */\n    APPEND = 'APPEND',\n    /**\n     * Video inserted before the target element (as previous sibling)\n     */\n    BEFORE = 'BEFORE',\n    /**\n     * Video inserted as first child of the target element\n     */\n    PREPEND = 'PREPEND',\n    /**\n     * Video replaces target element\n     */\n    REPLACE = 'REPLACE'\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { ConnectionEventReason } from './Types/Types';\n\n/**\n * Triggered by:\n * - {@link SessionEventMap.connectionCreated}\n * - {@link SessionEventMap.connectionDestroyed}\n */\nexport class ConnectionEvent extends Event {\n    /**\n     * Connection object that was created or destroyed\n     */\n    connection: Connection;\n\n    /**\n     * For `connectionDestroyed` event:\n     * - \"disconnect\": the remote user has called `Session.disconnect()`\n     * - \"forceDisconnectByUser\": the remote user has been evicted from the Session by other user calling `Session.forceDisconnect()`\n     * - \"forceDisconnectByServer\": the remote user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the remote user network connection has dropped\n     * - \"nodeCrashed\": a node has crashed in the server side\n     *\n     * For `connectionCreated` event an empty string\n     */\n    reason: ConnectionEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session, type: string, connection: Connection, reason: ConnectionEventReason) {\n        super(cancelable, target, type);\n        this.connection = connection;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { Event } from './Event';\n\n/**\n * **This feature is part of OpenVidu\n * <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin: 0 2px 0 2px; border-radius: 3px; font-size: 13px; line-height:21px; text-decoration: none; font-family: Montserrat, sans-serif\">PRO</a>\n * and\n * <a href=\"https://docs.openvidu.io/en/stable/openvidu-enterprise/\" style=\"display: inline-block; background-color: rgb(156, 39, 176); color: white; font-weight: bold; padding: 0px 5px; margin: 0 2px 0 2px; border-radius: 3px; font-size: 13px; line-height:21px; text-decoration: none; font-family: Montserrat, sans-serif\">ENTERPRISE</a>\n * editions**\n *\n * Triggered by {@link SessionEventMap.connectionPropertyChanged}\n */\nexport class ConnectionPropertyChangedEvent extends Event {\n    /**\n     * The Connection whose property has changed\n     */\n    connection: Connection;\n\n    /**\n     * The property of the stream that changed. This value is either `\"role\"` or `\"record\"`\n     */\n    changedProperty: string;\n\n    /**\n     * New value of the property (after change, current value)\n     */\n    newValue: Object;\n\n    /**\n     * Previous value of the property (before change)\n     */\n    oldValue: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, connection: Connection, changedProperty: string, newValue: Object, oldValue: Object) {\n        super(false, target, 'connectionPropertyChanged');\n        this.connection = connection;\n        this.changedProperty = changedProperty;\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Filter } from '../../OpenVidu/Filter';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\nimport { Session } from '../../OpenVidu/Session';\n\nexport abstract class Event {\n    /**\n     * Whether the event has a default behavior that may be prevented by calling {@link Event.preventDefault}\n     */\n    cancelable: boolean;\n\n    /**\n     * The object that dispatched the event\n     */\n    target: Session | StreamManager | Filter;\n\n    /**\n     * The type of event. This is the same string you pass as first parameter when calling method `on()` of any object implementing {@link EventDispatcher} interface\n     */\n    type: string;\n\n    /**\n     * @hidden\n     */\n    hasBeenPrevented = false;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session | StreamManager | Filter, type: string) {\n        this.cancelable = cancelable;\n        this.target = target;\n        this.type = type;\n    }\n\n    /**\n     * Whether the default beahivour of the event has been prevented or not. Call {@link Event.preventDefault} to prevent it\n     */\n    isDefaultPrevented(): boolean {\n        return this.hasBeenPrevented;\n    }\n\n    /**\n     * Prevents the default behavior of the event. The following events have a default behavior:\n     *\n     * - `sessionDisconnected`: dispatched by {@link Session} object, automatically unsubscribes the leaving participant from every Subscriber object of the session (this includes closing the RTCPeerConnection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to each Subscriber (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement` in method {@link Session.subscribe} or\n     * by calling {@link Subscriber.createVideoElement}). For every video removed, each Subscriber object will also dispatch a `videoElementDestroyed` event.\n     *\n     * - `streamDestroyed`:\n     *   - If dispatched by a {@link Publisher} (*you* have unpublished): automatically stops all media tracks and deletes any HTML video element associated to it (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement`\n     * in method {@link OpenVidu.initPublisher} or by calling {@link Publisher.createVideoElement}). For every video removed, the Publisher object will also dispatch a `videoElementDestroyed` event.\n     *   - If dispatched by {@link Session} (*other user* has unpublished): automatically unsubscribes the proper Subscriber object from the session (this includes closing the RTCPeerConnection and disposing all MediaStreamTracks)\n     * and also deletes any HTML video element associated to that Subscriber (only those created by OpenVidu Browser, either by passing a valid parameter as `targetElement` in method {@link Session.subscribe} or\n     * by calling {@link Subscriber.createVideoElement}). For every video removed, the Subscriber object will also dispatch a `videoElementDestroyed` event.\n     */\n    preventDefault() {\n        // tslint:disable-next-line:no-empty\n        this.callDefaultBehavior = () => {};\n        this.hasBeenPrevented = true;\n    }\n\n    /**\n     * @hidden\n     */\n    abstract callDefaultBehavior();\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { Subscriber } from '../../OpenVidu/Subscriber';\nimport { Event } from './Event';\n\n/**\n * Defines property {@link ExceptionEvent.name}\n */\nexport enum ExceptionEventName {\n    /**\n     * There was an unexpected error on the server-side processing an ICE candidate generated and sent by the client-side.\n     *\n     * {@link ExceptionEvent} objects with this {@link ExceptionEvent.name} will have as {@link ExceptionEvent.origin} property a {@link Session} object.\n     */\n    ICE_CANDIDATE_ERROR = 'ICE_CANDIDATE_ERROR',\n\n    /**\n     * The [ICE connection state](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState)\n     * of an [RTCPeerConnection](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection) reached `failed` status.\n     *\n     * This is a terminal error that won't have any kind of possible recovery. If the client is still connected to OpenVidu Server,\n     * then an automatic reconnection process of the media stream is immediately performed. If the ICE connection has broken due to\n     * a total network drop, then no automatic reconnection process will be possible.\n     *\n     * {@link ExceptionEvent} objects with this {@link ExceptionEvent.name} will have as {@link ExceptionEvent.origin} property a {@link Stream} object.\n     */\n    ICE_CONNECTION_FAILED = 'ICE_CONNECTION_FAILED',\n\n    /**\n     * The [ICE connection state](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState)\n     * of an [RTCPeerConnection](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection) reached `disconnected` status.\n     *\n     * This is not a terminal error, and it is possible for the ICE connection to be reconnected. If the client is still connected to\n     * OpenVidu Server and after certain timeout the ICE connection has not reached a success or terminal status, then an automatic\n     * reconnection process of the media stream is performed. If the ICE connection has broken due to a total network drop, then no\n     * automatic reconnection process will be possible.\n     *\n     * You can customize the timeout for the reconnection attempt with property {@link OpenViduAdvancedConfiguration.iceConnectionDisconnectedExceptionTimeout},\n     * which by default is 4000 milliseconds.\n     *\n     * {@link ExceptionEvent} objects with this {@link ExceptionEvent.name} will have as {@link ExceptionEvent.origin} property a {@link Stream} object.\n     */\n    ICE_CONNECTION_DISCONNECTED = 'ICE_CONNECTION_DISCONNECTED',\n\n    /**\n     * A {@link Subscriber} object has not fired event `streamPlaying` after certain timeout. `streamPlaying` event belongs to {@link StreamManagerEvent}\n     * category. It wraps Web API native event [canplay](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event).\n     *\n     * OpenVidu Browser can take care of the video players (see [here](/en/stable/cheatsheet/manage-videos/#let-openvidu-take-care-of-the-video-players)),\n     * or you can take care of video players on your own (see [here](/en/stable/cheatsheet/manage-videos/#you-take-care-of-the-video-players)).\n     * Either way, whenever a {@link Subscriber} object is commanded to attach its {@link Stream} to a video element, it is supposed to fire `streamPlaying`\n     * event shortly after. If it does not, then we can safely assume that something wrong has happened while playing the remote video and the\n     * application may be notified through this specific ExceptionEvent.\n     *\n     * The timeout can be configured with property {@link OpenViduAdvancedConfiguration.noStreamPlayingEventExceptionTimeout}. By default it is 4000 milliseconds.\n     *\n     * This is just an informative exception. It only means that a remote Stream that is supposed to be playing by a video player has not done so\n     * in a reasonable time. But the lack of the event can be caused by multiple reasons. If a Subscriber is not playing its Stream, the origin\n     * of the problem could be located at the Publisher side. Or may be caused by a transient network problem. But it also could be a problem with\n     * autoplay permissions. Bottom line, the cause can be very varied, and depending on the application the lack of the event could even be expected.\n     *\n     * {@link ExceptionEvent} objects with this {@link ExceptionEvent.name} will have as {@link ExceptionEvent.origin} property a {@link Subscriber} object.\n     */\n    NO_STREAM_PLAYING_EVENT = 'NO_STREAM_PLAYING_EVENT',\n\n    /**\n     * There has been a server-side disconnection of the Speech To Text module. From the moment this exception is fired to the moment method\n     * {@link Session.subscribeToSpeechToText} is called again, the transcription of the audio stream will not be available and no {@link SpeechToTextEvent}\n     * will be fired.\n     *\n     * {@link ExceptionEvent} objects with this {@link ExceptionEvent.name} will have as {@link ExceptionEvent.origin} property a {@link Session} object.\n     */\n    SPEECH_TO_TEXT_DISCONNECTED = 'SPEECH_TO_TEXT_DISCONNECTED',\n}\n\n/**\n * Triggered by {@link SessionEventMap.exception}\n */\nexport class ExceptionEvent extends Event {\n    /**\n     * Name of the exception\n     */\n    name: ExceptionEventName;\n\n    /**\n     * Object affected by the exception. Depending on the {@link ExceptionEvent.name} property:\n     * - {@link Session}: `ICE_CANDIDATE_ERROR`\n     * - {@link Stream}: `ICE_CONNECTION_FAILED`, `ICE_CONNECTION_DISCONNECTED`\n     * - {@link Subscriber}: `NO_STREAM_PLAYING_EVENT`\n     */\n    origin: Session | Stream | Subscriber;\n\n    /**\n     * Informative description of the exception\n     */\n    message: string;\n\n    /**\n     * Any extra information associated to the exception\n     */\n    data?: any;\n\n    /**\n     * @hidden\n     */\n    constructor(session: Session, name: ExceptionEventName, origin: Session | Stream | Subscriber, message: string, data?: any) {\n        super(false, session, 'exception');\n        this.name = name;\n        this.origin = origin;\n        this.message = message;\n        this.data = data;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Filter } from '../../OpenVidu/Filter';\n\n/**\n * Defines every event dispatched by audio/video stream filters. You can subscribe to filter events by calling {@link Filter.addEventListener}\n */\nexport class FilterEvent extends Event {\n    /**\n     * Data of the event\n     */\n    data: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Filter, eventType: string, data: Object) {\n        super(false, target, eventType);\n        this.data = data;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { Connection } from '../../OpenVidu/Connection';\n\n/**\n * Triggered by {@link SessionEventMap.networkQualityLevelChanged}\n */\nexport class NetworkQualityLevelChangedEvent extends Event {\n    /**\n     * New value of the network quality level\n     */\n    newValue: number;\n\n    /**\n     * Old value of the network quality level\n     */\n    oldValue: number;\n\n    /**\n     * Connection for whom the network quality level changed\n     */\n    connection: Connection;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, newValue: number, oldValue: number, connection: Connection) {\n        super(false, target, 'networkQualityLevelChanged');\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n        this.connection = connection;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Triggered by:\n * - `publisherStartSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStartSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStartSpeaking) objects)\n * - `publisherStopSpeaking` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#publisherStopSpeaking) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#publisherStopSpeaking) objects)\n */\nexport class PublisherSpeakingEvent extends Event {\n    /**\n     * The client that started or stopped speaking\n     */\n    connection: Connection;\n\n    /**\n     * The streamId of the Stream affected by the speaking event\n     */\n    streamId: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session | StreamManager, type: string, connection: Connection, streamId: string) {\n        super(false, target, type);\n        this.type = type;\n        this.connection = connection;\n        this.streamId = streamId;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { RecordingEventReason } from './Types/Types';\n\n/**\n * Triggered by:\n * - {@link SessionEventMap.recordingStarted}\n * - {@link SessionEventMap.recordingStopped}\n */\nexport class RecordingEvent extends Event {\n    /**\n     * The recording ID generated in openvidu-server\n     */\n    id: string;\n\n    /**\n     * The recording name you supplied to openvidu-server. For example, to name your recording file MY_RECORDING:\n     * - With **API REST**: POST to `/api/recordings/start` passing JSON body `{\"session\":\"sessionId\",\"name\":\"MY_RECORDING\"}`\n     * - With **openvidu-java-client**: `OpenVidu.startRecording(sessionId, \"MY_RECORDING\")` or `OpenVidu.startRecording(sessionId, new RecordingProperties.Builder().name(\"MY_RECORDING\").build())`\n     * - With **openvidu-node-client**: `OpenVidu.startRecording(sessionId, \"MY_RECORDING\")` or `OpenVidu.startRecording(sessionId, {name: \"MY_RECORDING\"})`\n     *\n     * If no name is supplied, this property will be undefined and the recorded file will be named after property {@link id}\n     */\n    name?: string;\n\n    /**\n     * For 'recordingStopped' event:\n     * - \"recordingStoppedByServer\": the recording has been gracefully stopped by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"automaticStop\": see [Automatic stop of recordings](/en/stable/advanced-features/recording/#automatic-stop-of-recordings)\n     * - \"nodeCrashed\": a node has crashed in the server side\n     *\n     * For 'recordingStarted' empty string\n     */\n    reason?: RecordingEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, type: string, id: string, name: string, reason?: RecordingEventReason) {\n        super(false, target, type);\n        this.id = id;\n        if (name !== id) {\n            this.name = name;\n        }\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { ConnectionEventReason } from './Types/Types';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Triggered by {@link SessionEventMap.sessionDisconnected}\n */\nexport class SessionDisconnectedEvent extends Event {\n    /**\n     * - \"disconnect\": you have called `Session.disconnect()`\n     * - \"forceDisconnectByUser\": you have been evicted from the Session by other user calling `Session.forceDisconnect()`\n     * - \"forceDisconnectByServer\": you have been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": your network connection has dropped. Before a SessionDisconnectedEvent with this reason is triggered,\n     *      Session object will always have previously dispatched a `reconnecting` event. If the reconnection process succeeds,\n     *      Session object will dispatch a `reconnected` event. If it fails, Session object will dispatch a SessionDisconnectedEvent\n     *      with reason \"networkDisconnect\"\n     * - \"nodeCrashed\": a node has crashed in the server side. You can use this reason to ask your application's backend to reconnect\n     * to a new session to replace the crashed one\n     */\n    reason: ConnectionEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, reason: ConnectionEventReason) {\n        super(true, target, 'sessionDisconnected');\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    callDefaultBehavior() {\n        logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n\n        const session = <Session>this.target;\n\n        // Dispose and delete all remote Connections\n        session.remoteConnections.forEach((remoteConnection) => {\n            const connectionId = remoteConnection.connectionId;\n            if (!!session.remoteConnections.get(connectionId)?.stream) {\n                session.remoteConnections.get(connectionId)?.stream!.disposeWebRtcPeer();\n                session.remoteConnections.get(connectionId)?.stream!.disposeMediaStream();\n                if (session.remoteConnections.get(connectionId)?.stream!.streamManager) {\n                    session.remoteConnections.get(connectionId)?.stream!.streamManager.removeAllVideos();\n                }\n                const streamId = session.remoteConnections.get(connectionId)?.stream?.streamId;\n                if (!!streamId) {\n                    session.remoteStreamsCreated.delete(streamId);\n                }\n                session.remoteConnections.get(connectionId)?.dispose();\n            }\n            session.remoteConnections.delete(connectionId);\n        });\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\n\n/**\n * Triggered by {@link SessionEventMap.signal}\n */\nexport class SignalEvent extends Event {\n    /**\n     * The type of signal. It is string `\"signal\"` for those signals sent with no {@link SignalOptions.type} property, and `\"signal:type\"` if was sent with a\n     * valid {@link SignalOptions.type} property.\n     *\n     * The client must be specifically subscribed to `Session.on('signal:type', function(signalEvent) {...})` to trigger that type of signal.\n     *\n     * Subscribing to `Session.on('signal', function(signalEvent) {...})` will trigger all signals, no matter their type.\n     */\n    type: string;\n\n    /**\n     * The message of the signal (can be empty)\n     */\n    data?: string;\n\n    /**\n     * The client that sent the signal. This property is undefined if the signal\n     * was directly generated by the application server (not by other client)\n     */\n    from?: Connection;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, type?: string, data?: string, from?: Connection) {\n        super(false, target, 'signal');\n        if (!!type) {\n            this.type = 'signal:' + type;\n        }\n        this.data = data;\n        this.from = from;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { SpeechToTextEventReason } from './Types/Types';\n\n/**\n * Triggered by {@link SessionEventMap.speechToTextMessage}\n */\nexport class SpeechToTextEvent extends Event {\n\n    /**\n     * The {@link Connection} owning the Stream that produced the speech-to-text event.\n     * In other words, this is the participant that spoke and produced this transcription event.\n     */\n    connection: Connection;\n\n    /**\n     * The text of the event. This is the transcription for this specific piece of audio stream\n     */\n    text: string;\n\n    /**\n     * All speech-to-text events are generated \n     */\n    reason: SpeechToTextEventReason;\n\n    /**\n     * The original event from the speech to text engine. This can vary depending on the engine\n     */\n    raw: string;\n\n    /**\n     * [BCP-47](https://tools.ietf.org/html/bcp47) language tag (like \"en-US\" or \"es-ES\") of the recognized text. This will be the same as the language provided\n     * in method {@link Session.subscribeToSpeechToText} method\n     */\n    lang: string;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, connection: Connection, text: string, reason: SpeechToTextEventReason, raw: string, lang: string) {\n        super(false, target, 'speechToTextMessage');\n        this.connection = connection;\n        this.text = text;\n        this.reason = reason;\n        this.raw = raw;\n        this.lang = lang;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Publisher } from '../../OpenVidu/Publisher';\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { StreamEventReason } from './Types/Types';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\n/**\n * Triggered by:\n * - `streamCreated` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamCreated) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamCreated) objects)\n * - `streamDestroyed` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamDestroyed) and [Publisher](/en/stable/api/openvidu-browser/interfaces/PublisherEventMap.html#streamDestroyed) objects)\n */\nexport class StreamEvent extends Event {\n    /**\n     * Stream object that was created or destroyed\n     */\n    stream: Stream;\n\n    /**\n     * For 'streamDestroyed' event:\n     * - \"unpublish\": method `Session.unpublish()` has been called\n     * - \"disconnect\": method `Session.disconnect()` has been called\n     * - \"forceUnpublishByUser\": some user has called `Session.forceUnpublish()` over the Stream\n     * - \"forceDisconnectByUser\": some user has called `Session.forceDisconnect()` over the Stream\n     * - \"forceUnpublishByServer\": the user's stream has been unpublished from the Session by the application\n     * - \"forceDisconnectByServer\": the user has been evicted from the Session by the application\n     * - \"sessionClosedByServer\": the Session has been closed by the application\n     * - \"networkDisconnect\": the user's network connection has dropped\n     * - \"nodeCrashed\": a node has crashed in the server side\n     *\n     * For 'streamCreated' empty string\n     */\n    reason: StreamEventReason;\n\n    /**\n     * @hidden\n     */\n    constructor(cancelable: boolean, target: Session | Publisher, type: string, stream: Stream, reason: StreamEventReason) {\n        super(cancelable, target, type);\n        this.stream = stream;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    callDefaultBehavior() {\n        if (this.type === 'streamDestroyed') {\n            if (this.target instanceof Session) {\n                // Remote Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n                this.stream.disposeWebRtcPeer();\n            } else if (this.target instanceof Publisher) {\n                // Local Stream\n                logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Publisher'\");\n                clearInterval((<Publisher>this.target).screenShareResizeInterval);\n                this.stream.isLocalStreamReadyToPublish = false;\n\n                // Delete Publisher object from OpenVidu publishers array\n                const openviduPublishers = (<Publisher>this.target).openvidu.publishers;\n                for (let i = 0; i < openviduPublishers.length; i++) {\n                    if (openviduPublishers[i] === <Publisher>this.target) {\n                        openviduPublishers.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n\n            // Dispose the MediaStream local object\n            this.stream.disposeMediaStream();\n\n            // Remove from DOM all video elements associated to this Stream, if there's a StreamManager defined\n            // (method Session.subscribe must have been called)\n            if (this.stream.streamManager) this.stream.streamManager.removeAllVideos();\n\n            // Delete stream from Session.remoteStreamsCreated map\n            this.stream.session.remoteStreamsCreated.delete(this.stream.streamId);\n\n            // Delete StreamOptionsServer from remote Connection\n            const remoteConnection = this.stream.session.remoteConnections.get(this.stream.connection.connectionId);\n            if (!!remoteConnection && !!remoteConnection.remoteOptions) {\n                const streamOptionsServer = remoteConnection.remoteOptions.streams;\n                for (let i = streamOptionsServer.length - 1; i >= 0; --i) {\n                    if (streamOptionsServer[i].id === this.stream.streamId) {\n                        streamOptionsServer.splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Triggered by:\n * - {@link StreamManagerEventMap.streamPlaying}\n * - {@link StreamManagerEventMap.streamAudioVolumeChange}\n */\nexport class StreamManagerEvent extends Event {\n    /**\n     * For `streamAudioVolumeChange` event:\n     * - `{newValue: number, oldValue: number}`: new and old audio volume values. These values are between -100 (silence) and 0 (loudest possible volume).\n     * They are not exact and depend on how the browser is managing the audio track, but -100 and 0 can be taken as limit values.\n     *\n     * For `streamPlaying` event undefined\n     */\n    value: Object | undefined;\n\n    /**\n     * @hidden\n     */\n    constructor(target: StreamManager, type: string, value: Object | undefined) {\n        super(false, target, type);\n        this.value = value;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { Session } from '../../OpenVidu/Session';\nimport { Stream } from '../../OpenVidu/Stream';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\nimport { StreamPropertyChangedEventReason, ChangedPropertyType } from './Types/Types';\n\n/**\n * Triggered by `streamPropertyChanged` (available for [Session](/en/stable/api/openvidu-browser/interfaces/SessionEventMap.html#streamPropertyChanged) and [StreamManager](/en/stable/api/openvidu-browser/interfaces/StreamManagerEventMap.html#streamPropertyChanged) objects)\n */\nexport class StreamPropertyChangedEvent extends Event {\n    /**\n     * The Stream whose property has changed. You can always identify the user publishing the changed stream by consulting property {@link Stream.connection}\n     */\n    stream: Stream;\n\n    /**\n     * The property of the stream that changed. This value is either `\"videoActive\"`, `\"audioActive\"`, `\"videoTrack\"`, `\"audioTrack\"`, `\"videoDimensions\"` or `\"filter\"`\n     */\n    changedProperty: ChangedPropertyType;\n\n    /**\n     * Cause of the change on the stream's property:\n     * - For `videoActive`: `\"publishVideo\"`\n     * - For `audioActive`: `\"publishAudio\"`\n     * - For `videoTrack`: `\"trackReplaced\"`\n     * - For `audioTrack`: `\"trackReplaced\"`\n     * - For `videoDimensions`: `\"deviceRotated\"`, `\"screenResized\"` or `\"trackReplaced\"`\n     * - For `filter`: `\"applyFilter\"`, `\"execFilterMethod\"` or `\"removeFilter\"`\n     */\n    reason: StreamPropertyChangedEventReason;\n\n    /**\n     * New value of the property (after change, current value)\n     */\n    newValue: Object;\n\n    /**\n     * Previous value of the property (before change)\n     */\n    oldValue: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(\n        target: Session | StreamManager,\n        stream: Stream,\n        changedProperty: ChangedPropertyType,\n        newValue: Object,\n        oldValue: Object,\n        reason: StreamPropertyChangedEventReason\n    ) {\n        super(false, target, 'streamPropertyChanged');\n        this.stream = stream;\n        this.changedProperty = changedProperty;\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n        this.reason = reason;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n/**\n * Triggered by:\n * - {@link StreamManagerEventMap.videoElementCreated}\n * - {@link StreamManagerEventMap.videoElementDestroyed}\n */\nexport class VideoElementEvent extends Event {\n    /**\n     * Video element that was created or destroyed\n     */\n    element: HTMLVideoElement;\n\n    /**\n     * @hidden\n     */\n    constructor(element: HTMLVideoElement, target: StreamManager, type: string) {\n        super(false, target, type);\n        this.element = element;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() {}\n}\n","function Mapper() {\n    var sources = {};\n\n    this.forEach = function (callback) {\n        for (var key in sources) {\n            var source = sources[key];\n\n            for (var key2 in source) callback(source[key2]);\n        }\n    };\n\n    this.get = function (id, source) {\n        var ids = sources[source];\n        if (ids == undefined) return undefined;\n\n        return ids[id];\n    };\n\n    this.remove = function (id, source) {\n        var ids = sources[source];\n        if (ids == undefined) return;\n\n        delete ids[id];\n\n        // Check it's empty\n        for (var i in ids) {\n            return false;\n        }\n\n        delete sources[source];\n    };\n\n    this.set = function (value, id, source) {\n        if (value == undefined) return this.remove(id, source);\n\n        var ids = sources[source];\n        if (ids == undefined) sources[source] = ids = {};\n\n        ids[id] = value;\n    };\n}\n\nMapper.prototype.pop = function (id, source) {\n    var value = this.get(id, source);\n    if (value == undefined) return undefined;\n\n    this.remove(id, source);\n\n    return value;\n};\n\nmodule.exports = Mapper;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar JsonRpcClient = require('./jsonrpcclient');\n\nexports.JsonRpcClient = JsonRpcClient;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar RpcBuilder = require('../');\nvar WebSocketWithReconnection = require('./transports/webSocketWithReconnection');\nvar OpenViduLogger = require('../../../Logger/OpenViduLogger').OpenViduLogger;\n\nDate.now =\n    Date.now ||\n    function () {\n        return +new Date();\n    };\n\nvar PING_INTERVAL = 5000;\n\nvar RECONNECTING = 'RECONNECTING';\nvar CONNECTED = 'CONNECTED';\nvar DISCONNECTED = 'DISCONNECTED';\n\nvar Logger = OpenViduLogger.getInstance();\n\n/**\n *\n * heartbeat: interval in ms for each heartbeat message,\n * <pre>\n * ws : {\n * \turi : URI to conntect to,\n * \tonconnected : callback method to invoke when connection is successful,\n * \tondisconnect : callback method to invoke when the connection is lost (max retries for reconnecting reached),\n * \tonreconnecting : callback method to invoke when the client is reconnecting,\n * \tonreconnected : callback method to invoke when the client successfully reconnects,\n * \tonerror : callback method to invoke when there is an error\n * },\n * rpc : {\n * \trequestTimeout : timeout for a request,\n * \tsessionStatusChanged: callback method for changes in session status,\n * \tmediaRenegotiation: mediaRenegotiation\n * }\n * </pre>\n */\nfunction JsonRpcClient(configuration) {\n    var self = this;\n\n    var wsConfig = configuration.ws;\n\n    var notReconnectIfNumLessThan = -1;\n\n    var pingNextNum = 0;\n    var enabledPings = true;\n    var pingPongStarted = false;\n    var pingInterval;\n\n    var status = DISCONNECTED;\n\n    var onreconnecting = wsConfig.onreconnecting;\n    var onreconnected = wsConfig.onreconnected;\n    var onconnected = wsConfig.onconnected;\n    var onerror = wsConfig.onerror;\n\n    configuration.rpc.pull = function (params, request) {\n        request.reply(null, 'push');\n    };\n\n    wsConfig.onreconnecting = function () {\n        Logger.debug('--------- ONRECONNECTING -----------');\n        if (status === RECONNECTING) {\n            Logger.error('Websocket already in RECONNECTING state when receiving a new ONRECONNECTING message. Ignoring it');\n            return;\n        }\n\n        stopPing();\n\n        status = RECONNECTING;\n        if (onreconnecting) {\n            onreconnecting();\n        }\n    };\n\n    wsConfig.onreconnected = function () {\n        Logger.debug('--------- ONRECONNECTED -----------');\n        if (status === CONNECTED) {\n            Logger.error('Websocket already in CONNECTED state when receiving a new ONRECONNECTED message. Ignoring it');\n            return;\n        }\n        status = CONNECTED;\n\n        updateNotReconnectIfLessThan();\n\n        if (onreconnected) {\n            onreconnected();\n        }\n    };\n\n    wsConfig.onconnected = function () {\n        Logger.debug('--------- ONCONNECTED -----------');\n        if (status === CONNECTED) {\n            Logger.error('Websocket already in CONNECTED state when receiving a new ONCONNECTED message. Ignoring it');\n            return;\n        }\n        status = CONNECTED;\n\n        enabledPings = true;\n        usePing();\n\n        if (onconnected) {\n            onconnected();\n        }\n    };\n\n    wsConfig.onerror = function (error) {\n        Logger.debug('--------- ONERROR -----------');\n\n        status = DISCONNECTED;\n\n        stopPing();\n\n        if (onerror) {\n            onerror(error);\n        }\n    };\n\n    var ws = new WebSocketWithReconnection(wsConfig);\n\n    Logger.debug('Connecting websocket to URI: ' + wsConfig.uri);\n\n    var rpcBuilderOptions = {\n        request_timeout: configuration.rpc.requestTimeout,\n        ping_request_timeout: configuration.rpc.heartbeatRequestTimeout\n    };\n\n    var rpc = new RpcBuilder(RpcBuilder.packers.JsonRPC, rpcBuilderOptions, ws, function (request) {\n        Logger.debug('Received request: ' + JSON.stringify(request));\n\n        try {\n            var func = configuration.rpc[request.method];\n\n            if (func === undefined) {\n                Logger.error('Method ' + request.method + ' not registered in client');\n            } else {\n                func(request.params, request);\n            }\n        } catch (err) {\n            Logger.error('Exception processing request: ' + JSON.stringify(request));\n            Logger.error(err);\n        }\n    });\n\n    this.send = function (method, params, callback) {\n        var requestTime = Date.now();\n\n        rpc.encode(method, params, function (error, result) {\n            if (error) {\n                try {\n                    Logger.error(\n                        'ERROR:' +\n                            error.message +\n                            ' in Request: method:' +\n                            method +\n                            ' params:' +\n                            JSON.stringify(params) +\n                            ' request:' +\n                            error.request\n                    );\n                    if (error.data) {\n                        Logger.error('ERROR DATA:' + JSON.stringify(error.data));\n                    }\n                } catch (e) {}\n                error.requestTime = requestTime;\n            }\n            if (callback) {\n                if (result != undefined && result.value !== 'pong') {\n                    Logger.debug('Response: ' + JSON.stringify(result));\n                }\n                callback(error, result);\n            }\n        });\n    };\n\n    function updateNotReconnectIfLessThan() {\n        Logger.debug('notReconnectIfNumLessThan = ' + pingNextNum + ' (old=' + notReconnectIfNumLessThan + ')');\n        notReconnectIfNumLessThan = pingNextNum;\n    }\n\n    function sendPing() {\n        if (enabledPings) {\n            var params = null;\n            if (pingNextNum == 0 || pingNextNum == notReconnectIfNumLessThan) {\n                params = {\n                    interval: configuration.heartbeat || PING_INTERVAL\n                };\n            }\n            pingNextNum++;\n\n            self.send(\n                'ping',\n                params,\n                (function (pingNum) {\n                    return function (error, result) {\n                        if (error) {\n                            Logger.debug('Error in ping request #' + pingNum + ' (' + error.message + ')');\n                            if (pingNum > notReconnectIfNumLessThan) {\n                                enabledPings = false;\n                                updateNotReconnectIfLessThan();\n                                Logger.debug('Server did not respond to ping message #' + pingNum + '. Reconnecting... ');\n                                ws.reconnectWs();\n                            }\n                        }\n                    };\n                })(pingNextNum)\n            );\n        } else {\n            Logger.debug('Trying to send ping, but ping is not enabled');\n        }\n    }\n\n    /*\n     * If configuration.hearbeat has any value, the ping-pong will work with the interval\n     * of configuration.hearbeat\n     */\n    function usePing() {\n        if (!pingPongStarted) {\n            Logger.debug('Starting ping (if configured)');\n            pingPongStarted = true;\n\n            if (configuration.heartbeat != undefined) {\n                pingInterval = setInterval(sendPing, configuration.heartbeat);\n                sendPing();\n            }\n        }\n    }\n\n    function stopPing() {\n        clearInterval(pingInterval);\n        pingPongStarted = false;\n        enabledPings = false;\n        pingNextNum = -1;\n        rpc.cancel();\n    }\n\n    this.close = function (code, reason) {\n        Logger.debug('Closing  with code: ' + code + ' because: ' + reason);\n        if (pingInterval != undefined) {\n            Logger.debug('Clearing ping interval');\n            clearInterval(pingInterval);\n        }\n        pingPongStarted = false;\n        enabledPings = false;\n        ws.close(code, reason);\n    };\n\n    this.reconnect = function () {\n        ws.reconnectWs();\n    };\n\n    this.resetPing = function () {\n        enabledPings = true;\n        pingNextNum = 0;\n        usePing();\n    };\n\n    this.getReadyState = function () {\n        return ws.getReadyState();\n    };\n}\n\nmodule.exports = JsonRpcClient;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar WebSocketWithReconnection = require('./webSocketWithReconnection');\n\nexports.WebSocketWithReconnection = WebSocketWithReconnection;\n","/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nvar OpenViduLogger = require('../../../../Logger/OpenViduLogger').OpenViduLogger;\nvar Logger = OpenViduLogger.getInstance();\n\nvar MAX_RETRIES = 2000; // Forever...\nvar RETRY_TIME_MS = 3000; // FIXME: Implement exponential wait times...\n\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\n\n/*\nconfig = {\nuri : wsUri,\nonconnected : callback method to invoke when connection is successful,\nondisconnect : callback method to invoke when the connection is lost (max retries for reconnecting reached),\nonreconnecting : callback method to invoke when the client is reconnecting,\nonreconnected : callback method to invoke when the client successfully reconnects,\n};\n*/\nfunction WebSocketWithReconnection(config) {\n    var closing = false;\n    var registerMessageHandler;\n    var wsUri = config.uri;\n    var reconnecting = false;\n\n    var ws = new WebSocket(wsUri);\n\n    ws.onopen = () => {\n        Logger.debug('WebSocket connected to ' + wsUri);\n        if (config.onconnected) {\n            config.onconnected();\n        }\n    };\n\n    ws.onerror = (error) => {\n        Logger.error('Could not connect to ' + wsUri + ' (invoking onerror if defined)', error);\n        if (config.onerror) {\n            config.onerror(error);\n        }\n    };\n\n    var reconnectionOnClose = () => {\n        if (ws.readyState === CLOSED) {\n            if (closing) {\n                Logger.debug('Connection closed by user');\n            } else {\n                if (config.ismasternodecrashed()) {\n                    Logger.error('Master Node has crashed. Stopping reconnection process');\n                } else {\n                    Logger.debug('Connection closed unexpectedly. Reconnecting...');\n                    reconnect(MAX_RETRIES, 1);\n                }\n            }\n        } else {\n            Logger.debug('Close callback from previous websocket. Ignoring it');\n        }\n    };\n\n    ws.onclose = reconnectionOnClose;\n\n    function reconnect(maxRetries, numRetries) {\n        Logger.debug('reconnect (attempt #' + numRetries + ', max=' + maxRetries + ')');\n        if (numRetries === 1) {\n            if (reconnecting) {\n                Logger.warn('Trying to reconnect when already reconnecting... Ignoring this reconnection.');\n                return;\n            } else {\n                reconnecting = true;\n            }\n            if (config.onreconnecting) {\n                config.onreconnecting();\n            }\n        }\n        reconnectAux(maxRetries, numRetries);\n    }\n\n    function addReconnectionQueryParamsIfMissing(uriString) {\n        var searchParams = new URLSearchParams(new URL(uriString).search);\n        if (!searchParams.has('reconnect')) {\n            uriString = Array.from(searchParams).length > 0 ? uriString + '&reconnect=true' : uriString + '?reconnect=true';\n        }\n        return uriString;\n    }\n\n    function reconnectAux(maxRetries, numRetries) {\n        Logger.debug('Reconnection attempt #' + numRetries);\n        ws.close(4104, 'Connection closed for reconnection');\n\n        wsUri = addReconnectionQueryParamsIfMissing(wsUri);\n        ws = new WebSocket(wsUri);\n\n        ws.onopen = () => {\n            Logger.debug('Reconnected to ' + wsUri + ' after ' + numRetries + ' attempts...');\n            reconnecting = false;\n            registerMessageHandler();\n            if (config.onreconnected()) {\n                config.onreconnected();\n            }\n            ws.onclose = reconnectionOnClose;\n        };\n\n        ws.onerror = (error) => {\n            Logger.warn('Reconnection error: ', error);\n            if (numRetries === maxRetries) {\n                if (config.ondisconnect) {\n                    config.ondisconnect();\n                }\n            } else {\n                setTimeout(() => {\n                    reconnect(maxRetries, numRetries + 1);\n                }, RETRY_TIME_MS);\n            }\n        };\n    }\n\n    this.close = (code, reason) => {\n        closing = true;\n        ws.close(code, reason);\n    };\n\n    this.reconnectWs = () => {\n        Logger.debug('reconnectWs');\n        reconnect(MAX_RETRIES, 1);\n    };\n\n    this.send = (message) => {\n        ws.send(message);\n    };\n\n    this.addEventListener = (type, callback) => {\n        registerMessageHandler = () => {\n            ws.addEventListener(type, callback);\n        };\n        registerMessageHandler();\n    };\n\n    this.getReadyState = () => {\n        return ws.readyState;\n    };\n}\n\nmodule.exports = WebSocketWithReconnection;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar defineProperty_IE8 = false;\nif (Object.defineProperty) {\n    try {\n        Object.defineProperty({}, 'x', {});\n    } catch (e) {\n        defineProperty_IE8 = true;\n    }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== 'function') {\n            // closest thing possible to the ECMAScript 5\n            // internal IsCallable function\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\nvar packers = require('./packers');\nvar Mapper = require('./Mapper');\n\nvar BASE_TIMEOUT = 5000;\n\nfunction unifyResponseMethods(responseMethods) {\n    if (!responseMethods) return {};\n\n    for (var key in responseMethods) {\n        var value = responseMethods[key];\n\n        if (typeof value == 'string')\n            responseMethods[key] = {\n                response: value\n            };\n    }\n\n    return responseMethods;\n}\n\nfunction unifyTransport(transport) {\n    if (!transport) return;\n\n    // Transport as a function\n    if (transport instanceof Function)\n        return {\n            send: transport\n        };\n\n    // WebSocket & DataChannel\n    if (transport.send instanceof Function) return transport;\n\n    // Message API (Inter-window & WebWorker)\n    if (transport.postMessage instanceof Function) {\n        transport.send = transport.postMessage;\n        return transport;\n    }\n\n    // Stream API\n    if (transport.write instanceof Function) {\n        transport.send = transport.write;\n        return transport;\n    }\n\n    // Transports that only can receive messages, but not send\n    if (transport.onmessage !== undefined) return;\n    if (transport.pause instanceof Function) return;\n\n    throw new SyntaxError('Transport is not a function nor a valid object');\n}\n\n/**\n * Representation of a RPC notification\n *\n * @class\n *\n * @constructor\n *\n * @param {String} method -method of the notification\n * @param params - parameters of the notification\n */\nfunction RpcNotification(method, params) {\n    if (defineProperty_IE8) {\n        this.method = method;\n        this.params = params;\n    } else {\n        Object.defineProperty(this, 'method', {\n            value: method,\n            enumerable: true\n        });\n        Object.defineProperty(this, 'params', {\n            value: params,\n            enumerable: true\n        });\n    }\n}\n\n/**\n * @class\n *\n * @constructor\n *\n * @param {object} packer\n *\n * @param {object} [options]\n *\n * @param {object} [transport]\n *\n * @param {Function} [onRequest]\n */\nfunction RpcBuilder(packer, options, transport, onRequest) {\n    var self = this;\n\n    if (!packer) throw new SyntaxError('Packer is not defined');\n\n    if (!packer.pack || !packer.unpack) throw new SyntaxError('Packer is invalid');\n\n    var responseMethods = unifyResponseMethods(packer.responseMethods);\n\n    if (options instanceof Function) {\n        if (transport != undefined) throw new SyntaxError(\"There can't be parameters after onRequest\");\n\n        onRequest = options;\n        transport = undefined;\n        options = undefined;\n    }\n\n    if (options && options.send instanceof Function) {\n        if (transport && !(transport instanceof Function)) throw new SyntaxError('Only a function can be after transport');\n\n        onRequest = transport;\n        transport = options;\n        options = undefined;\n    }\n\n    if (transport instanceof Function) {\n        if (onRequest != undefined) throw new SyntaxError(\"There can't be parameters after onRequest\");\n\n        onRequest = transport;\n        transport = undefined;\n    }\n\n    if (transport && transport.send instanceof Function)\n        if (onRequest && !(onRequest instanceof Function)) throw new SyntaxError('Only a function can be after transport');\n\n    options = options || {};\n\n    EventEmitter.call(this);\n\n    if (onRequest) this.on('request', onRequest);\n\n    if (defineProperty_IE8) this.peerID = options.peerID;\n    else\n        Object.defineProperty(this, 'peerID', {\n            value: options.peerID\n        });\n\n    var max_retries = options.max_retries || 0;\n\n    function transportMessage(event) {\n        self.decode(event.data || event);\n    }\n\n    this.getTransport = function () {\n        return transport;\n    };\n    this.setTransport = function (value) {\n        // Remove listener from old transport\n        if (transport) {\n            // W3C transports\n            if (transport.removeEventListener) transport.removeEventListener('message', transportMessage);\n            // Node.js Streams API\n            else if (transport.removeListener) transport.removeListener('data', transportMessage);\n        }\n\n        // Set listener on new transport\n        if (value) {\n            // W3C transports\n            if (value.addEventListener) value.addEventListener('message', transportMessage);\n            // Node.js Streams API\n            else if (value.addListener) value.addListener('data', transportMessage);\n        }\n\n        transport = unifyTransport(value);\n    };\n\n    if (!defineProperty_IE8)\n        Object.defineProperty(this, 'transport', {\n            get: this.getTransport.bind(this),\n            set: this.setTransport.bind(this)\n        });\n\n    this.setTransport(transport);\n\n    var request_timeout = options.request_timeout || BASE_TIMEOUT;\n    var ping_request_timeout = options.ping_request_timeout || request_timeout;\n    var response_timeout = options.response_timeout || BASE_TIMEOUT;\n    var duplicates_timeout = options.duplicates_timeout || BASE_TIMEOUT;\n\n    var requestID = 0;\n\n    var requests = new Mapper();\n    var responses = new Mapper();\n    var processedResponses = new Mapper();\n\n    var message2Key = {};\n\n    /**\n     * Store the response to prevent to process duplicate request later\n     */\n    function storeResponse(message, id, dest) {\n        var response = {\n            message: message,\n            /** Timeout to auto-clean old responses */\n            timeout: setTimeout(function () {\n                responses.remove(id, dest);\n            }, response_timeout)\n        };\n\n        responses.set(response, id, dest);\n    }\n\n    /**\n     * Store the response to ignore duplicated messages later\n     */\n    function storeProcessedResponse(ack, from) {\n        var timeout = setTimeout(function () {\n            processedResponses.remove(ack, from);\n        }, duplicates_timeout);\n\n        processedResponses.set(timeout, ack, from);\n    }\n\n    /**\n     * Representation of a RPC request\n     *\n     * @class\n     * @extends RpcNotification\n     *\n     * @constructor\n     *\n     * @param {String} method -method of the notification\n     * @param params - parameters of the notification\n     * @param {Integer} id - identifier of the request\n     * @param [from] - source of the notification\n     */\n    function RpcRequest(method, params, id, from, transport) {\n        RpcNotification.call(this, method, params);\n\n        this.getTransport = function () {\n            return transport;\n        };\n        this.setTransport = function (value) {\n            transport = unifyTransport(value);\n        };\n\n        if (!defineProperty_IE8)\n            Object.defineProperty(this, 'transport', {\n                get: this.getTransport.bind(this),\n                set: this.setTransport.bind(this)\n            });\n\n        var response = responses.get(id, from);\n\n        /**\n         * @constant {Boolean} duplicated\n         */\n        if (!(transport || self.getTransport())) {\n            if (defineProperty_IE8) this.duplicated = Boolean(response);\n            else\n                Object.defineProperty(this, 'duplicated', {\n                    value: Boolean(response)\n                });\n        }\n\n        var responseMethod = responseMethods[method];\n\n        this.pack = packer.pack.bind(packer, this, id);\n\n        /**\n         * Generate a response to this request\n         *\n         * @param {Error} [error]\n         * @param {*} [result]\n         *\n         * @returns {string}\n         */\n        this.reply = function (error, result, transport) {\n            // Fix optional parameters\n            if (error instanceof Function || (error && error.send instanceof Function)) {\n                if (result != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n\n                transport = error;\n                result = null;\n                error = undefined;\n            } else if (result instanceof Function || (result && result.send instanceof Function)) {\n                if (transport != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n\n                transport = result;\n                result = null;\n            }\n\n            transport = unifyTransport(transport);\n\n            // Duplicated request, remove old response timeout\n            if (response) clearTimeout(response.timeout);\n\n            if (from != undefined) {\n                if (error) error.dest = from;\n\n                if (result) result.dest = from;\n            }\n\n            var message;\n\n            // New request or overriden one, create new response with provided data\n            if (error || result != undefined) {\n                if (self.peerID != undefined) {\n                    if (error) error.from = self.peerID;\n                    else result.from = self.peerID;\n                }\n\n                // Protocol indicates that responses has own request methods\n                if (responseMethod) {\n                    if (responseMethod.error == undefined && error)\n                        message = {\n                            error: error\n                        };\n                    else {\n                        var method = error ? responseMethod.error : responseMethod.response;\n\n                        message = {\n                            method: method,\n                            params: error || result\n                        };\n                    }\n                } else\n                    message = {\n                        error: error,\n                        result: result\n                    };\n\n                message = packer.pack(message, id);\n            }\n\n            // Duplicate & not-overriden request, re-send old response\n            else if (response) message = response.message;\n            // New empty reply, response null value\n            else\n                message = packer.pack(\n                    {\n                        result: null\n                    },\n                    id\n                );\n\n            // Store the response to prevent to process a duplicated request later\n            storeResponse(message, id, from);\n\n            // Return the stored response so it can be directly send back\n            transport = transport || this.getTransport() || self.getTransport();\n\n            if (transport) return transport.send(message);\n\n            return message;\n        };\n    }\n    inherits(RpcRequest, RpcNotification);\n\n    function cancel(message) {\n        var key = message2Key[message];\n        if (!key) return;\n\n        delete message2Key[message];\n\n        var request = requests.pop(key.id, key.dest);\n        if (!request) return;\n\n        clearTimeout(request.timeout);\n\n        // Start duplicated responses timeout\n        storeProcessedResponse(key.id, key.dest);\n    }\n\n    /**\n     * Allow to cancel a request and don't wait for a response\n     *\n     * If `message` is not given, cancel all the request\n     */\n    this.cancel = function (message) {\n        if (message) return cancel(message);\n\n        for (var message in message2Key) cancel(message);\n    };\n\n    this.close = function () {\n        // Prevent to receive new messages\n        var transport = this.getTransport();\n        if (transport && transport.close) transport.close(4003, 'Cancel request');\n\n        // Request & processed responses\n        this.cancel();\n\n        processedResponses.forEach(clearTimeout);\n\n        // Responses\n        responses.forEach(function (response) {\n            clearTimeout(response.timeout);\n        });\n    };\n\n    /**\n     * Generates and encode a JsonRPC 2.0 message\n     *\n     * @param {String} method -method of the notification\n     * @param params - parameters of the notification\n     * @param [dest] - destination of the notification\n     * @param {object} [transport] - transport where to send the message\n     * @param [callback] - function called when a response to this request is\n     *   received. If not defined, a notification will be send instead\n     *\n     * @returns {string} A raw JsonRPC 2.0 request or notification string\n     */\n    this.encode = function (method, params, dest, transport, callback) {\n        // Fix optional parameters\n        if (params instanceof Function) {\n            if (dest != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n\n            callback = params;\n            transport = undefined;\n            dest = undefined;\n            params = undefined;\n        } else if (dest instanceof Function) {\n            if (transport != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n\n            callback = dest;\n            transport = undefined;\n            dest = undefined;\n        } else if (transport instanceof Function) {\n            if (callback != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n\n            callback = transport;\n            transport = undefined;\n        }\n\n        if (self.peerID != undefined) {\n            params = params || {};\n\n            params.from = self.peerID;\n        }\n\n        if (dest != undefined) {\n            params = params || {};\n\n            params.dest = dest;\n        }\n\n        // Encode message\n        var message = {\n            method: method,\n            params: params\n        };\n\n        if (callback) {\n            var id = requestID++;\n            var retried = 0;\n\n            message = packer.pack(message, id);\n\n            function dispatchCallback(error, result) {\n                self.cancel(message);\n\n                callback(error, result);\n            }\n\n            var request = {\n                message: message,\n                callback: dispatchCallback,\n                responseMethods: responseMethods[method] || {}\n            };\n\n            var encode_transport = unifyTransport(transport);\n\n            function sendRequest(transport) {\n                var rt = method === 'ping' ? ping_request_timeout : request_timeout;\n                request.timeout = setTimeout(timeout, rt * Math.pow(2, retried++));\n                message2Key[message] = {\n                    id: id,\n                    dest: dest\n                };\n                requests.set(request, id, dest);\n\n                transport = transport || encode_transport || self.getTransport();\n                if (transport) return transport.send(message);\n\n                return message;\n            }\n\n            function retry(transport) {\n                transport = unifyTransport(transport);\n\n                console.warn(retried + ' retry for request message:', message);\n\n                var timeout = processedResponses.pop(id, dest);\n                clearTimeout(timeout);\n\n                return sendRequest(transport);\n            }\n\n            function timeout() {\n                if (retried < max_retries) return retry(transport);\n\n                var error = new Error('Request has timed out');\n                error.request = message;\n\n                error.retry = retry;\n\n                dispatchCallback(error);\n            }\n\n            return sendRequest(transport);\n        }\n\n        // Return the packed message\n        message = packer.pack(message);\n\n        transport = transport || this.getTransport();\n        if (transport) return transport.send(message);\n\n        return message;\n    };\n\n    /**\n     * Decode and process a JsonRPC 2.0 message\n     *\n     * @param {string} message - string with the content of the message\n     *\n     * @returns {RpcNotification|RpcRequest|undefined} - the representation of the\n     *   notification or the request. If a response was processed, it will return\n     *   `undefined` to notify that it was processed\n     *\n     * @throws {TypeError} - Message is not defined\n     */\n    this.decode = function (message, transport) {\n        if (!message) throw new TypeError('Message is not defined');\n\n        try {\n            message = packer.unpack(message);\n        } catch (e) {\n            // Ignore invalid messages\n            return console.debug(e, message);\n        }\n\n        var id = message.id;\n        var ack = message.ack;\n        var method = message.method;\n        var params = message.params || {};\n\n        var from = params.from;\n        var dest = params.dest;\n\n        // Ignore messages send by us\n        if (self.peerID != undefined && from == self.peerID) return;\n\n        // Notification\n        if (id == undefined && ack == undefined) {\n            var notification = new RpcNotification(method, params);\n\n            if (self.emit('request', notification)) return;\n            return notification;\n        }\n\n        function processRequest() {\n            // If we have a transport and it's a duplicated request, reply inmediatly\n            transport = unifyTransport(transport) || self.getTransport();\n            if (transport) {\n                var response = responses.get(id, from);\n                if (response) return transport.send(response.message);\n            }\n\n            var idAck = id != undefined ? id : ack;\n            var request = new RpcRequest(method, params, idAck, from, transport);\n\n            if (self.emit('request', request)) return;\n            return request;\n        }\n\n        function processResponse(request, error, result) {\n            request.callback(error, result);\n        }\n\n        function duplicatedResponse(timeout) {\n            console.warn('Response already processed', message);\n\n            // Update duplicated responses timeout\n            clearTimeout(timeout);\n            storeProcessedResponse(ack, from);\n        }\n\n        // Request, or response with own method\n        if (method) {\n            // Check if it's a response with own method\n            if (dest == undefined || dest == self.peerID) {\n                var request = requests.get(ack, from);\n                if (request) {\n                    var responseMethods = request.responseMethods;\n\n                    if (method == responseMethods.error) return processResponse(request, params);\n\n                    if (method == responseMethods.response) return processResponse(request, null, params);\n\n                    return processRequest();\n                }\n\n                var processed = processedResponses.get(ack, from);\n                if (processed) return duplicatedResponse(processed);\n            }\n\n            // Request\n            return processRequest();\n        }\n\n        var error = message.error;\n        var result = message.result;\n\n        // Ignore responses not send to us\n        if (error && error.dest && error.dest != self.peerID) return;\n        if (result && result.dest && result.dest != self.peerID) return;\n\n        // Response\n        var request = requests.get(ack, from);\n        if (!request) {\n            var processed = processedResponses.get(ack, from);\n            if (processed) return duplicatedResponse(processed);\n\n            return console.warn('No callback was defined for this message', message);\n        }\n\n        // Process response\n        processResponse(request, error, result);\n    };\n}\ninherits(RpcBuilder, EventEmitter);\n\nRpcBuilder.RpcNotification = RpcNotification;\n\nmodule.exports = RpcBuilder;\n\nvar clients = require('./clients');\nvar transports = require('./clients/transports');\n\nRpcBuilder.clients = clients;\nRpcBuilder.clients.transports = transports;\nRpcBuilder.packers = packers;\n","/**\n * JsonRPC 2.0 packer\n */\n\n/**\n * Pack a JsonRPC 2.0 message\n *\n * @param {Object} message - object to be packaged. It requires to have all the\n *   fields needed by the JsonRPC 2.0 message that it's going to be generated\n *\n * @return {String} - the stringified JsonRPC 2.0 message\n */\nfunction pack(message, id) {\n    var result = {\n        jsonrpc: '2.0'\n    };\n\n    // Request\n    if (message.method) {\n        result.method = message.method;\n\n        if (message.params) result.params = message.params;\n\n        // Request is a notification\n        if (id != undefined) result.id = id;\n    }\n\n    // Response\n    else if (id != undefined) {\n        if (message.error) {\n            if (message.result !== undefined) throw new TypeError('Both result and error are defined');\n\n            result.error = message.error;\n        } else if (message.result !== undefined) result.result = message.result;\n        else throw new TypeError('No result or error is defined');\n\n        result.id = id;\n    }\n\n    return JSON.stringify(result);\n}\n\n/**\n * Unpack a JsonRPC 2.0 message\n *\n * @param {String} message - string with the content of the JsonRPC 2.0 message\n *\n * @throws {TypeError} - Invalid JsonRPC version\n *\n * @return {Object} - object filled with the JsonRPC 2.0 message content\n */\nfunction unpack(message) {\n    var result = message;\n\n    if (typeof message === 'string' || message instanceof String) {\n        result = JSON.parse(message);\n    }\n\n    // Check if it's a valid message\n\n    var version = result.jsonrpc;\n    if (version !== '2.0') throw new TypeError(\"Invalid JsonRPC version '\" + version + \"': \" + message);\n\n    // Response\n    if (result.method == undefined) {\n        if (result.id == undefined) throw new TypeError('Invalid message: ' + message);\n\n        var result_defined = result.result !== undefined;\n        var error_defined = result.error !== undefined;\n\n        // Check only result or error is defined, not both or none\n        if (result_defined && error_defined) throw new TypeError('Both result and error are defined: ' + message);\n\n        if (!result_defined && !error_defined) throw new TypeError('No result or error is defined: ' + message);\n\n        result.ack = result.id;\n        delete result.id;\n    }\n\n    // Return unpacked message\n    return result;\n}\n\nexports.pack = pack;\nexports.unpack = unpack;\n","function pack(message) {\n    throw new TypeError('Not yet implemented');\n}\n\nfunction unpack(message) {\n    throw new TypeError('Not yet implemented');\n}\n\nexports.pack = pack;\nexports.unpack = unpack;\n","var JsonRPC = require('./JsonRPC');\nvar XmlRPC = require('./XmlRPC');\n\nexports.JsonRPC = JsonRPC;\nexports.XmlRPC = XmlRPC;\n","type ConsoleFunction = (...data: any) => void;\nexport class ConsoleLogger {\n    /**\n     * @hidden\n     */\n    logger: Console;\n\n    /**\n     * @hidden\n     */\n    log: ConsoleFunction;\n\n    /**\n     * @hidden\n     */\n    info: ConsoleFunction;\n\n    /**\n     * @hidden\n     */\n    debug: ConsoleFunction;\n\n    /**\n     * @hidden\n     */\n    warn: ConsoleFunction;\n\n    /**\n     * @hidden\n     */\n    error: ConsoleFunction;\n\n    constructor(console: Console) {\n        this.logger = console;\n        (this.log = console.log),\n            (this.info = console.info),\n            (this.debug = console.debug),\n            (this.warn = console.warn),\n            (this.error = console.error);\n    }\n}\n","import { JL } from 'jsnlog';\nimport { OpenVidu } from '../../OpenVidu/OpenVidu';\nimport { ConsoleLogger } from './ConsoleLogger';\nimport { OpenViduLoggerConfiguration } from './OpenViduLoggerConfiguration';\n\nexport class OpenViduLogger {\n    private static instance: OpenViduLogger;\n\n    private JSNLOG_URL: string = '/openvidu/elk/openvidu-browser-logs';\n    private MAX_JSNLOG_BATCH_LOG_MESSAGES: number = 100;\n    private MAX_MSECONDS_BATCH_MESSAGES: number = 5000;\n    private MAX_LENGTH_STRING_JSON: number = 1000;\n\n    private defaultConsoleLogger: ConsoleLogger = new ConsoleLogger(globalThis.console);\n\n    private currentAppender: any;\n\n    private isProdMode = false;\n    private isJSNLogSetup = false;\n\n    // This two variables are used to restart JSNLog\n    // on different sessions and different userIds\n    private loggingSessionId: string | undefined;\n\n    /**\n     * @hidden\n     */\n    static configureJSNLog(openVidu: OpenVidu, token: string) {\n        try {\n            // If dev mode or...\n            if (\n                globalThis['LOG_JSNLOG_RESULTS'] ||\n                // If instance is created and it is OpenVidu Pro\n                (this.instance &&\n                    openVidu.isAtLeastPro &&\n                    // If logs are enabled\n                    this.instance.isOpenViduBrowserLogsDebugActive(openVidu) &&\n                    // Only reconfigure it if session or finalUserId has changed\n                    this.instance.canConfigureJSNLog(openVidu, this.instance))\n            ) {\n                // Check if app logs can be sent\n                // and replace console.log function to send\n                // logs of the application\n                if (openVidu.sendBrowserLogs === OpenViduLoggerConfiguration.debug_app) {\n                    this.instance.replaceWindowConsole();\n                }\n\n                // isJSNLogSetup will not be true until completed setup\n                this.instance.isJSNLogSetup = false;\n                this.instance.info('Configuring JSNLogs.');\n\n                const finalUserId = openVidu.finalUserId;\n                const sessionId = openVidu.session.sessionId;\n\n                const beforeSendCallback = (xhr) => {\n                    // If 401 or 403 or 404 modify ready and status so JSNLog don't retry to send logs\n                    // https://github.com/mperdeck/jsnlog.js/blob/v2.30.0/jsnlog.ts#L805-L818\n                    const parentReadyStateFunction = xhr.onreadystatechange;\n                    xhr.onreadystatechange = () => {\n                        if (this.isInvalidResponse(xhr)) {\n                            Object.defineProperty(xhr, 'readyState', { value: 4 });\n                            Object.defineProperty(xhr, 'status', { value: 200 });\n                            // Disable JSNLog too to not send periodically errors\n                            this.instance.disableLogger();\n                        }\n                        parentReadyStateFunction();\n                    };\n\n                    // Headers to identify and authenticate logs\n                    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(`${finalUserId}%/%${sessionId}` + ':' + token));\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                    // Additional headers for OpenVidu\n                    xhr.setRequestHeader('OV-Final-User-Id', finalUserId);\n                    xhr.setRequestHeader('OV-Session-Id', sessionId);\n                    xhr.setRequestHeader('OV-Token', token);\n                };\n\n                // Creation of the appender.\n                this.instance.currentAppender = JL.createAjaxAppender(`appender-${finalUserId}-${sessionId}`);\n                this.instance.currentAppender.setOptions({\n                    beforeSend: beforeSendCallback,\n                    maxBatchSize: 1000,\n                    batchSize: this.instance.MAX_JSNLOG_BATCH_LOG_MESSAGES,\n                    batchTimeout: this.instance.MAX_MSECONDS_BATCH_MESSAGES\n                });\n\n                // Avoid circular dependencies\n                const logSerializer = (obj): string => {\n                    const getCircularReplacer = () => {\n                        const seen = new WeakSet();\n                        return (key, value) => {\n                            if (typeof value === 'object' && value != null) {\n                                if (seen.has(value) || (globalThis.HTMLElement && value instanceof HTMLElement)) {\n                                    return;\n                                }\n                                seen.add(value);\n                            }\n                            return value;\n                        };\n                    };\n\n                    // Cut long messages\n                    let stringifyJson = JSON.stringify(obj, getCircularReplacer());\n                    if (stringifyJson.length > this.instance.MAX_LENGTH_STRING_JSON) {\n                        stringifyJson = `${stringifyJson.substring(0, this.instance.MAX_LENGTH_STRING_JSON)}...`;\n                    }\n\n                    if (globalThis['LOG_JSNLOG_RESULTS']) {\n                        console.log(stringifyJson);\n                    }\n\n                    return stringifyJson;\n                };\n\n                // Initialize JL to send logs\n                JL.setOptions({\n                    defaultAjaxUrl: openVidu.httpUri + this.instance.JSNLOG_URL,\n                    serialize: logSerializer,\n                    enabled: true\n                });\n                JL().setOptions({\n                    appenders: [this.instance.currentAppender]\n                });\n\n                this.instance.isJSNLogSetup = true;\n                this.instance.loggingSessionId = sessionId;\n                this.instance.info('JSNLog configured.');\n            }\n        } catch (e) {\n            // Print error\n            console.error('Error configuring JSNLog: ');\n            console.error(e);\n            // Restore defaults values just in case any exception happen-\n            this.instance.disableLogger();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    static getInstance(): OpenViduLogger {\n        if (!OpenViduLogger.instance) {\n            OpenViduLogger.instance = new OpenViduLogger();\n        }\n        return OpenViduLogger.instance;\n    }\n\n    private static isInvalidResponse(xhr: XMLHttpRequest) {\n        return xhr.status == 401 || xhr.status == 403 || xhr.status == 404 || xhr.status == 0;\n    }\n\n    private canConfigureJSNLog(openVidu: OpenVidu, logger: OpenViduLogger): boolean {\n        return openVidu.session.sessionId != logger.loggingSessionId;\n    }\n\n    private isOpenViduBrowserLogsDebugActive(openVidu: OpenVidu) {\n        return (\n            openVidu.sendBrowserLogs === OpenViduLoggerConfiguration.debug ||\n            openVidu.sendBrowserLogs === OpenViduLoggerConfiguration.debug_app\n        );\n    }\n\n    // Return console functions with jsnlog integration\n    private getConsoleWithJSNLog() {\n        return (function (openViduLogger: OpenViduLogger) {\n            return {\n                log: function (...args) {\n                    openViduLogger.defaultConsoleLogger.log.apply(openViduLogger.defaultConsoleLogger.logger, arguments);\n                    if (openViduLogger.isJSNLogSetup) {\n                        JL().info(arguments);\n                    }\n                },\n                info: function (...args) {\n                    openViduLogger.defaultConsoleLogger.info.apply(openViduLogger.defaultConsoleLogger.logger, arguments);\n                    if (openViduLogger.isJSNLogSetup) {\n                        JL().info(arguments);\n                    }\n                },\n                debug: function (...args) {\n                    openViduLogger.defaultConsoleLogger.debug.apply(openViduLogger.defaultConsoleLogger.logger, arguments);\n                },\n                warn: function (...args) {\n                    openViduLogger.defaultConsoleLogger.warn.apply(openViduLogger.defaultConsoleLogger.logger, arguments);\n                    if (openViduLogger.isJSNLogSetup) {\n                        JL().warn(arguments);\n                    }\n                },\n                error: function (...args) {\n                    openViduLogger.defaultConsoleLogger.error.apply(openViduLogger.defaultConsoleLogger.logger, arguments);\n                    if (openViduLogger.isJSNLogSetup) {\n                        JL().error(arguments);\n                    }\n                }\n            };\n        })(this);\n    }\n\n    private replaceWindowConsole() {\n        globalThis.console = this.defaultConsoleLogger.logger;\n        globalThis.console.log = this.getConsoleWithJSNLog().log;\n        globalThis.console.info = this.getConsoleWithJSNLog().info;\n        globalThis.console.debug = this.getConsoleWithJSNLog().debug;\n        globalThis.console.warn = this.getConsoleWithJSNLog().warn;\n        globalThis.console.error = this.getConsoleWithJSNLog().error;\n    }\n\n    private disableLogger() {\n        JL.setOptions({ enabled: false });\n        this.isJSNLogSetup = false;\n        this.loggingSessionId = undefined;\n        this.currentAppender = undefined;\n        globalThis.console = this.defaultConsoleLogger.logger;\n        globalThis.console.log = this.defaultConsoleLogger.log;\n        globalThis.console.info = this.defaultConsoleLogger.info;\n        globalThis.console.debug = this.defaultConsoleLogger.debug;\n        globalThis.console.warn = this.defaultConsoleLogger.warn;\n        globalThis.console.error = this.defaultConsoleLogger.error;\n    }\n\n    /**\n     * @hidden\n     */\n    log(...args: any[]) {\n        if (!this.isProdMode) {\n            this.defaultConsoleLogger.log.apply(this.defaultConsoleLogger.logger, arguments);\n        }\n        if (this.isJSNLogSetup) {\n            JL().info(arguments);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    debug(...args: any[]) {\n        if (!this.isProdMode) {\n            this.defaultConsoleLogger.debug.apply(this.defaultConsoleLogger.logger, arguments);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    info(...args: any[]) {\n        if (!this.isProdMode) {\n            this.defaultConsoleLogger.info.apply(this.defaultConsoleLogger.logger, arguments);\n        }\n        if (this.isJSNLogSetup) {\n            JL().info(arguments);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    warn(...args: any[]) {\n        this.defaultConsoleLogger.warn.apply(this.defaultConsoleLogger.logger, arguments);\n        if (this.isJSNLogSetup) {\n            JL().warn(arguments);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    error(...args: any[]) {\n        this.defaultConsoleLogger.error.apply(this.defaultConsoleLogger.logger, arguments);\n        if (this.isJSNLogSetup) {\n            JL().error(arguments);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    flush() {\n        if (this.isJSNLogSetup && this.currentAppender != null) {\n            this.currentAppender.sendBatch();\n        }\n    }\n\n    enableProdMode() {\n        this.isProdMode = true;\n    }\n}\n","export enum OpenViduLoggerConfiguration {\n    disabled = 'disabled',\n    debug = 'debug',\n    debug_app = 'debug_app'\n}\n","// Last time updated on June 08, 2018\n\n// Latest file can be found here: https://cdn.webrtc-experiment.com/getScreenId.js\n\n// Muaz Khan         - www.MuazKhan.com\n// MIT License       - www.WebRTC-Experiment.com/licence\n// Documentation     - https://github.com/muaz-khan/getScreenId.\n\n// ______________\n// getScreenId.js\n\n/*\ngetScreenId(function (error, sourceId, screen_constraints) {\n    // error    == null || 'permission-denied' || 'not-installed' || 'installed-disabled' || 'not-chrome'\n    // sourceId == null || 'string' || 'firefox'\n\n    if(microsoftEdge) {\n        navigator.getDisplayMedia(screen_constraints).then(onSuccess, onFailure);\n    }\n    else {\n        navigator.mediaDevices.getUserMedia(screen_constraints).then(onSuccess)catch(onFailure);\n    }\n}, 'pass second parameter only if you want system audio');\n*/\n\nglobalThis.getScreenId = function (firefoxString, callback, custom_parameter) {\n    if (navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob)) {\n        // microsoft edge => navigator.getDisplayMedia(screen_constraints).then(onSuccess, onFailure);\n        callback({\n            video: true\n        });\n        return;\n    }\n\n    // for Firefox:\n    // sourceId == 'firefox'\n    // screen_constraints = {...}\n    if (!!navigator.mozGetUserMedia) {\n        callback(null, 'firefox', {\n            video: {\n                mozMediaSource: firefoxString,\n                mediaSource: firefoxString\n            }\n        });\n        return;\n    }\n\n    globalThis.addEventListener('message', onIFrameCallback);\n\n    function onIFrameCallback(event) {\n        if (!event.data) return;\n\n        if (event.data.chromeMediaSourceId) {\n            if (event.data.chromeMediaSourceId === 'PermissionDeniedError') {\n                callback('permission-denied');\n            } else {\n                callback(\n                    null,\n                    event.data.chromeMediaSourceId,\n                    getScreenConstraints(null, event.data.chromeMediaSourceId, event.data.canRequestAudioTrack)\n                );\n            }\n\n            // this event listener is no more needed\n            globalThis.removeEventListener('message', onIFrameCallback);\n        }\n\n        if (event.data.chromeExtensionStatus) {\n            callback(event.data.chromeExtensionStatus, null, getScreenConstraints(event.data.chromeExtensionStatus));\n\n            // this event listener is no more needed\n            globalThis.removeEventListener('message', onIFrameCallback);\n        }\n    }\n\n    if (!custom_parameter) {\n        setTimeout(postGetSourceIdMessage, 100);\n    } else {\n        setTimeout(function () {\n            postGetSourceIdMessage(custom_parameter);\n        }, 100);\n    }\n};\n\nfunction getScreenConstraints(error, sourceId, canRequestAudioTrack) {\n    var screen_constraints = {\n        audio: false,\n        video: {\n            mandatory: {\n                chromeMediaSource: error ? 'screen' : 'desktop',\n                maxWidth: globalThis.screen.width > 1920 ? globalThis.screen.width : 1920,\n                maxHeight: globalThis.screen.height > 1080 ? globalThis.screen.height : 1080\n            },\n            optional: []\n        }\n    };\n\n    if (!!canRequestAudioTrack) {\n        screen_constraints.audio = {\n            mandatory: {\n                chromeMediaSource: error ? 'screen' : 'desktop'\n                // echoCancellation: true\n            },\n            optional: []\n        };\n    }\n\n    if (sourceId) {\n        screen_constraints.video.mandatory.chromeMediaSourceId = sourceId;\n\n        if (screen_constraints.audio && screen_constraints.audio.mandatory) {\n            screen_constraints.audio.mandatory.chromeMediaSourceId = sourceId;\n        }\n    }\n\n    return screen_constraints;\n}\n\nfunction postGetSourceIdMessage(custom_parameter) {\n    if (!iframe) {\n        loadIFrame(function () {\n            postGetSourceIdMessage(custom_parameter);\n        });\n        return;\n    }\n\n    if (!iframe.isLoaded) {\n        setTimeout(function () {\n            postGetSourceIdMessage(custom_parameter);\n        }, 100);\n        return;\n    }\n\n    if (!custom_parameter) {\n        iframe.contentWindow.postMessage(\n            {\n                captureSourceId: true\n            },\n            '*'\n        );\n    } else if (!!custom_parameter.forEach) {\n        iframe.contentWindow.postMessage(\n            {\n                captureCustomSourceId: custom_parameter\n            },\n            '*'\n        );\n    } else {\n        iframe.contentWindow.postMessage(\n            {\n                captureSourceIdWithAudio: true\n            },\n            '*'\n        );\n    }\n}\n\nvar iframe;\n\n// this function is used in RTCMultiConnection v3\nglobalThis.getScreenConstraints = function (callback) {\n    loadIFrame(function () {\n        getScreenId(function (error, sourceId, screen_constraints) {\n            if (!screen_constraints) {\n                screen_constraints = {\n                    video: true\n                };\n            }\n\n            callback(error, screen_constraints.video);\n        });\n    });\n};\n\nfunction loadIFrame(loadCallback) {\n    if (iframe) {\n        loadCallback();\n        return;\n    }\n\n    iframe = document.createElement('iframe');\n    iframe.onload = function () {\n        iframe.isLoaded = true;\n        loadCallback();\n    };\n    iframe.src = 'https://openvidu.github.io/openvidu-screen-sharing-chrome-extension/';\n    iframe.style.display = 'none';\n    (document.body || document.documentElement).appendChild(iframe);\n}\n\nglobalThis.getChromeExtensionStatus = function (callback) {\n    // for Firefox:\n    if (!!navigator.mozGetUserMedia) {\n        callback('installed-enabled');\n        return;\n    }\n\n    globalThis.addEventListener('message', onIFrameCallback);\n\n    function onIFrameCallback(event) {\n        if (!event.data) return;\n\n        if (event.data.chromeExtensionStatus) {\n            callback(event.data.chromeExtensionStatus);\n\n            // this event listener is no more needed\n            globalThis.removeEventListener('message', onIFrameCallback);\n        }\n    }\n\n    setTimeout(postGetChromeExtensionStatusMessage, 100);\n};\n\nfunction postGetChromeExtensionStatusMessage() {\n    if (!iframe) {\n        loadIFrame(postGetChromeExtensionStatusMessage);\n        return;\n    }\n\n    if (!iframe.isLoaded) {\n        setTimeout(postGetChromeExtensionStatusMessage, 100);\n        return;\n    }\n\n    iframe.contentWindow.postMessage(\n        {\n            getChromeExtensionStatus: true\n        },\n        '*'\n    );\n}\n\nexports.getScreenId = globalThis.getScreenId;\n","// global variables\nvar chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\n\nif (typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined') {\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n\n    window.addEventListener('message', function (event) {\n        if (event.origin != window.location.origin) {\n            return;\n        }\n        onMessageCallback(event.data);\n    });\n}\n\n// and the function that handles received messages\nfunction onMessageCallback(data) {\n    // \"cancel\" button is clicked\n    if (data == 'PermissionDeniedError') {\n        if (screenCallback) return screenCallback('PermissionDeniedError');\n        else throw new Error('PermissionDeniedError');\n    }\n    // extension notified his presence\n    if (data == 'rtcmulticonnection-extension-loaded') {\n        chromeMediaSource = 'desktop';\n    }\n    // extension shared temp sourceId\n    if (data.sourceId && screenCallback) {\n        screenCallback((sourceId = data.sourceId), data.canRequestAudioTrack === true);\n    }\n}\n\n// this method can be used to check if chrome extension is installed & enabled.\nfunction isChromeExtensionAvailable(callback) {\n    if (!callback) return;\n    if (chromeMediaSource == 'desktop') return callback(true);\n\n    // ask extension if it is available\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n        if (chromeMediaSource == 'screen') {\n            callback(false);\n        } else callback(true);\n    }, 2000);\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceId(callback) {\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n    if (sourceId) return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage('get-sourceId', '*');\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getCustomSourceId(arr, callback) {\n    if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage(\n        {\n            'get-custom-sourceId': arr\n        },\n        '*'\n    );\n}\n\n// this function can be used to get \"source-id\" from the extension\nfunction getSourceIdWithAudio(callback) {\n    if (!callback) throw '\"callback\" parameter is mandatory.';\n    if (sourceId) return callback(sourceId);\n\n    screenCallback = callback;\n    window.postMessage('audio-plus-tab', '*');\n}\n\nfunction getChromeExtensionStatus(extensionid, callback) {\n    if (isFirefox) return callback('not-chrome');\n    if (arguments.length != 2) {\n        callback = extensionid;\n        extensionid = 'lfcgfepafnobdloecchnfaclibenjold'; // default extension-id\n    }\n    var image = document.createElement('img');\n    image.src = 'chrome-extension://' + extensionid + '/icon.png';\n    image.onload = function () {\n        chromeMediaSource = 'screen';\n        window.postMessage('are-you-there', '*');\n        setTimeout(function () {\n            if (chromeMediaSource == 'screen') {\n                callback('installed-disabled');\n            } else callback('installed-enabled');\n        }, 2000);\n    };\n    image.onerror = function () {\n        callback('not-installed');\n    };\n}\n\nfunction getScreenConstraintsWithAudio(callback) {\n    getScreenConstraints(callback, true);\n}\n\n// this function explains how to use above methods/objects\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n    sourceId = '';\n    var firefoxScreenConstraints = {\n        mozMediaSource: 'window',\n        mediaSource: 'window'\n    };\n    if (isFirefox) return callback(null, firefoxScreenConstraints);\n    // this statement defines getUserMedia constraints\n    // that will be used to capture content of screen\n    var screen_constraints = {\n        mandatory: {\n            chromeMediaSource: chromeMediaSource,\n            maxWidth: screen.width > 1920 ? screen.width : 1920,\n            maxHeight: screen.height > 1080 ? screen.height : 1080\n        },\n        optional: []\n    };\n    // this statement verifies chrome extension availability\n    // if installed and available then it will invoke extension API\n    // otherwise it will fallback to command-line based screen capturing API\n    if (chromeMediaSource == 'desktop' && !sourceId) {\n        if (captureSourceIdWithAudio) {\n            getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n\n                if (canRequestAudioTrack) {\n                    screen_constraints.canRequestAudioTrack = true;\n                }\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        } else {\n            getSourceId(function (sourceId) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        return;\n    }\n\n    // this statement sets gets 'sourceId\" and sets \"chromeMediaSourceId\"\n    if (chromeMediaSource == 'desktop') {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n    }\n\n    // now invoking native getUserMedia API\n    callback(null, screen_constraints);\n}\n\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;\n","import platform = require('platform');\n\nexport class PlatformUtils {\n    protected static instance: PlatformUtils;\n    constructor() {}\n\n    static getInstance(): PlatformUtils {\n        if (!this.instance) {\n            this.instance = new PlatformUtils();\n        }\n        return PlatformUtils.instance;\n    }\n\n    public isChromeBrowser(): boolean {\n        return platform.name === 'Chrome';\n    }\n\n    /**\n     * @hidden\n     */\n    public isSafariBrowser(): boolean {\n        return platform.name === 'Safari';\n    }\n\n    /**\n     * @hidden\n     */\n    public isChromeMobileBrowser(): boolean {\n        return platform.name === 'Chrome Mobile';\n    }\n\n    /**\n     * @hidden\n     */\n    public isFirefoxBrowser(): boolean {\n        return platform.name === 'Firefox';\n    }\n\n    /**\n     * @hidden\n     */\n    public isFirefoxMobileBrowser(): boolean {\n        return platform.name === 'Firefox Mobile' || platform.name === 'Firefox for iOS';\n    }\n\n    /**\n     * @hidden\n     */\n    public isOperaBrowser(): boolean {\n        return platform.name === 'Opera';\n    }\n\n    /**\n     * @hidden\n     */\n    public isOperaMobileBrowser(): boolean {\n        return platform.name === 'Opera Mobile';\n    }\n\n    /**\n     * @hidden\n     */\n    public isEdgeBrowser(): boolean {\n        const version = platform?.version ? parseFloat(platform.version) : -1;\n        return platform.name === 'Microsoft Edge' && version >= 80;\n    }\n\n    /**\n     * @hidden\n     */\n    public isEdgeMobileBrowser(): boolean {\n        const version = platform?.version ? parseFloat(platform.version) : -1;\n        return platform.name === 'Microsoft Edge' && (platform.os?.family === 'Android' || platform.os?.family === 'iOS') && version > 45;\n    }\n\n    /**\n     * @hidden\n     */\n    public isAndroidBrowser(): boolean {\n        return platform.name === 'Android Browser';\n    }\n\n    /**\n     * @hidden\n     */\n    public isElectron(): boolean {\n        return platform.name === 'Electron';\n    }\n\n    /**\n     * @hidden\n     */\n    public isNodeJs(): boolean {\n        return platform.name === 'Node.js';\n    }\n\n    /**\n     * @hidden\n     */\n    public isSamsungBrowser(): boolean {\n        return platform.name === 'Samsung Internet Mobile' || platform.name === 'Samsung Internet';\n    }\n\n    // TODO: This method exists to overcome bug https://github.com/bestiejs/platform.js/issues/184\n    /**\n     * @hidden\n     */\n    public isMotorolaEdgeDevice(): boolean {\n        return platform.product?.toLowerCase().includes('motorola edge') || false;\n    }\n\n    /**\n     * @hidden\n     */\n    public isIPhoneOrIPad(): boolean {\n        const userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n        const isTouchable = 'ontouchend' in document;\n        const isIPad = /\\b(\\w*Macintosh\\w*)\\b/.test(userAgent) && isTouchable;\n        const isIPhone = /\\b(\\w*iPhone\\w*)\\b/.test(userAgent) && /\\b(\\w*Mobile\\w*)\\b/.test(userAgent) && isTouchable;\n        return isIPad || isIPhone;\n    }\n\n    /**\n     * @hidden\n     */\n    public isIOSWithSafari(): boolean {\n        const userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n        return (\n            this.isIPhoneOrIPad() &&\n            /\\b(\\w*Apple\\w*)\\b/.test(navigator.vendor) &&\n            /\\b(\\w*Safari\\w*)\\b/.test(userAgent) &&\n            !/\\b(\\w*CriOS\\w*)\\b/.test(userAgent) &&\n            !/\\b(\\w*FxiOS\\w*)\\b/.test(userAgent)\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    public isIonicIos(): boolean {\n        return this.isIPhoneOrIPad() && platform.ua!!.indexOf('Safari') === -1;\n    }\n\n    /**\n     * @hidden\n     */\n    public isIonicAndroid(): boolean {\n        return platform.os!!.family === 'Android' && platform.name == 'Android Browser';\n    }\n\n    /**\n     * @hidden\n     */\n    public isMobileDevice(): boolean {\n        return platform.os!!.family === 'iOS' || platform.os!!.family === 'Android';\n    }\n\n    /**\n     * @hidden\n     */\n    public isReactNative(): boolean {\n        return false;\n    }\n\n    /**\n     * @hidden\n     */\n    public isChromium(): boolean {\n        return (\n            this.isChromeBrowser() ||\n            this.isChromeMobileBrowser() ||\n            this.isOperaBrowser() ||\n            this.isOperaMobileBrowser() ||\n            this.isEdgeBrowser() ||\n            this.isEdgeMobileBrowser() ||\n            this.isSamsungBrowser() ||\n            this.isIonicAndroid() ||\n            this.isIonicIos() ||\n            this.isElectron() ||\n            // TODO: remove when possible\n            this.isMotorolaEdgeDevice()\n        );\n    }\n\n\n\n    /**\n     * @hidden\n     */\n    public canScreenShare(): boolean {\n        const version = platform?.version ? parseFloat(platform.version) : -1;\n        // Reject mobile devices\n        if (this.isMobileDevice()) {\n            return false;\n        }\n        return (\n            this.isChromeBrowser() ||\n            this.isFirefoxBrowser() ||\n            this.isOperaBrowser() ||\n            this.isElectron() ||\n            this.isEdgeBrowser() ||\n            (this.isSafariBrowser() && version >= 13)\n        );\n    }\n\n    /**\n     * @hidden\n     */\n    public getName(): string {\n        return platform.name || '';\n    }\n\n    /**\n     * @hidden\n     */\n    public getVersion(): string {\n        return platform.version || '';\n    }\n\n    /**\n     * @hidden\n     */\n    public getFamily(): string {\n        return platform.os!!.family || '';\n    }\n\n    /**\n     * @hidden\n     */\n    public getDescription(): string {\n        return platform.description || '';\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport freeice = require('freeice');\nimport { v4 as uuidv4 } from 'uuid';\nimport { TypeOfVideo } from '../Enums/TypeOfVideo';\nimport { ExceptionEventName } from '../Events/ExceptionEvent';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\nexport interface WebRtcPeerConfiguration {\n    mediaConstraints: {\n        audio: boolean;\n        video: boolean;\n    };\n    simulcast: boolean;\n    mediaServer: string;\n    onIceCandidate: (event: RTCIceCandidate) => void;\n    onIceConnectionStateException: (exceptionName: ExceptionEventName, message: string, data?: any) => void;\n    iceServers?: RTCIceServer[];\n    mediaStream?: MediaStream | null;\n    mode?: 'sendonly' | 'recvonly' | 'sendrecv';\n    id?: string;\n    typeOfVideo: TypeOfVideo | undefined;\n}\n\nexport class WebRtcPeer {\n    pc: RTCPeerConnection;\n    remoteCandidatesQueue: RTCIceCandidate[] = [];\n    localCandidatesQueue: RTCIceCandidate[] = [];\n\n    // Same as WebRtcPeerConfiguration but without optional fields.\n    protected configuration: Required<WebRtcPeerConfiguration>;\n\n    private iceCandidateList: RTCIceCandidate[] = [];\n\n    constructor(configuration: WebRtcPeerConfiguration) {\n        platform = PlatformUtils.getInstance();\n\n        this.configuration = {\n            ...configuration,\n            iceServers: !!configuration.iceServers && configuration.iceServers.length > 0 ? configuration.iceServers : freeice(),\n            mediaStream: configuration.mediaStream !== undefined ? configuration.mediaStream : null,\n            mode: !!configuration.mode ? configuration.mode : 'sendrecv',\n            id: !!configuration.id ? configuration.id : this.generateUniqueId()\n        };\n        // prettier-ignore\n        logger.debug(`[WebRtcPeer] configuration:\\n${JSON.stringify(this.configuration, null, 2)}`);\n\n        this.pc = new RTCPeerConnection({ iceServers: this.configuration.iceServers });\n\n        this.pc.addEventListener('icecandidate', (event: RTCPeerConnectionIceEvent) => {\n            if (event.candidate !== null) {\n                // `RTCPeerConnectionIceEvent.candidate` is supposed to be an RTCIceCandidate:\n                // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnectioniceevent-candidate\n                //\n                // But in practice, it is actually an RTCIceCandidateInit that can be used to\n                // obtain a proper candidate, using the RTCIceCandidate constructor:\n                // https://w3c.github.io/webrtc-pc/#dom-rtcicecandidate-constructor\n                const candidateInit: RTCIceCandidateInit = event.candidate as RTCIceCandidateInit;\n                const iceCandidate = new RTCIceCandidate(candidateInit);\n\n                this.configuration.onIceCandidate(iceCandidate);\n                if (iceCandidate.candidate !== '') {\n                    this.localCandidatesQueue.push(iceCandidate);\n                }\n            }\n        });\n\n        this.pc.addEventListener('signalingstatechange', async () => {\n            if (this.pc.signalingState === 'stable') {\n                // SDP Offer/Answer finished. Add stored remote candidates.\n                while (this.iceCandidateList.length > 0) {\n                    let candidate = this.iceCandidateList.shift();\n                    try {\n                        await this.pc.addIceCandidate(<RTCIceCandidate>candidate);\n                    } catch (error) {\n                        logger.error('Error when calling RTCPeerConnection#addIceCandidate for RTCPeerConnection ' + this.getId(), error);\n                    }\n                }\n            }\n        });\n    }\n\n    getId(): string {\n        return this.configuration.id;\n    }\n\n    /**\n     * This method frees the resources used by WebRtcPeer\n     */\n    dispose() {\n        logger.debug('Disposing WebRtcPeer');\n        if (this.pc) {\n            if (this.pc.signalingState === 'closed') {\n                return;\n            }\n            this.pc.close();\n            this.remoteCandidatesQueue = [];\n            this.localCandidatesQueue = [];\n        }\n    }\n\n    // DEPRECATED LEGACY METHOD: Old WebRTC versions don't implement\n    // Transceivers, and instead depend on the deprecated\n    // \"offerToReceiveAudio\" and \"offerToReceiveVideo\".\n    private createOfferLegacy(): Promise<RTCSessionDescriptionInit> {\n        if (!!this.configuration.mediaStream) {\n            this.deprecatedPeerConnectionTrackApi();\n        }\n\n        const hasAudio = this.configuration.mediaConstraints.audio;\n        const hasVideo = this.configuration.mediaConstraints.video;\n\n        const options: RTCOfferOptions = {\n            offerToReceiveAudio: this.configuration.mode !== 'sendonly' && hasAudio,\n            offerToReceiveVideo: this.configuration.mode !== 'sendonly' && hasVideo\n        };\n\n        logger.debug('[createOfferLegacy] RTCPeerConnection.createOffer() options:', JSON.stringify(options));\n\n        return this.pc.createOffer(options);\n    }\n\n    /**\n     * Creates an SDP offer from the local RTCPeerConnection to send to the other peer.\n     * Only if the negotiation was initiated by this peer.\n     */\n    async createOffer(): Promise<RTCSessionDescriptionInit> {\n        // TODO: Delete this conditional when all supported browsers are\n        // modern enough to implement the Transceiver methods.\n        if (!('addTransceiver' in this.pc)) {\n            logger.warn(\n                '[createOffer] Method RTCPeerConnection.addTransceiver() is NOT available; using LEGACY offerToReceive{Audio,Video}'\n            );\n            return this.createOfferLegacy();\n        } else {\n            logger.debug('[createOffer] Method RTCPeerConnection.addTransceiver() is available; using it');\n        }\n\n        // Spec doc: https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtransceiver\n\n        if (this.configuration.mode !== 'recvonly') {\n            // To send media, assume that all desired media tracks have been\n            // already added by higher level code to our MediaStream.\n\n            if (!this.configuration.mediaStream) {\n                throw new Error(\n                    `[WebRtcPeer.createOffer] Direction is '${this.configuration.mode}', but no stream was configured to be sent`\n                );\n            }\n\n            for (const track of this.configuration.mediaStream.getTracks()) {\n                const tcInit: RTCRtpTransceiverInit = {\n                    direction: this.configuration.mode,\n                    streams: [this.configuration.mediaStream]\n                };\n\n                if (track.kind === 'video' && this.configuration.simulcast) {\n                    // Check if the requested size is enough to ask for 3 layers.\n                    const trackSettings = track.getSettings();\n                    const trackConsts = track.getConstraints();\n\n                    const trackWidth: number =\n                        trackSettings.width ?? (trackConsts.width as ConstrainULongRange).ideal ?? (trackConsts.width as number) ?? 0;\n                    const trackHeight: number =\n                        trackSettings.height ?? (trackConsts.height as ConstrainULongRange).ideal ?? (trackConsts.height as number) ?? 0;\n                    logger.info(`[createOffer] Video track dimensions: ${trackWidth}x${trackHeight}`);\n\n                    const trackPixels = trackWidth * trackHeight;\n                    let maxLayers = 0;\n                    if (trackPixels >= 960 * 540) {\n                        maxLayers = 3;\n                    } else if (trackPixels >= 480 * 270) {\n                        maxLayers = 2;\n                    } else {\n                        maxLayers = 1;\n                    }\n\n                    tcInit.sendEncodings = [];\n                    for (let l = 0; l < maxLayers; l++) {\n                        const layerDiv = 2 ** (maxLayers - l - 1);\n\n                        const encoding: RTCRtpEncodingParameters = {\n                            rid: 'rdiv' + layerDiv.toString(),\n\n                            // @ts-ignore -- Property missing from DOM types.\n                            scalabilityMode: 'L1T1'\n                        };\n\n                        if (['detail', 'text'].includes(track.contentHint)) {\n                            // Prioritize best resolution, for maximum picture detail.\n                            encoding.scaleResolutionDownBy = 1.0;\n\n                            // @ts-ignore -- Property missing from DOM types.\n                            encoding.maxFramerate = Math.floor(30 / layerDiv);\n                        } else {\n                            encoding.scaleResolutionDownBy = layerDiv;\n                        }\n\n                        tcInit.sendEncodings.push(encoding);\n                    }\n                }\n\n                const tc = this.pc.addTransceiver(track, tcInit);\n\n                if (track.kind === 'video') {\n                    let sendParams = tc.sender.getParameters();\n                    let needSetParams = false;\n\n                    if (!sendParams.degradationPreference?.length) {\n                        // degradationPreference for video: \"balanced\", \"maintain-framerate\", \"maintain-resolution\".\n                        // https://www.w3.org/TR/2018/CR-webrtc-20180927/#dom-rtcdegradationpreference\n                        if (['detail', 'text'].includes(track.contentHint)) {\n                            sendParams.degradationPreference = 'maintain-resolution';\n                        } else {\n                            sendParams.degradationPreference = 'balanced';\n                        }\n\n                        logger.info(`[createOffer] Video sender Degradation Preference set: ${sendParams.degradationPreference}`);\n\n                        // FIXME: Firefox implements degradationPreference on each individual encoding!\n                        // (set it on every element of the sendParams.encodings array)\n\n                        needSetParams = true;\n                    }\n\n                    // FIXME: Check that the simulcast encodings were applied.\n                    // Firefox doesn't implement `RTCRtpTransceiverInit.sendEncodings`\n                    // so the only way to enable simulcast is with `RTCRtpSender.setParameters()`.\n                    //\n                    // This next block can be deleted when Firefox fixes bug #1396918:\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n                    //\n                    // NOTE: This is done in a way that is compatible with all browsers, to save on\n                    // browser-conditional code. The idea comes from WebRTC Adapter.js:\n                    // * https://github.com/webrtcHacks/adapter/issues/998\n                    // * https://github.com/webrtcHacks/adapter/blob/v7.7.0/src/js/firefox/firefox_shim.js#L231-L255\n                    if (this.configuration.simulcast) {\n                        if (sendParams.encodings?.length !== tcInit.sendEncodings!.length) {\n                            sendParams.encodings = tcInit.sendEncodings!;\n\n                            needSetParams = true;\n                        }\n                    }\n\n                    if (needSetParams) {\n                        logger.debug(`[createOffer] Setting new RTCRtpSendParameters to video sender`);\n                        try {\n                            await tc.sender.setParameters(sendParams);\n                        } catch (error) {\n                            let message = `[WebRtcPeer.createOffer] Cannot set RTCRtpSendParameters to video sender`;\n                            if (error instanceof Error) {\n                                message += `: ${error.message}`;\n                            }\n                            throw new Error(message);\n                        }\n                    }\n                }\n\n                // DEBUG: Uncomment for details.\n                // if (track.kind === \"video\" && this.configuration.simulcast) {\n                //     // Print browser capabilities.\n                //     // prettier-ignore\n                //     logger.debug(`[createOffer] Transceiver send capabilities (static):\\n${JSON.stringify(RTCRtpSender.getCapabilities?.(\"video\"), null, 2)}`);\n                //     // prettier-ignore\n                //     logger.debug(`[createOffer] Transceiver recv capabilities (static):\\n${JSON.stringify(RTCRtpReceiver.getCapabilities?.(\"video\"), null, 2)}`);\n\n                //     // Print requested Transceiver encodings and parameters.\n                //     // prettier-ignore\n                //     logger.debug(`[createOffer] Transceiver send encodings (requested):\\n${JSON.stringify(tcInit.sendEncodings, null, 2)}`);\n                //     // prettier-ignore\n                //     logger.debug(`[createOffer] Transceiver send parameters (accepted):\\n${JSON.stringify(tc.sender.getParameters(), null, 2)}`);\n                // }\n            }\n        } else {\n            // To just receive media, create new recvonly transceivers.\n            for (const kind of ['audio', 'video']) {\n                // Check if the media kind should be used.\n                if (!this.configuration.mediaConstraints[kind]) {\n                    continue;\n                }\n\n                this.configuration.mediaStream = new MediaStream();\n                this.pc.addTransceiver(kind, {\n                    direction: this.configuration.mode,\n                    streams: [this.configuration.mediaStream]\n                });\n            }\n        }\n\n        let sdpOffer: RTCSessionDescriptionInit;\n        try {\n            sdpOffer = await this.pc.createOffer();\n        } catch (error) {\n            let message = `[WebRtcPeer.createOffer] Browser failed creating an SDP Offer`;\n            if (error instanceof Error) {\n                message += `: ${error.message}`;\n            }\n            throw new Error(message);\n        }\n\n        return sdpOffer;\n    }\n\n    deprecatedPeerConnectionTrackApi() {\n        for (const track of this.configuration.mediaStream!.getTracks()) {\n            this.pc.addTrack(track, this.configuration.mediaStream!);\n        }\n    }\n\n    /**\n     * Creates an SDP answer from the local RTCPeerConnection to send to the other peer\n     * Only if the negotiation was initiated by the other peer\n     */\n    createAnswer(): Promise<RTCSessionDescriptionInit> {\n        return new Promise((resolve, reject) => {\n            // TODO: Delete this conditional when all supported browsers are\n            // modern enough to implement the Transceiver methods.\n            if ('getTransceivers' in this.pc) {\n                logger.debug('[createAnswer] Method RTCPeerConnection.getTransceivers() is available; using it');\n\n                // Ensure that the PeerConnection already contains one Transceiver\n                // for each kind of media.\n                // The Transceivers should have been already created internally by\n                // the PC itself, when `pc.setRemoteDescription(sdpOffer)` was called.\n\n                for (const kind of ['audio', 'video']) {\n                    // Check if the media kind should be used.\n                    if (!this.configuration.mediaConstraints[kind]) {\n                        continue;\n                    }\n\n                    let tc = this.pc.getTransceivers().find((tc) => tc.receiver.track.kind === kind);\n\n                    if (tc) {\n                        // Enforce our desired direction.\n                        tc.direction = this.configuration.mode;\n                    } else {\n                        return reject(new Error(`${kind} requested, but no transceiver was created from remote description`));\n                    }\n                }\n\n                this.pc\n                    .createAnswer()\n                    .then((sdpAnswer) => resolve(sdpAnswer))\n                    .catch((error) => reject(error));\n            } else {\n                // TODO: Delete else branch when all supported browsers are\n                // modern enough to implement the Transceiver methods\n\n                let offerAudio,\n                    offerVideo = true;\n                if (!!this.configuration.mediaConstraints) {\n                    offerAudio =\n                        typeof this.configuration.mediaConstraints.audio === 'boolean' ? this.configuration.mediaConstraints.audio : true;\n                    offerVideo =\n                        typeof this.configuration.mediaConstraints.video === 'boolean' ? this.configuration.mediaConstraints.video : true;\n                    const constraints: RTCOfferOptions = {\n                        offerToReceiveAudio: offerAudio,\n                        offerToReceiveVideo: offerVideo\n                    };\n                    (this.pc as RTCPeerConnection).createAnswer(constraints)\n                        .then((sdpAnswer) => resolve(sdpAnswer))\n                        .catch((error) => reject(error));\n                }\n            }\n\n            // else, there is nothing to do; the legacy createAnswer() options do\n            // not offer any control over which tracks are included in the answer.\n        });\n    }\n\n    /**\n     * This peer initiated negotiation. Step 1/4 of SDP offer-answer protocol\n     */\n    processLocalOffer(offer: RTCSessionDescriptionInit): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.pc\n                .setLocalDescription(offer)\n                .then(() => {\n                    const localDescription = this.pc.localDescription;\n                    if (!!localDescription) {\n                        logger.debug('Local description set', localDescription.sdp);\n                        return resolve();\n                    } else {\n                        return reject('Local description is not defined');\n                    }\n                })\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * Other peer initiated negotiation. Step 2/4 of SDP offer-answer protocol\n     */\n    processRemoteOffer(sdpOffer: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const offer: RTCSessionDescriptionInit = {\n                type: 'offer',\n                sdp: sdpOffer\n            };\n            logger.debug('SDP offer received, setting remote description', offer);\n\n            if (this.pc.signalingState === 'closed') {\n                return reject('RTCPeerConnection is closed when trying to set remote description');\n            }\n            this.setRemoteDescription(offer)\n                .then(() => resolve())\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * Other peer initiated negotiation. Step 3/4 of SDP offer-answer protocol\n     */\n    processLocalAnswer(answer: RTCSessionDescriptionInit): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.debug('SDP answer created, setting local description');\n            if (this.pc.signalingState === 'closed') {\n                return reject('RTCPeerConnection is closed when trying to set local description');\n            }\n            this.pc\n                .setLocalDescription(answer)\n                .then(() => resolve())\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * This peer initiated negotiation. Step 4/4 of SDP offer-answer protocol\n     */\n    processRemoteAnswer(sdpAnswer: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const answer: RTCSessionDescriptionInit = {\n                type: 'answer',\n                sdp: sdpAnswer\n            };\n            logger.debug('SDP answer received, setting remote description');\n\n            if (this.pc.signalingState === 'closed') {\n                return reject('RTCPeerConnection is closed when trying to set remote description');\n            }\n            this.setRemoteDescription(answer)\n                .then(() => {\n                    // DEBUG: Uncomment for details.\n                    // {\n                    //     const tc = this.pc.getTransceivers().find((tc) => tc.sender.track?.kind === \"video\");\n                    //     // prettier-ignore\n                    //     logger.debug(`[processRemoteAnswer] Transceiver send parameters (effective):\\n${JSON.stringify(tc?.sender.getParameters(), null, 2)}`);\n                    // }\n\n                    resolve();\n                })\n                .catch((error) => reject(error));\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    async setRemoteDescription(sdp: RTCSessionDescriptionInit): Promise<void> {\n        return this.pc.setRemoteDescription(sdp);\n    }\n\n    /**\n     * Callback function invoked when an ICE candidate is received\n     */\n    addIceCandidate(iceCandidate: RTCIceCandidate): Promise<void> {\n        return new Promise((resolve, reject) => {\n            logger.debug('Remote ICE candidate received', iceCandidate);\n            this.remoteCandidatesQueue.push(iceCandidate);\n            switch (this.pc.signalingState) {\n                case 'closed':\n                    reject(new Error('PeerConnection object is closed'));\n                    break;\n                case 'stable':\n                    if (!!this.pc.remoteDescription) {\n                        this.pc\n                            .addIceCandidate(iceCandidate)\n                            .then(() => resolve())\n                            .catch((error) => reject(error));\n                    } else {\n                        this.iceCandidateList.push(iceCandidate);\n                        resolve();\n                    }\n                    break;\n                default:\n                    this.iceCandidateList.push(iceCandidate);\n                    resolve();\n            }\n        });\n    }\n\n    addIceConnectionStateChangeListener(otherId: string) {\n        this.pc.addEventListener('iceconnectionstatechange', () => {\n            const iceConnectionState: RTCIceConnectionState = this.pc.iceConnectionState;\n            switch (iceConnectionState) {\n                case 'disconnected':\n                    // Possible network disconnection\n                    const msg1 =\n                        'IceConnectionState of RTCPeerConnection ' +\n                        this.configuration.id +\n                        ' (' +\n                        otherId +\n                        ') change to \"disconnected\". Possible network disconnection';\n                    logger.warn(msg1);\n                    this.configuration.onIceConnectionStateException(ExceptionEventName.ICE_CONNECTION_DISCONNECTED, msg1);\n                    break;\n                case 'failed':\n                    const msg2 = 'IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') to \"failed\"';\n                    logger.error(msg2);\n                    this.configuration.onIceConnectionStateException(ExceptionEventName.ICE_CONNECTION_FAILED, msg2);\n                    break;\n                case 'closed':\n                    logger.log(\n                        'IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') change to \"closed\"'\n                    );\n                    break;\n                case 'new':\n                    logger.log('IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') change to \"new\"');\n                    break;\n                case 'checking':\n                    logger.log(\n                        'IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') change to \"checking\"'\n                    );\n                    break;\n                case 'connected':\n                    logger.log(\n                        'IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') change to \"connected\"'\n                    );\n                    break;\n                case 'completed':\n                    logger.log(\n                        'IceConnectionState of RTCPeerConnection ' + this.configuration.id + ' (' + otherId + ') change to \"completed\"'\n                    );\n                    break;\n            }\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    generateUniqueId(): string {\n        return uuidv4();\n    }\n}\n\nexport class WebRtcPeerRecvonly extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'recvonly';\n        super(configuration);\n    }\n}\n\nexport class WebRtcPeerSendonly extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'sendonly';\n        super(configuration);\n    }\n}\n\nexport class WebRtcPeerSendrecv extends WebRtcPeer {\n    constructor(configuration: WebRtcPeerConfiguration) {\n        configuration.mode = 'sendrecv';\n        super(configuration);\n    }\n}\n","/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// tslint:disable:no-string-literal\n\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\ninterface WebrtcStatsConfig {\n    interval: number;\n    httpEndpoint: string;\n}\n\ninterface JSONStatsResponse {\n    '@timestamp': string;\n    participant_id: string;\n    session_id: string;\n    platform: string;\n    platform_description: string;\n    stream: string;\n    webrtc_stats: IWebrtcStats;\n}\n\n/**\n * Common WebRtcSTats for latest Chromium and Firefox versions\n */\ninterface IWebrtcStats {\n    inbound?: {\n        audio:\n            | {\n                  bytesReceived: number;\n                  packetsReceived: number;\n                  packetsLost: number;\n                  jitter: number;\n              }\n            | {};\n        video:\n            | {\n                  bytesReceived: number;\n                  packetsReceived: number;\n                  packetsLost: number;\n                  jitter?: number; // Firefox\n                  jitterBufferDelay?: number; // Chrome\n                  framesDecoded: number;\n                  firCount: number;\n                  nackCount: number;\n                  pliCount: number;\n                  frameHeight?: number; // Chrome\n                  frameWidth?: number; // Chrome\n                  framesDropped?: number; // Chrome\n                  framesReceived?: number; // Chrome\n              }\n            | {};\n    };\n    outbound?: {\n        audio:\n            | {\n                  bytesSent: number;\n                  packetsSent: number;\n              }\n            | {};\n        video:\n            | {\n                  bytesSent: number;\n                  packetsSent: number;\n                  firCount: number;\n                  framesEncoded: number;\n                  nackCount: number;\n                  pliCount: number;\n                  qpSum: number;\n                  frameHeight?: number; // Chrome\n                  frameWidth?: number; // Chrome\n                  framesSent?: number; // Chrome\n              }\n            | {};\n    };\n    candidatepair?: {\n        currentRoundTripTime?: number; // Chrome\n        availableOutgoingBitrate?: number; //Chrome\n        // availableIncomingBitrate?: number // No support for any browsers (https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate)\n    };\n}\n\nexport class WebRtcStats {\n    private readonly STATS_ITEM_NAME = 'webrtc-stats-config';\n\n    private webRtcStatsEnabled = false;\n    private webRtcStatsIntervalId: NodeJS.Timer;\n    private statsInterval = 1;\n    private POST_URL: string;\n\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n    }\n\n    public isEnabled(): boolean {\n        return this.webRtcStatsEnabled;\n    }\n\n    public initWebRtcStats(): void {\n        const webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n        if (!!webrtcObj) {\n            this.webRtcStatsEnabled = true;\n            const webrtcStatsConfig: WebrtcStatsConfig = JSON.parse(webrtcObj);\n            // webrtc object found in local storage\n            logger.warn(\n                'WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId\n            );\n            logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n\n            this.POST_URL = webrtcStatsConfig.httpEndpoint;\n            this.statsInterval = webrtcStatsConfig.interval; // Interval in seconds\n\n            this.webRtcStatsIntervalId = setInterval(async () => {\n                await this.sendStatsToHttpEndpoint();\n            }, this.statsInterval * 1000);\n        } else {\n            logger.debug('WebRtc stats not enabled');\n        }\n    }\n\n    // {\n    // \"localCandidate\": {\n    //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"local-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": false,\n    //     \"networkType\": \"wifi\",\n    //     \"ip\": \"123.45.67.89\",\n    //     \"port\": 63340,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1686052607,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n    //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n    //     ]\n    // },\n    // \"remoteCandidate\": {\n    //     \"id\": \"RTCIceCandidate_1YO18gph\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"remote-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": true,\n    //     \"ip\": \"12.34.56.78\",\n    //     \"port\": 64989,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1679819263,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n    //     ]\n    // }\n    // }\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Firefox 87.0\n    //       - Opera 75.0.3969.93\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - Â¿Ionic?\n    //       - Â¿React Native?\n    public getSelectedIceCandidateInfo(): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n            const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n            let transportStat;\n            const candidatePairs: Map<string, any> = new Map();\n            const localCandidates: Map<string, any> = new Map();\n            const remoteCandidates: Map<string, any> = new Map();\n            statsReport.forEach((stat: any) => {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                    transportStat = stat;\n                }\n                switch (stat.type) {\n                    case 'candidate-pair':\n                        candidatePairs.set(stat.id, stat);\n                        break;\n                    case 'local-candidate':\n                        localCandidates.set(stat.id, stat);\n                        break;\n                    case 'remote-candidate':\n                        remoteCandidates.set(stat.id, stat);\n                        break;\n                }\n            });\n            let selectedCandidatePair;\n            if (transportStat != null) {\n                const selectedCandidatePairId = transportStat.selectedCandidatePairId;\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n            } else {\n                // This is basically Firefox\n                const length = candidatePairs.size;\n                const iterator = candidatePairs.values();\n                for (let i = 0; i < length; i++) {\n                    const candidatePair = iterator.next().value;\n                    if (candidatePair['selected']) {\n                        selectedCandidatePair = candidatePair;\n                        break;\n                    }\n                }\n            }\n            const localCandidateId = selectedCandidatePair.localCandidateId;\n            const remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n            let finalLocalCandidate = localCandidates.get(localCandidateId);\n            if (!!finalLocalCandidate) {\n                const candList = this.stream.getLocalIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (\n                        !!c.candidate &&\n                        (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalLocalCandidate.port) >= 0\n                    );\n                });\n                finalLocalCandidate.raw = [];\n                for (let c of cand) {\n                    finalLocalCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            let finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n            if (!!finalRemoteCandidate) {\n                const candList = this.stream.getRemoteIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (\n                        !!c.candidate &&\n                        (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalRemoteCandidate.port) >= 0\n                    );\n                });\n                finalRemoteCandidate.raw = [];\n                for (let c of cand) {\n                    finalRemoteCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            return resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n            });\n        });\n    }\n\n    public stopWebRtcStats() {\n        if (this.webRtcStatsEnabled) {\n            clearInterval(this.webRtcStatsIntervalId);\n            logger.warn(\n                'WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId\n            );\n        }\n    }\n\n    private async sendStats(url: string, response: JSONStatsResponse): Promise<void> {\n        try {\n            const configuration: RequestInit = {\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(response),\n                method: 'POST'\n            };\n            await fetch(url, configuration);\n        } catch (error) {\n            logger.error(`sendStats error: ${JSON.stringify(error)}`);\n        }\n    }\n\n    private async sendStatsToHttpEndpoint(): Promise<void> {\n        try {\n            const webrtcStats: IWebrtcStats = await this.getCommonStats();\n            const response = this.generateJSONStatsResponse(webrtcStats);\n            await this.sendStats(this.POST_URL, response);\n        } catch (error) {\n            logger.log(error);\n        }\n    }\n\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 75.0.3969.93\n    //       - Firefox 87.0\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - Â¿Ionic?\n    //       - Â¿React Native?\n    public async getCommonStats(): Promise<IWebrtcStats> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n                const response: IWebrtcStats = this.getWebRtcStatsResponseOutline();\n                const videoTrackStats = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                const candidatePairStats = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n\n                statsReport.forEach((stat: any) => {\n                    let mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n                    const addStat = (direction: string, key: string): void => {\n                        if (stat[key] != null && response[direction] != null) {\n                            if (!mediaType && videoTrackStats.indexOf(key) > -1) {\n                                mediaType = 'video';\n                            }\n                            if (direction != null && mediaType != null && key != null && response[direction][mediaType] != null) {\n                                response[direction][mediaType][key] = Number(stat[key]);\n                            } else if (direction != null && key != null && candidatePairStats.includes(key)) {\n                                // candidate-pair-stats\n                                response[direction][key] = Number(stat[key]);\n                            }\n                        }\n                    };\n\n                    switch (stat.type) {\n                        case 'outbound-rtp':\n                            addStat('outbound', 'bytesSent');\n                            addStat('outbound', 'packetsSent');\n                            addStat('outbound', 'framesEncoded');\n                            addStat('outbound', 'nackCount');\n                            addStat('outbound', 'firCount');\n                            addStat('outbound', 'pliCount');\n                            addStat('outbound', 'qpSum');\n                            break;\n                        case 'inbound-rtp':\n                            addStat('inbound', 'bytesReceived');\n                            addStat('inbound', 'packetsReceived');\n                            addStat('inbound', 'packetsLost');\n                            addStat('inbound', 'jitter');\n                            addStat('inbound', 'framesDecoded');\n                            addStat('inbound', 'nackCount');\n                            addStat('inbound', 'firCount');\n                            addStat('inbound', 'pliCount');\n                            break;\n                        case 'track':\n                            addStat('inbound', 'jitterBufferDelay');\n                            addStat('inbound', 'framesReceived');\n                            addStat('outbound', 'framesDropped');\n                            addStat('outbound', 'framesSent');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                            break;\n                        case 'candidate-pair':\n                            addStat('candidatepair', 'currentRoundTripTime');\n                            addStat('candidatepair', 'availableOutgoingBitrate');\n                            break;\n                    }\n                });\n\n                // Delete candidatepair from response if null\n                if (!response?.candidatepair || Object.keys(<Object>response.candidatepair).length === 0) {\n                    delete response.candidatepair;\n                }\n\n                return resolve(response);\n            } catch (error) {\n                logger.error('Error getting common stats: ', error);\n                return reject(error);\n            }\n        });\n    }\n\n    private generateJSONStatsResponse(stats: IWebrtcStats): JSONStatsResponse {\n        return {\n            '@timestamp': new Date().toISOString(),\n            participant_id: this.stream.connection.data,\n            session_id: this.stream.session.sessionId,\n            platform: platform.getName(),\n            platform_description: platform.getDescription(),\n            stream: 'webRTC',\n            webrtc_stats: stats\n        };\n    }\n\n    private getWebRtcStatsResponseOutline(): IWebrtcStats {\n        if (this.stream.isLocal()) {\n            return {\n                outbound: {\n                    audio: {},\n                    video: {}\n                },\n                candidatepair: {}\n            };\n        } else {\n            return {\n                inbound: {\n                    audio: {},\n                    video: {}\n                }\n            };\n        }\n    }\n}\n"],"mappings":"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"}